/**
 * Nucmf_Provisioning
 * UCMF_Provisioning Service. Â© 2021, 3GPP Organizational Partners (ARIB, ATIS,
 * CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.1.0-alpha.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

/*
 * IndividualUERadioCapabilityProvisioningDocumentApiImpl.h
 *
 *
 */

#ifndef INDIVIDUAL_UE_RADIO_CAPABILITY_PROVISIONING_DOCUMENT_API_IMPL_H_
#define INDIVIDUAL_UE_RADIO_CAPABILITY_PROVISIONING_DOCUMENT_API_IMPL_H_

#include <memory>

#include "ProblemDetails.h"
#include "RacsData.h"
#include "RacsDataPatch.h"
#include "RacsFailureReport.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class IndividualUERadioCapabilityProvisioningDocumentApiImpl
    : public org::openapitools::server::api::
          IndividualUERadioCapabilityProvisioningDocumentApi {
public:
  IndividualUERadioCapabilityProvisioningDocumentApiImpl(){};
  ~IndividualUERadioCapabilityProvisioningDocumentApiImpl() {}

  static void get_provisioning(const std::string &provisioningId,
                               response &responseIn) {
    // not implement
  }
  static void remove_provisioning(const std::string &provisioningId,
                                  response &responseIn) {
    // not implement
  }
  static void replace_provisioning(const std::string &provisioningId,
                                   const RacsData &racsData,
                                   response &responseIn) {
    // not implement
  }
  static void update_provisioning(const std::string &provisioningId,
                                  const RacsDataPatch &racsDataPatch,
                                  response &responseIn) {
    // not implement
  }
};

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org

#endif