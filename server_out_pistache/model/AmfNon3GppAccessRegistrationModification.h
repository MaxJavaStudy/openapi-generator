/**
* Nudm_UECM
* Nudm Context Management Service. ï¿½ 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.1.2
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * AmfNon3GppAccessRegistrationModification.h
 *
 * 
 */

#ifndef AmfNon3GppAccessRegistrationModification_H_
#define AmfNon3GppAccessRegistrationModification_H_


#include "ImsVoPs.h"
#include <string>
#include "BackupAmfInfo.h"
#include <vector>
#include "Guami.h"
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  AmfNon3GppAccessRegistrationModification
{
public:
    AmfNon3GppAccessRegistrationModification();
    virtual ~AmfNon3GppAccessRegistrationModification();

    void validate();

    /////////////////////////////////////////////
    /// AmfNon3GppAccessRegistrationModification members

    /// <summary>
    /// 
    /// </summary>
    Guami getGuami() const;
    void setGuami(Guami const& value);
    /// <summary>
    /// 
    /// </summary>
    bool isPurgeFlag() const;
    void setPurgeFlag(bool const value);
    bool purgeFlagIsSet() const;
    void unsetPurgeFlag();
    /// <summary>
    /// 
    /// </summary>
    std::string getPei() const;
    void setPei(std::string const& value);
    bool peiIsSet() const;
    void unsetPei();
    /// <summary>
    /// 
    /// </summary>
    ImsVoPs getImsVoPs() const;
    void setImsVoPs(ImsVoPs const& value);
    bool imsVoPsIsSet() const;
    void unsetImsVoPs();
    /// <summary>
    /// 
    /// </summary>
    std::vector<BackupAmfInfo>& getBackupAmfInfo();
    void setBackupAmfInfo(std::vector<BackupAmfInfo> const& value);
    bool backupAmfInfoIsSet() const;
    void unsetBackupAmfInfo();

    friend void to_json(nlohmann::json& j, const AmfNon3GppAccessRegistrationModification& o);
    friend void from_json(const nlohmann::json& j, AmfNon3GppAccessRegistrationModification& o);
protected:
    Guami m_Guami;

    bool m_PurgeFlag;
    bool m_PurgeFlagIsSet;
    std::string m_Pei;
    bool m_PeiIsSet;
    ImsVoPs m_ImsVoPs;
    bool m_ImsVoPsIsSet;
    std::vector<BackupAmfInfo> m_BackupAmfInfo;
    bool m_BackupAmfInfoIsSet;
};

}
}
}
}

#endif /* AmfNon3GppAccessRegistrationModification_H_ */
