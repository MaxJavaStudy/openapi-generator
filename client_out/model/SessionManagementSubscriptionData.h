/**
 * Nudm_SDM
 * Nudm Subscriber Data Management Service. ï¿½ 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 2.1.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.1.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SessionManagementSubscriptionData.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_SessionManagementSubscriptionData_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_SessionManagementSubscriptionData_H_


#include "../ModelBase.h"

#include "SuggestedPacketNumDl.h"
#include "ExpectedUeBehaviourData.h"
#include "OdbPacketServices.h"
#include "DnnConfiguration.h"
#include <cpprest/details/basic_types.h>
#include <map>
#include "Snssai.h"
#include "TraceData.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  SessionManagementSubscriptionData
    : public ModelBase
{
public:
    SessionManagementSubscriptionData();
    virtual ~SessionManagementSubscriptionData();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SessionManagementSubscriptionData members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Snssai> getSingleNssai() const;
    bool singleNssaiIsSet() const;
    void unsetSingleNssai();

    void setSingleNssai(const std::shared_ptr<Snssai>& value);

    /// <summary>
    /// A map (list of key-value pairs where Dnn, or optionally the Wildcard DNN, serves as key) of DnnConfigurations
    /// </summary>
    std::map<utility::string_t, std::shared_ptr<DnnConfiguration>>& getDnnConfigurations();
    bool dnnConfigurationsIsSet() const;
    void unsetDnnConfigurations();

    void setDnnConfigurations(const std::map<utility::string_t, std::shared_ptr<DnnConfiguration>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<utility::string_t>>& getInternalGroupIds();
    bool internalGroupIdsIsSet() const;
    void unsetInternalGroupIds();

    void setInternalGroupIds(const std::vector<std::shared_ptr<utility::string_t>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::map<utility::string_t, std::shared_ptr<utility::string_t>>& getSharedVnGroupDataIds();
    bool sharedVnGroupDataIdsIsSet() const;
    void unsetSharedVnGroupDataIds();

    void setSharedVnGroupDataIds(const std::map<utility::string_t, std::shared_ptr<utility::string_t>>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSharedDnnConfigurationsId() const;
    bool sharedDnnConfigurationsIdIsSet() const;
    void unsetSharedDnnConfigurationsId();

    void setSharedDnnConfigurationsId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<OdbPacketServices> getOdbPacketServices() const;
    bool odbPacketServicesIsSet() const;
    void unsetOdbPacketServices();

    void setOdbPacketServices(const std::shared_ptr<OdbPacketServices>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<TraceData> getTraceData() const;
    bool traceDataIsSet() const;
    void unsetTraceData();

    void setTraceData(const std::shared_ptr<TraceData>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSharedTraceDataId() const;
    bool sharedTraceDataIdIsSet() const;
    void unsetSharedTraceDataId();

    void setSharedTraceDataId(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::map<utility::string_t, std::shared_ptr<ExpectedUeBehaviourData>>& getExpectedUeBehavioursList();
    bool expectedUeBehavioursListIsSet() const;
    void unsetExpectedUeBehavioursList();

    void setExpectedUeBehavioursList(const std::map<utility::string_t, std::shared_ptr<ExpectedUeBehaviourData>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::map<utility::string_t, std::shared_ptr<SuggestedPacketNumDl>>& getSuggestedPacketNumDlList();
    bool suggestedPacketNumDlListIsSet() const;
    void unsetSuggestedPacketNumDlList();

    void setSuggestedPacketNumDlList(const std::map<utility::string_t, std::shared_ptr<SuggestedPacketNumDl>>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getR3gppChargingCharacteristics() const;
    bool r3gppChargingCharacteristicsIsSet() const;
    void unsetr_3gppChargingCharacteristics();

    void setR3gppChargingCharacteristics(const utility::string_t& value);


protected:
    std::shared_ptr<Snssai> m_SingleNssai;
    bool m_SingleNssaiIsSet;
    std::map<utility::string_t, std::shared_ptr<DnnConfiguration>> m_DnnConfigurations;
    bool m_DnnConfigurationsIsSet;
    std::vector<std::shared_ptr<utility::string_t>> m_InternalGroupIds;
    bool m_InternalGroupIdsIsSet;
    std::map<utility::string_t, std::shared_ptr<utility::string_t>> m_SharedVnGroupDataIds;
    bool m_SharedVnGroupDataIdsIsSet;
    utility::string_t m_SharedDnnConfigurationsId;
    bool m_SharedDnnConfigurationsIdIsSet;
    std::shared_ptr<OdbPacketServices> m_OdbPacketServices;
    bool m_OdbPacketServicesIsSet;
    std::shared_ptr<TraceData> m_TraceData;
    bool m_TraceDataIsSet;
    utility::string_t m_SharedTraceDataId;
    bool m_SharedTraceDataIdIsSet;
    std::map<utility::string_t, std::shared_ptr<ExpectedUeBehaviourData>> m_ExpectedUeBehavioursList;
    bool m_ExpectedUeBehavioursListIsSet;
    std::map<utility::string_t, std::shared_ptr<SuggestedPacketNumDl>> m_SuggestedPacketNumDlList;
    bool m_SuggestedPacketNumDlListIsSet;
    utility::string_t m_r_3gppChargingCharacteristics;
    bool m_r_3gppChargingCharacteristicsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_SessionManagementSubscriptionData_H_ */
