/**
 * Nudm_SDM
 * Nudm Subscriber Data Management Service. ï¿½ 2020, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 2.1.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SubscriptionDeletionApi.c
 *
 *
 */

#include "jsonParser.hpp"

#include <nghttp2/asio_http2_server.h>

#include "SubscriptionDeletionApi.h"
#include "SubscriptionDeletionApiImpl.h"

using namespace nghttp2::asio_http2::server;
using namespace nghttp2::asio_http2;

#include "ProblemDetails.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

void SubscriptionDeletionApi::unsubscribe_handler(request &requestIn,
                                                  response &responseIn) {
  // Getting the path params
  //  //<param name="ueId">Identity of the user parameter type std::string
  //  </param>
  // openAPI type:   string
  std::string ueId;

  if (requestIn.param().count("ueId")) {

    // to do : more rainy day consider?

    // it is string
    ueId = requestIn.param()["ueId"];
  }
  //  //<param name="subscriptionId">Id of the SDM Subscription parameter type
  //  std::string </param>
  // openAPI type:   string
  std::string subscriptionId;

  if (requestIn.param().count("subscriptionId")) {

    // to do : more rainy day consider?

    // it is string
    subscriptionId = requestIn.param()["subscriptionId"];
  }

  try {
    /// <param name="ueId">Identity of the user</param>
    /// <param name="subscriptionId">Id of the SDM Subscription</param>
    SubscriptionDeletionApiImpl::unsubscribe(ueId, subscriptionId, requestIn,
                                             responseIn);

  } catch (std::exception &e) {
    responseIn.write_head(500);
    responseIn.end(e.what());
    // send a 500 error
    return;
  }
}

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org
