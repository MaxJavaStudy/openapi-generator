/**
 * Nucmf_UECapabilityManagement
 * Nucmf_UECapabilityManagement Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * SubscriptionsCollectionApi.c
 *
 *
 */

#include "jsonParser.hpp"

#include <nghttp2/asio_http2_server.h>

#include "SubscriptionsCollectionApi.h"
#include "SubscriptionsCollectionApiImpl.h"

using namespace nghttp2::asio_http2::server;
using namespace nghttp2::asio_http2;

#include "CreateSubscription.h"
#include "CreatedSubscription.h"
#include "ProblemDetails.h"

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

void SubscriptionsCollectionApi::create_individual_subcription_handler(
    request &requestIn, response &responseIn) {

  // Getting the body param
  //
  //<param name="createSubscription"> parameter type CreateSubscription </param>

  CreateSubscription createSubscription;

  try {
    // nlohmann::json::parse(requestIn.body()).get_to(createSubscription);
    staticjson::ParseStatus result;
    createSubscription.decode(requestIn.body(), result);
    /// <param name="createSubscription"></param>
    SubscriptionsCollectionApiImpl::create_individual_subcription(
        createSubscription, requestIn, responseIn);

  } catch (std::exception &e) {
    responseIn.write_head(500);
    responseIn.end(e.what());
    // send a 500 error
    return;
  }
}

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org
