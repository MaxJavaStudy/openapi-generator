/**
* Nudm_SDM
* Nudm Subscriber Data Management Service. ï¿½ 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 2.1.2
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * V2XSubscriptionDataRetrievalApi.h
 *
 * 
 */

#ifndef V2XSubscriptionDataRetrievalApi_H_
#define V2XSubscriptionDataRetrievalApi_H_






#include "V2XSubscriptionDataRetrievalApiImpl.h"

#include "ProblemDetails.h"
#include "V2xSubscriptionData.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

class  V2XSubscriptionDataRetrievalApi {
public:
    V2XSubscriptionDataRetrievalApi();
    virtual ~V2XSubscriptionDataRetrievalApi() {}
 



private:
   

    static void get_v2x_data_handler(request &requestIn,  response responseIn)
    {
    // Getting the path params
    std::string supi;

    if(request.param.count("supi"))
    {
      supi = request.param["supi"];
    }
    
    
    
    // Getting the query params
    auto supportedFeaturesQuery = request.uri().get("supported-features");
    std::optional<std::string> supportedFeatures;

    if(!supportedFeaturesQuery.isEmpty()){
      supportedFeatures = supportedFeaturesQuery;
    }
    
    // Getting the header params
    std::string ifNoneMatch;
    if(request.header().count("If-None-Match"))
    {
      ifNoneMatch = request.header()["If-None-Match"].value;
    }
    std::string ifModifiedSince;
    if(request.header().count("If-Modified-Since"))
    {
      ifModifiedSince = request.header()["If-Modified-Since"].value;
    }

    try {
    /// <param name="supi">Identifier of the UE</param>
    /// <param name="supportedFeatures">Supported Features (optional, default to &quot;&quot;)</param>
    /// <param name="ifNoneMatch">Validator for conditional requests, as described in RFC 7232, 3.2 (optional, default to &quot;&quot;)</param>
    /// <param name="ifModifiedSince">Validator for conditional requests, as described in RFC 7232, 3.3 (optional, default to &quot;&quot;)</param>
      V2XSubscriptionDataRetrievalApiImpl::get_v2x_data(supi, supportedFeatures, ifNoneMatch, ifModifiedSince, response);
   
    }  catch (std::exception &e) {
        responseIn.write_head(500);
        responseIn.end(e.what());
        //send a 500 error
        return;
    }
    }
   
 

};

}
}
}
}

#endif /* V2XSubscriptionDataRetrievalApi_H_ */

