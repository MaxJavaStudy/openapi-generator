/**
 * Nucmf_UECapabilityManagement
 * Nucmf_UECapabilityManagement Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * PlmnIdNid.h
 *
 *
 */

#ifndef PlmnIdNid_H_
#define PlmnIdNid_H_

#include "jsonParser.hpp"
#include <string>
#include <type_traits>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
///
/// </summary>
class PlmnIdNid : public jsonParser::jsonParser<PlmnIdNid> {
public:
  explicit PlmnIdNid() {
    // constructor
    m_Mcc = "";

    m_MccFlag = staticjson::Flags::Default;
    m_Mnc = "";

    m_MncFlag = staticjson::Flags::Default;
    m_Nid = "";

    m_NidFlag = (staticjson::Flags::Optional);
  };
  virtual ~PlmnIdNid(){};

  void staticjson_init(staticjson::ObjectHandler *h) {

    // static json settings members vars : Mcc Mnc Nid
    h->add_property("mcc", &this->m_Mcc, m_MccFlag);
    h->add_property("mnc", &this->m_Mnc, m_MncFlag);
    h->add_property("nid", &this->m_Nid, m_NidFlag);

    h->set_flags(staticjson::Flags::Default |
                 staticjson::Flags::DisallowUnknownKey);
  }
  template <typename T>
  static std::string convert2string(std::string name,
                                    const std::vector<T> &obj) {
    std::stringstream o;
    o << "name : ";
    for (auto it : obj) {
      o << it;
    }
    o << std::endl;

    return o.str();
  }

  template <typename T, typename T1>
  static std::string convert2string(std::string name,
                                    const std::map<T, T1> &obj) {
    std::stringstream out;
    out << "name : ";
    for (auto it : obj) {
      out << it.first << ":" << it.second << " ";
    }
    out << std::endl;
    return out.str();
  }

  friend std::ostream &operator<<(std::ostream &o, const PlmnIdNid &obj) {

    o << "Mcc : " << obj.m_Mcc << std::endl;

    o << "Mnc : " << obj.m_Mnc << std::endl;

    o << "Nid : " << obj.m_Nid << std::endl;

    return o;
  }

  /////////////////////////////////////////////
  /// PlmnIdNid members vars : Mcc Mnc Nid

  std::string getMcc() const { return m_Mcc; }
  void setMcc(std::string const &value) { m_Mcc = value; }

  std::string getMnc() const { return m_Mnc; }
  void setMnc(std::string const &value) { m_Mnc = value; }

  std::string getNid() const { return m_Nid; }
  void setNid(std::string const &value) { m_Nid = value; }

public:
  std::string m_Mcc;

  unsigned m_MccFlag;
  std::string m_Mnc;

  unsigned m_MncFlag;
  std::string m_Nid;

  unsigned m_NidFlag;
};
} // namespace model
} // namespace server
} // namespace openapitools
} // namespace org

#endif /* PlmnIdNid_H_ */
