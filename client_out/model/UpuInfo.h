/**
 * Nudm_SDM
 * Nudm Subscriber Data Management Service. ï¿½ 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 2.1.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.1.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UpuInfo.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_UpuInfo_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_UpuInfo_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "UpuData.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  UpuInfo
    : public ModelBase
{
public:
    UpuInfo();
    virtual ~UpuInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UpuInfo members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<UpuData>>& getUpuDataList();
    bool upuDataListIsSet() const;
    void unsetUpuDataList();

    void setUpuDataList(const std::vector<std::shared_ptr<UpuData>>& value);

    /// <summary>
    /// 
    /// </summary>
    bool isUpuRegInd() const;
    bool upuRegIndIsSet() const;
    void unsetUpuRegInd();

    void setUpuRegInd(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isUpuAckInd() const;
    bool upuAckIndIsSet() const;
    void unsetUpuAckInd();

    void setUpuAckInd(bool value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUpuMacIausf() const;
    bool upuMacIausfIsSet() const;
    void unsetUpuMacIausf();

    void setUpuMacIausf(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getCounterUpu() const;
    bool counterUpuIsSet() const;
    void unsetCounterUpu();

    void setCounterUpu(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getProvisioningTime() const;
    bool provisioningTimeIsSet() const;
    void unsetProvisioningTime();

    void setProvisioningTime(const utility::datetime& value);


protected:
    std::vector<std::shared_ptr<UpuData>> m_UpuDataList;
    bool m_UpuDataListIsSet;
    bool m_UpuRegInd;
    bool m_UpuRegIndIsSet;
    bool m_UpuAckInd;
    bool m_UpuAckIndIsSet;
    utility::string_t m_UpuMacIausf;
    bool m_UpuMacIausfIsSet;
    utility::string_t m_CounterUpu;
    bool m_CounterUpuIsSet;
    utility::datetime m_ProvisioningTime;
    bool m_ProvisioningTimeIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_UpuInfo_H_ */
