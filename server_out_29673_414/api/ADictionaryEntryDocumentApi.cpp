/**
 * Nucmf_UECapabilityManagement
 * Nucmf_UECapabilityManagement Service. Â© 2021, 3GPP Organizational Partners
 * (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */
/*
 * ADictionaryEntryDocumentApi.c
 *
 *
 */

#include "jsonParser.hpp"

#include <nghttp2/asio_http2_server.h>

#include "ADictionaryEntryDocumentApi.h"
#include "ADictionaryEntryDocumentApiImpl.h"

using namespace nghttp2::asio_http2::server;
using namespace nghttp2::asio_http2;

#include "DicEntryCreateData.h"
#include "DicEntryCreatedData.h"
#include "ProblemDetails.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

void ADictionaryEntryDocumentApi::create_dictionary_entry_handler(
    request &requestIn, response &responseIn) {

  // Form parameters
  // to do  do the multipart decode here()
  //<param name="jsonData"> parameter type DicEntryCreateData   (optional,
  //default to DicEntryCreateData())</param>
  DicEntryCreateData
      jsonData; //= getBianryPart<DicEntryCreateData>("jsonData", );
  //<param name="binaryDataUeRadioCapability5GS"> parameter type std::string
  //(optional, default to &quot;&quot;)</param>
  std::string binaryDataUeRadioCapability5GS; //=
                                              //getBianryPart<std::string>("binaryDataUeRadioCapability5GS",
                                              //);
  //<param name="binaryDataUeRadioCapabilityEPS"> parameter type std::string
  //(optional, default to &quot;&quot;)</param>
  std::string binaryDataUeRadioCapabilityEPS; //=
                                              //getBianryPart<std::string>("binaryDataUeRadioCapabilityEPS",
                                              //);

  // end of Form parameter

  try {
    /// <param name="jsonData"> (optional, default to
    /// DicEntryCreateData())</param> <param
    /// name="binaryDataUeRadioCapability5GS"> (optional, default to
    /// &quot;&quot;)</param> <param name="binaryDataUeRadioCapabilityEPS">
    /// (optional, default to &quot;&quot;)</param>
    ADictionaryEntryDocumentApiImpl::create_dictionary_entry(
        jsonData, binaryDataUeRadioCapability5GS,
        binaryDataUeRadioCapabilityEPS, requestIn, responseIn);

  } catch (std::exception &e) {
    responseIn.write_head(500);
    responseIn.end(e.what());
    // send a 500 error
    return;
  }
}

} // namespace api
} // namespace server
} // namespace openapitools
} // namespace org
