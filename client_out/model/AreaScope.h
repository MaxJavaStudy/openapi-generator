/**
 * Nudm_SDM
 * Nudm Subscriber Data Management Service. ï¿½ 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 2.1.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.1.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * AreaScope.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_AreaScope_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_AreaScope_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <map>
#include <vector>
#include "TacInfo.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  AreaScope
    : public ModelBase
{
public:
    AreaScope();
    virtual ~AreaScope();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// AreaScope members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<utility::string_t>>& getEutraCellIdList();
    bool eutraCellIdListIsSet() const;
    void unsetEutraCellIdList();

    void setEutraCellIdList(const std::vector<std::shared_ptr<utility::string_t>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<utility::string_t>>& getNrCellIdList();
    bool nrCellIdListIsSet() const;
    void unsetNrCellIdList();

    void setNrCellIdList(const std::vector<std::shared_ptr<utility::string_t>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<utility::string_t>>& getTacList();
    bool tacListIsSet() const;
    void unsetTacList();

    void setTacList(const std::vector<std::shared_ptr<utility::string_t>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::map<utility::string_t, std::shared_ptr<TacInfo>>& getTacInfoPerPlmn();
    bool tacInfoPerPlmnIsSet() const;
    void unsetTacInfoPerPlmn();

    void setTacInfoPerPlmn(const std::map<utility::string_t, std::shared_ptr<TacInfo>>& value);


protected:
    std::vector<std::shared_ptr<utility::string_t>> m_EutraCellIdList;
    bool m_EutraCellIdListIsSet;
    std::vector<std::shared_ptr<utility::string_t>> m_NrCellIdList;
    bool m_NrCellIdListIsSet;
    std::vector<std::shared_ptr<utility::string_t>> m_TacList;
    bool m_TacListIsSet;
    std::map<utility::string_t, std::shared_ptr<TacInfo>> m_TacInfoPerPlmn;
    bool m_TacInfoPerPlmnIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_AreaScope_H_ */
