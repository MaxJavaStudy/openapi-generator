/**
 * Nudm_SDM
 * Nudm Subscriber Data Management Service. ï¿½ 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 2.1.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.1.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ServiceTypeUnrelatedClass.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ServiceTypeUnrelatedClass_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ServiceTypeUnrelatedClass_H_


#include "../ModelBase.h"

#include "GeographicArea.h"
#include "CodeWordInd.h"
#include "ValidTimePeriod.h"
#include <cpprest/details/basic_types.h>
#include "PrivacyCheckRelatedAction.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  ServiceTypeUnrelatedClass
    : public ModelBase
{
public:
    ServiceTypeUnrelatedClass();
    virtual ~ServiceTypeUnrelatedClass();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ServiceTypeUnrelatedClass members

    /// <summary>
    /// 
    /// </summary>
    int32_t getServiceType() const;
    bool serviceTypeIsSet() const;
    void unsetServiceType();

    void setServiceType(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<GeographicArea>>& getAllowedGeographicArea();
    bool allowedGeographicAreaIsSet() const;
    void unsetAllowedGeographicArea();

    void setAllowedGeographicArea(const std::vector<std::shared_ptr<GeographicArea>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<PrivacyCheckRelatedAction> getPrivacyCheckRelatedAction() const;
    bool privacyCheckRelatedActionIsSet() const;
    void unsetPrivacyCheckRelatedAction();

    void setPrivacyCheckRelatedAction(const std::shared_ptr<PrivacyCheckRelatedAction>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<CodeWordInd> getCodeWordInd() const;
    bool codeWordIndIsSet() const;
    void unsetCodeWordInd();

    void setCodeWordInd(const std::shared_ptr<CodeWordInd>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<ValidTimePeriod> getValidTimePeriod() const;
    bool validTimePeriodIsSet() const;
    void unsetValidTimePeriod();

    void setValidTimePeriod(const std::shared_ptr<ValidTimePeriod>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<utility::string_t>>& getCodeWordList();
    bool codeWordListIsSet() const;
    void unsetCodeWordList();

    void setCodeWordList(const std::vector<std::shared_ptr<utility::string_t>>& value);


protected:
    int32_t m_ServiceType;
    bool m_ServiceTypeIsSet;
    std::vector<std::shared_ptr<GeographicArea>> m_AllowedGeographicArea;
    bool m_AllowedGeographicAreaIsSet;
    std::shared_ptr<PrivacyCheckRelatedAction> m_PrivacyCheckRelatedAction;
    bool m_PrivacyCheckRelatedActionIsSet;
    std::shared_ptr<CodeWordInd> m_CodeWordInd;
    bool m_CodeWordIndIsSet;
    std::shared_ptr<ValidTimePeriod> m_ValidTimePeriod;
    bool m_ValidTimePeriodIsSet;
    std::vector<std::shared_ptr<utility::string_t>> m_CodeWordList;
    bool m_CodeWordListIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ServiceTypeUnrelatedClass_H_ */
