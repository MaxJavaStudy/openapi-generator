/**
 * Nudm_SDM
 * Nudm Subscriber Data Management Service. ï¿½ 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 2.1.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.1.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * LcsPrivacyData.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_LcsPrivacyData_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_LcsPrivacyData_H_


#include "../ModelBase.h"

#include "UnrelatedClass.h"
#include "PlmnOperatorClass.h"
#include <vector>
#include "Lpi.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  LcsPrivacyData
    : public ModelBase
{
public:
    LcsPrivacyData();
    virtual ~LcsPrivacyData();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// LcsPrivacyData members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Lpi> getLpi() const;
    bool lpiIsSet() const;
    void unsetLpi();

    void setLpi(const std::shared_ptr<Lpi>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<UnrelatedClass> getUnrelatedClass() const;
    bool unrelatedClassIsSet() const;
    void unsetUnrelatedClass();

    void setUnrelatedClass(const std::shared_ptr<UnrelatedClass>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<PlmnOperatorClass>>& getPlmnOperatorClasses();
    bool plmnOperatorClassesIsSet() const;
    void unsetPlmnOperatorClasses();

    void setPlmnOperatorClasses(const std::vector<std::shared_ptr<PlmnOperatorClass>>& value);


protected:
    std::shared_ptr<Lpi> m_Lpi;
    bool m_LpiIsSet;
    std::shared_ptr<UnrelatedClass> m_UnrelatedClass;
    bool m_UnrelatedClassIsSet;
    std::vector<std::shared_ptr<PlmnOperatorClass>> m_PlmnOperatorClasses;
    bool m_PlmnOperatorClassesIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_LcsPrivacyData_H_ */
