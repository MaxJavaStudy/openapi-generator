/**
 * Nudm_SDM
 * Nudm Subscriber Data Management Service. ï¿½ 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 2.1.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.1.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SmsManagementSubscriptionData.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_SmsManagementSubscriptionData_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_SmsManagementSubscriptionData_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "TraceData.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  SmsManagementSubscriptionData
    : public ModelBase
{
public:
    SmsManagementSubscriptionData();
    virtual ~SmsManagementSubscriptionData();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SmsManagementSubscriptionData members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSupportedFeatures() const;
    bool supportedFeaturesIsSet() const;
    void unsetSupportedFeatures();

    void setSupportedFeatures(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    bool isMtSmsSubscribed() const;
    bool mtSmsSubscribedIsSet() const;
    void unsetMtSmsSubscribed();

    void setMtSmsSubscribed(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isMtSmsBarringAll() const;
    bool mtSmsBarringAllIsSet() const;
    void unsetMtSmsBarringAll();

    void setMtSmsBarringAll(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isMtSmsBarringRoaming() const;
    bool mtSmsBarringRoamingIsSet() const;
    void unsetMtSmsBarringRoaming();

    void setMtSmsBarringRoaming(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isMoSmsSubscribed() const;
    bool moSmsSubscribedIsSet() const;
    void unsetMoSmsSubscribed();

    void setMoSmsSubscribed(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isMoSmsBarringAll() const;
    bool moSmsBarringAllIsSet() const;
    void unsetMoSmsBarringAll();

    void setMoSmsBarringAll(bool value);

    /// <summary>
    /// 
    /// </summary>
    bool isMoSmsBarringRoaming() const;
    bool moSmsBarringRoamingIsSet() const;
    void unsetMoSmsBarringRoaming();

    void setMoSmsBarringRoaming(bool value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<utility::string_t>>& getSharedSmsMngDataIds();
    bool sharedSmsMngDataIdsIsSet() const;
    void unsetSharedSmsMngDataIds();

    void setSharedSmsMngDataIds(const std::vector<std::shared_ptr<utility::string_t>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<TraceData> getTraceData() const;
    bool traceDataIsSet() const;
    void unsetTraceData();

    void setTraceData(const std::shared_ptr<TraceData>& value);


protected:
    utility::string_t m_SupportedFeatures;
    bool m_SupportedFeaturesIsSet;
    bool m_MtSmsSubscribed;
    bool m_MtSmsSubscribedIsSet;
    bool m_MtSmsBarringAll;
    bool m_MtSmsBarringAllIsSet;
    bool m_MtSmsBarringRoaming;
    bool m_MtSmsBarringRoamingIsSet;
    bool m_MoSmsSubscribed;
    bool m_MoSmsSubscribedIsSet;
    bool m_MoSmsBarringAll;
    bool m_MoSmsBarringAllIsSet;
    bool m_MoSmsBarringRoaming;
    bool m_MoSmsBarringRoamingIsSet;
    std::vector<std::shared_ptr<utility::string_t>> m_SharedSmsMngDataIds;
    bool m_SharedSmsMngDataIdsIsSet;
    std::shared_ptr<TraceData> m_TraceData;
    bool m_TraceDataIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_SmsManagementSubscriptionData_H_ */
