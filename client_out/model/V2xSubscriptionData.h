/**
 * Nudm_SDM
 * Nudm Subscriber Data Management Service. ï¿½ 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 2.1.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.1.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * V2xSubscriptionData.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_V2xSubscriptionData_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_V2xSubscriptionData_H_


#include "../ModelBase.h"

#include "NrV2xAuth.h"
#include "LteV2xAuth.h"
#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  V2xSubscriptionData
    : public ModelBase
{
public:
    V2xSubscriptionData();
    virtual ~V2xSubscriptionData();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// V2xSubscriptionData members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<NrV2xAuth> getNrV2xServicesAuth() const;
    bool nrV2xServicesAuthIsSet() const;
    void unsetNrV2xServicesAuth();

    void setNrV2xServicesAuth(const std::shared_ptr<NrV2xAuth>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<LteV2xAuth> getLteV2xServicesAuth() const;
    bool lteV2xServicesAuthIsSet() const;
    void unsetLteV2xServicesAuth();

    void setLteV2xServicesAuth(const std::shared_ptr<LteV2xAuth>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getNrUePc5Ambr() const;
    bool nrUePc5AmbrIsSet() const;
    void unsetNrUePc5Ambr();

    void setNrUePc5Ambr(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLtePc5Ambr() const;
    bool ltePc5AmbrIsSet() const;
    void unsetLtePc5Ambr();

    void setLtePc5Ambr(const utility::string_t& value);


protected:
    std::shared_ptr<NrV2xAuth> m_NrV2xServicesAuth;
    bool m_NrV2xServicesAuthIsSet;
    std::shared_ptr<LteV2xAuth> m_LteV2xServicesAuth;
    bool m_LteV2xServicesAuthIsSet;
    utility::string_t m_NrUePc5Ambr;
    bool m_NrUePc5AmbrIsSet;
    utility::string_t m_LtePc5Ambr;
    bool m_LtePc5AmbrIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_V2xSubscriptionData_H_ */
