[main] INFO  o.o.c.l.CppNghttp2ServerServerCodegen - Using get/set-based model template
[main] INFO  o.o.codegen.DefaultGenerator - Generating with dryRun=false
[main] INFO  o.o.codegen.DefaultGenerator - OpenAPI Generator: cppnghttp2server (server)
[main] INFO  o.o.codegen.DefaultGenerator - Generator 'cppnghttp2server' is considered stable.
[main] WARN  o.o.codegen.DefaultCodegen - 'oneOf' is intended to include only the additional optional OAS extension discriminator object. For more details, see https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.section.9.2.1.3 and the OAS section on 'Composition and Inheritance'.
[main] WARN  o.o.codegen.DefaultCodegen - manAssOpRequestlist (oneOf schema) already has `AnyType` defined and therefore it's skipped.
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/AccessTokenErr.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/AccessTokenErr.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/AccessTokenReq.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/AccessTokenReq.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/CreateSubscription.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/CreateSubscription.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/CreatedSubscription.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/CreatedSubscription.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/DicEntryCreateData.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/DicEntryCreateData.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/DicEntryCreatedData.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/DicEntryCreatedData.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/DicEntryData.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/DicEntryData.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/EventType.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/EventType.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/Inline_object.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/Inline_object.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/Inline_response_200.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/Inline_response_200.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/InvalidParam.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/InvalidParam.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/ManAssOpRequestlist.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/ManAssOpRequestlist.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/NFType.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/NFType.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/PlmnId.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/PlmnId.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/PlmnIdNid.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/PlmnIdNid.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/ProblemDetails.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/ProblemDetails.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/RacFormat.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/RacFormat.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/RefToBinaryData.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/RefToBinaryData.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/Snssai.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/Snssai.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/UcmfNotification.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/UcmfNotification.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/model/UeRadioCapaId.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/model/UeRadioCapaId.h
[main] INFO  o.o.codegen.DefaultGenerator - ############ Model info ############
[ {
  "importPath" : "#include \"AccessTokenErr.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "AccessTokenErr",
    "classname" : "AccessTokenErr",
    "description" : "Error returned in the access token response message",
    "classVarName" : "AccessTokenErr",
    "modelJson" : "{\n  \"required\" : [ \"error\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"error\" : {\n      \"type\" : \"string\",\n      \"enum\" : [ \"invalid_request\", \"invalid_client\", \"invalid_grant\", \"unauthorized_client\", \"unsupported_grant_type\", \"invalid_scope\" ]\n    },\n    \"error_description\" : {\n      \"type\" : \"string\"\n    },\n    \"error_uri\" : {\n      \"type\" : \"string\"\n    }\n  },\n  \"description\" : \"Error returned in the access token response message\"\n}",
    "dataType" : "Object",
    "classFilename" : "AccessTokenErr",
    "unescapedDescription" : "Error returned in the access token response message",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "string",
      "baseName" : "error",
      "complexType" : "std::string",
      "getter" : "getError",
      "setter" : "setError",
      "dataType" : "std::string",
      "datatypeWithEnum" : "ErrorEnum",
      "name" : "Error",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.error;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"enum\" : [ \"invalid_request\", \"invalid_client\", \"invalid_grant\", \"unauthorized_client\", \"unsupported_grant_type\", \"invalid_scope\" ]\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : true,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "_enum" : [ "invalid_request", "invalid_client", "invalid_grant", "unauthorized_client", "unsupported_grant_type", "invalid_scope" ],
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "INVALID_REQUEST",
          "isString" : false,
          "value" : "invalid_request"
        }, {
          "name" : "INVALID_CLIENT",
          "isString" : false,
          "value" : "invalid_client"
        }, {
          "name" : "INVALID_GRANT",
          "isString" : false,
          "value" : "invalid_grant"
        }, {
          "name" : "UNAUTHORIZED_CLIENT",
          "isString" : false,
          "value" : "unauthorized_client"
        }, {
          "name" : "UNSUPPORTED_GRANT_TYPE",
          "isString" : false,
          "value" : "unsupported_grant_type"
        }, {
          "name" : "INVALID_SCOPE",
          "isString" : false,
          "value" : "invalid_scope"
        } ],
        "values" : [ "invalid_request", "invalid_client", "invalid_grant", "unauthorized_client", "unsupported_grant_type", "invalid_scope" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "error",
      "nameInSnakeCase" : "ERROR",
      "enumName" : "ErrorEnum",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "error_description",
      "complexType" : "std::string",
      "getter" : "getErrorDescription",
      "setter" : "setErrorDescription",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Error_description",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.error_description;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "errorDescription",
      "nameInSnakeCase" : "ERROR_DESCRIPTION",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "error_uri",
      "complexType" : "std::string",
      "getter" : "getErrorUri",
      "setter" : "setErrorUri",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Error_uri",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.error_uri;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "errorUri",
      "nameInSnakeCase" : "ERROR_URI",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "string",
      "baseName" : "error",
      "complexType" : "std::string",
      "getter" : "getError",
      "setter" : "setError",
      "dataType" : "std::string",
      "datatypeWithEnum" : "ErrorEnum",
      "name" : "Error",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.error;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"enum\" : [ \"invalid_request\", \"invalid_client\", \"invalid_grant\", \"unauthorized_client\", \"unsupported_grant_type\", \"invalid_scope\" ]\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : true,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "_enum" : [ "invalid_request", "invalid_client", "invalid_grant", "unauthorized_client", "unsupported_grant_type", "invalid_scope" ],
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "INVALID_REQUEST",
          "isString" : false,
          "value" : "invalid_request"
        }, {
          "name" : "INVALID_CLIENT",
          "isString" : false,
          "value" : "invalid_client"
        }, {
          "name" : "INVALID_GRANT",
          "isString" : false,
          "value" : "invalid_grant"
        }, {
          "name" : "UNAUTHORIZED_CLIENT",
          "isString" : false,
          "value" : "unauthorized_client"
        }, {
          "name" : "UNSUPPORTED_GRANT_TYPE",
          "isString" : false,
          "value" : "unsupported_grant_type"
        }, {
          "name" : "INVALID_SCOPE",
          "isString" : false,
          "value" : "invalid_scope"
        } ],
        "values" : [ "invalid_request", "invalid_client", "invalid_grant", "unauthorized_client", "unsupported_grant_type", "invalid_scope" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "error",
      "nameInSnakeCase" : "ERROR",
      "enumName" : "ErrorEnum",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "error_description",
      "complexType" : "std::string",
      "getter" : "getErrorDescription",
      "setter" : "setErrorDescription",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Error_description",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.error_description;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "errorDescription",
      "nameInSnakeCase" : "ERROR_DESCRIPTION",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "error_uri",
      "complexType" : "std::string",
      "getter" : "getErrorUri",
      "setter" : "setErrorUri",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Error_uri",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.error_uri;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "errorUri",
      "nameInSnakeCase" : "ERROR_URI",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ {
      "openApiType" : "string",
      "baseName" : "error",
      "complexType" : "std::string",
      "getter" : "getError",
      "setter" : "setError",
      "dataType" : "std::string",
      "datatypeWithEnum" : "ErrorEnum",
      "name" : "Error",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.error;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"enum\" : [ \"invalid_request\", \"invalid_client\", \"invalid_grant\", \"unauthorized_client\", \"unsupported_grant_type\", \"invalid_scope\" ]\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : true,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "_enum" : [ "invalid_request", "invalid_client", "invalid_grant", "unauthorized_client", "unsupported_grant_type", "invalid_scope" ],
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "INVALID_REQUEST",
          "isString" : false,
          "value" : "invalid_request"
        }, {
          "name" : "INVALID_CLIENT",
          "isString" : false,
          "value" : "invalid_client"
        }, {
          "name" : "INVALID_GRANT",
          "isString" : false,
          "value" : "invalid_grant"
        }, {
          "name" : "UNAUTHORIZED_CLIENT",
          "isString" : false,
          "value" : "unauthorized_client"
        }, {
          "name" : "UNSUPPORTED_GRANT_TYPE",
          "isString" : false,
          "value" : "unsupported_grant_type"
        }, {
          "name" : "INVALID_SCOPE",
          "isString" : false,
          "value" : "invalid_scope"
        } ],
        "values" : [ "invalid_request", "invalid_client", "invalid_grant", "unauthorized_client", "unsupported_grant_type", "invalid_scope" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "error",
      "nameInSnakeCase" : "ERROR",
      "enumName" : "ErrorEnum",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "optionalVars" : [ {
      "openApiType" : "string",
      "baseName" : "error_description",
      "complexType" : "std::string",
      "getter" : "getErrorDescription",
      "setter" : "setErrorDescription",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Error_description",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.error_description;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "errorDescription",
      "nameInSnakeCase" : "ERROR_DESCRIPTION",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "error_uri",
      "complexType" : "std::string",
      "getter" : "getErrorUri",
      "setter" : "setErrorUri",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Error_uri",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.error_uri;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "errorUri",
      "nameInSnakeCase" : "ERROR_URI",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "string",
      "baseName" : "error",
      "complexType" : "std::string",
      "getter" : "getError",
      "setter" : "setError",
      "dataType" : "std::string",
      "datatypeWithEnum" : "ErrorEnum",
      "name" : "Error",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.error;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"enum\" : [ \"invalid_request\", \"invalid_client\", \"invalid_grant\", \"unauthorized_client\", \"unsupported_grant_type\", \"invalid_scope\" ]\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : true,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "_enum" : [ "invalid_request", "invalid_client", "invalid_grant", "unauthorized_client", "unsupported_grant_type", "invalid_scope" ],
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "INVALID_REQUEST",
          "isString" : false,
          "value" : "invalid_request"
        }, {
          "name" : "INVALID_CLIENT",
          "isString" : false,
          "value" : "invalid_client"
        }, {
          "name" : "INVALID_GRANT",
          "isString" : false,
          "value" : "invalid_grant"
        }, {
          "name" : "UNAUTHORIZED_CLIENT",
          "isString" : false,
          "value" : "unauthorized_client"
        }, {
          "name" : "UNSUPPORTED_GRANT_TYPE",
          "isString" : false,
          "value" : "unsupported_grant_type"
        }, {
          "name" : "INVALID_SCOPE",
          "isString" : false,
          "value" : "invalid_scope"
        } ],
        "values" : [ "invalid_request", "invalid_client", "invalid_grant", "unauthorized_client", "unsupported_grant_type", "invalid_scope" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "error",
      "nameInSnakeCase" : "ERROR",
      "enumName" : "ErrorEnum",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "error_description",
      "complexType" : "std::string",
      "getter" : "getErrorDescription",
      "setter" : "setErrorDescription",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Error_description",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.error_description;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "errorDescription",
      "nameInSnakeCase" : "ERROR_DESCRIPTION",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "error_uri",
      "complexType" : "std::string",
      "getter" : "getErrorUri",
      "setter" : "setErrorUri",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Error_uri",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.error_uri;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "errorUri",
      "nameInSnakeCase" : "ERROR_URI",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "Error" ],
    "allMandatory" : [ "Error" ],
    "imports" : [ "#include <string>", "#include <vector>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : true,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : true,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"AccessTokenReq.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "AccessTokenReq",
    "classname" : "AccessTokenReq",
    "description" : "Contains information related to the access token request",
    "classVarName" : "AccessTokenReq",
    "modelJson" : "{\n  \"required\" : [ \"grant_type\", \"nfInstanceId\", \"scope\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"grant_type\" : {\n      \"type\" : \"string\",\n      \"enum\" : [ \"client_credentials\" ]\n    },\n    \"nfInstanceId\" : {\n      \"$ref\" : \"#/components/schemas/NfInstanceId\"\n    },\n    \"nfType\" : {\n      \"$ref\" : \"#/components/schemas/NFType\"\n    },\n    \"targetNfType\" : {\n      \"$ref\" : \"#/components/schemas/NFType\"\n    },\n    \"scope\" : {\n      \"pattern\" : \"^([a-zA-Z0-9_:-]+)( [a-zA-Z0-9_:-]+)*$\",\n      \"type\" : \"string\"\n    },\n    \"targetNfInstanceId\" : {\n      \"$ref\" : \"#/components/schemas/NfInstanceId\"\n    },\n    \"requesterPlmn\" : {\n      \"$ref\" : \"#/components/schemas/PlmnId\"\n    },\n    \"requesterPlmnList\" : {\n      \"minItems\" : 2,\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/components/schemas/PlmnId\"\n      }\n    },\n    \"requesterSnssaiList\" : {\n      \"minItems\" : 1,\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/components/schemas/Snssai\"\n      }\n    },\n    \"requesterFqdn\" : {\n      \"$ref\" : \"#/components/schemas/Fqdn\"\n    },\n    \"requesterSnpnList\" : {\n      \"minItems\" : 1,\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/components/schemas/PlmnIdNid\"\n      }\n    },\n    \"targetPlmn\" : {\n      \"$ref\" : \"#/components/schemas/PlmnId\"\n    },\n    \"targetSnssaiList\" : {\n      \"minItems\" : 1,\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/components/schemas/Snssai\"\n      }\n    },\n    \"targetNsiList\" : {\n      \"minItems\" : 1,\n      \"type\" : \"array\",\n      \"items\" : {\n        \"type\" : \"string\"\n      }\n    },\n    \"targetNfSetId\" : {\n      \"$ref\" : \"#/components/schemas/NfSetId\"\n    },\n    \"targetNfServiceSetId\" : {\n      \"$ref\" : \"#/components/schemas/NfServiceSetId\"\n    }\n  },\n  \"description\" : \"Contains information related to the access token request\"\n}",
    "dataType" : "Object",
    "classFilename" : "AccessTokenReq",
    "unescapedDescription" : "Contains information related to the access token request",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "string",
      "baseName" : "grant_type",
      "complexType" : "std::string",
      "getter" : "getGrantType",
      "setter" : "setGrantType",
      "dataType" : "std::string",
      "datatypeWithEnum" : "Grant_typeEnum",
      "name" : "Grant_type",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.grant_type;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"enum\" : [ \"client_credentials\" ]\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : true,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "_enum" : [ "client_credentials" ],
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "CLIENT_CREDENTIALS",
          "isString" : false,
          "value" : "client_credentials"
        } ],
        "values" : [ "client_credentials" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "grantType",
      "nameInSnakeCase" : "GRANT_TYPE",
      "enumName" : "Grant_typeEnum",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "nfInstanceId",
      "complexType" : "std::string",
      "getter" : "getNfInstanceId",
      "setter" : "setNfInstanceId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "uuid",
      "name" : "NfInstanceId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nfInstanceId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"uuid\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : true,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nfInstanceId",
      "nameInSnakeCase" : "NF_INSTANCE_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "NFType",
      "baseName" : "nfType",
      "complexType" : "NFType",
      "getter" : "getNfType",
      "setter" : "setNfType",
      "dataType" : "NFType",
      "datatypeWithEnum" : "NFType",
      "name" : "NfType",
      "defaultValue" : "NFType()",
      "defaultValueWithParam" : " = data.nfType;",
      "baseType" : "NFType",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/NFType\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "NRF",
          "isString" : false,
          "value" : "NRF"
        }, {
          "name" : "UDM",
          "isString" : false,
          "value" : "UDM"
        }, {
          "name" : "AMF",
          "isString" : false,
          "value" : "AMF"
        }, {
          "name" : "SMF",
          "isString" : false,
          "value" : "SMF"
        }, {
          "name" : "AUSF",
          "isString" : false,
          "value" : "AUSF"
        }, {
          "name" : "NEF",
          "isString" : false,
          "value" : "NEF"
        }, {
          "name" : "PCF",
          "isString" : false,
          "value" : "PCF"
        }, {
          "name" : "SMSF",
          "isString" : false,
          "value" : "SMSF"
        }, {
          "name" : "NSSF",
          "isString" : false,
          "value" : "NSSF"
        }, {
          "name" : "UDR",
          "isString" : false,
          "value" : "UDR"
        }, {
          "name" : "LMF",
          "isString" : false,
          "value" : "LMF"
        }, {
          "name" : "GMLC",
          "isString" : false,
          "value" : "GMLC"
        }, {
          "name" : "_5G_EIR",
          "isString" : false,
          "value" : "5G_EIR"
        }, {
          "name" : "SEPP",
          "isString" : false,
          "value" : "SEPP"
        }, {
          "name" : "UPF",
          "isString" : false,
          "value" : "UPF"
        }, {
          "name" : "N3IWF",
          "isString" : false,
          "value" : "N3IWF"
        }, {
          "name" : "AF",
          "isString" : false,
          "value" : "AF"
        }, {
          "name" : "UDSF",
          "isString" : false,
          "value" : "UDSF"
        }, {
          "name" : "BSF",
          "isString" : false,
          "value" : "BSF"
        }, {
          "name" : "CHF",
          "isString" : false,
          "value" : "CHF"
        }, {
          "name" : "NWDAF",
          "isString" : false,
          "value" : "NWDAF"
        }, {
          "name" : "PCSCF",
          "isString" : false,
          "value" : "PCSCF"
        }, {
          "name" : "CBCF",
          "isString" : false,
          "value" : "CBCF"
        }, {
          "name" : "HSS",
          "isString" : false,
          "value" : "HSS"
        }, {
          "name" : "UCMF",
          "isString" : false,
          "value" : "UCMF"
        }, {
          "name" : "SOR_AF",
          "isString" : false,
          "value" : "SOR_AF"
        }, {
          "name" : "SPAF",
          "isString" : false,
          "value" : "SPAF"
        }, {
          "name" : "MME",
          "isString" : false,
          "value" : "MME"
        }, {
          "name" : "SCSAS",
          "isString" : false,
          "value" : "SCSAS"
        }, {
          "name" : "SCEF",
          "isString" : false,
          "value" : "SCEF"
        }, {
          "name" : "SCP",
          "isString" : false,
          "value" : "SCP"
        }, {
          "name" : "NSSAAF",
          "isString" : false,
          "value" : "NSSAAF"
        }, {
          "name" : "ICSCF",
          "isString" : false,
          "value" : "ICSCF"
        }, {
          "name" : "SCSCF",
          "isString" : false,
          "value" : "SCSCF"
        }, {
          "name" : "DRA",
          "isString" : false,
          "value" : "DRA"
        } ],
        "values" : [ "NRF", "UDM", "AMF", "SMF", "AUSF", "NEF", "PCF", "SMSF", "NSSF", "UDR", "LMF", "GMLC", "5G_EIR", "SEPP", "UPF", "N3IWF", "AF", "UDSF", "BSF", "CHF", "NWDAF", "PCSCF", "CBCF", "HSS", "UCMF", "SOR_AF", "SPAF", "MME", "SCSAS", "SCEF", "SCP", "NSSAAF", "ICSCF", "SCSCF", "DRA" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nfType",
      "nameInSnakeCase" : "NF_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "NFType"
    }, {
      "openApiType" : "NFType",
      "baseName" : "targetNfType",
      "complexType" : "NFType",
      "getter" : "getTargetNfType",
      "setter" : "setTargetNfType",
      "dataType" : "NFType",
      "datatypeWithEnum" : "NFType",
      "name" : "TargetNfType",
      "defaultValue" : "NFType()",
      "defaultValueWithParam" : " = data.targetNfType;",
      "baseType" : "NFType",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/NFType\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "NRF",
          "isString" : false,
          "value" : "NRF"
        }, {
          "name" : "UDM",
          "isString" : false,
          "value" : "UDM"
        }, {
          "name" : "AMF",
          "isString" : false,
          "value" : "AMF"
        }, {
          "name" : "SMF",
          "isString" : false,
          "value" : "SMF"
        }, {
          "name" : "AUSF",
          "isString" : false,
          "value" : "AUSF"
        }, {
          "name" : "NEF",
          "isString" : false,
          "value" : "NEF"
        }, {
          "name" : "PCF",
          "isString" : false,
          "value" : "PCF"
        }, {
          "name" : "SMSF",
          "isString" : false,
          "value" : "SMSF"
        }, {
          "name" : "NSSF",
          "isString" : false,
          "value" : "NSSF"
        }, {
          "name" : "UDR",
          "isString" : false,
          "value" : "UDR"
        }, {
          "name" : "LMF",
          "isString" : false,
          "value" : "LMF"
        }, {
          "name" : "GMLC",
          "isString" : false,
          "value" : "GMLC"
        }, {
          "name" : "_5G_EIR",
          "isString" : false,
          "value" : "5G_EIR"
        }, {
          "name" : "SEPP",
          "isString" : false,
          "value" : "SEPP"
        }, {
          "name" : "UPF",
          "isString" : false,
          "value" : "UPF"
        }, {
          "name" : "N3IWF",
          "isString" : false,
          "value" : "N3IWF"
        }, {
          "name" : "AF",
          "isString" : false,
          "value" : "AF"
        }, {
          "name" : "UDSF",
          "isString" : false,
          "value" : "UDSF"
        }, {
          "name" : "BSF",
          "isString" : false,
          "value" : "BSF"
        }, {
          "name" : "CHF",
          "isString" : false,
          "value" : "CHF"
        }, {
          "name" : "NWDAF",
          "isString" : false,
          "value" : "NWDAF"
        }, {
          "name" : "PCSCF",
          "isString" : false,
          "value" : "PCSCF"
        }, {
          "name" : "CBCF",
          "isString" : false,
          "value" : "CBCF"
        }, {
          "name" : "HSS",
          "isString" : false,
          "value" : "HSS"
        }, {
          "name" : "UCMF",
          "isString" : false,
          "value" : "UCMF"
        }, {
          "name" : "SOR_AF",
          "isString" : false,
          "value" : "SOR_AF"
        }, {
          "name" : "SPAF",
          "isString" : false,
          "value" : "SPAF"
        }, {
          "name" : "MME",
          "isString" : false,
          "value" : "MME"
        }, {
          "name" : "SCSAS",
          "isString" : false,
          "value" : "SCSAS"
        }, {
          "name" : "SCEF",
          "isString" : false,
          "value" : "SCEF"
        }, {
          "name" : "SCP",
          "isString" : false,
          "value" : "SCP"
        }, {
          "name" : "NSSAAF",
          "isString" : false,
          "value" : "NSSAAF"
        }, {
          "name" : "ICSCF",
          "isString" : false,
          "value" : "ICSCF"
        }, {
          "name" : "SCSCF",
          "isString" : false,
          "value" : "SCSCF"
        }, {
          "name" : "DRA",
          "isString" : false,
          "value" : "DRA"
        } ],
        "values" : [ "NRF", "UDM", "AMF", "SMF", "AUSF", "NEF", "PCF", "SMSF", "NSSF", "UDR", "LMF", "GMLC", "5G_EIR", "SEPP", "UPF", "N3IWF", "AF", "UDSF", "BSF", "CHF", "NWDAF", "PCSCF", "CBCF", "HSS", "UCMF", "SOR_AF", "SPAF", "MME", "SCSAS", "SCEF", "SCP", "NSSAAF", "ICSCF", "SCSCF", "DRA" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfType",
      "nameInSnakeCase" : "TARGET_NF_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "NFType"
    }, {
      "openApiType" : "string",
      "baseName" : "scope",
      "complexType" : "std::string",
      "getter" : "getScope",
      "setter" : "setScope",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Scope",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.scope;",
      "baseType" : "std::string",
      "pattern" : "/^([a-zA-Z0-9_:-]+)( [a-zA-Z0-9_:-]+)*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^([a-zA-Z0-9_:-]+)( [a-zA-Z0-9_:-]+)*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "scope",
      "nameInSnakeCase" : "SCOPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "targetNfInstanceId",
      "complexType" : "std::string",
      "getter" : "getTargetNfInstanceId",
      "setter" : "setTargetNfInstanceId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "uuid",
      "name" : "TargetNfInstanceId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetNfInstanceId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"uuid\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : true,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfInstanceId",
      "nameInSnakeCase" : "TARGET_NF_INSTANCE_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "PlmnId",
      "baseName" : "requesterPlmn",
      "complexType" : "PlmnId",
      "getter" : "getRequesterPlmn",
      "setter" : "setRequesterPlmn",
      "dataType" : "PlmnId",
      "datatypeWithEnum" : "PlmnId",
      "name" : "RequesterPlmn",
      "defaultValue" : "PlmnId()",
      "defaultValueWithParam" : " = data.requesterPlmn;",
      "baseType" : "PlmnId",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "requesterPlmn",
      "nameInSnakeCase" : "REQUESTER_PLMN",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "PlmnId"
    }, {
      "openApiType" : "array",
      "baseName" : "requesterPlmnList",
      "complexType" : "PlmnId",
      "getter" : "getRequesterPlmnList",
      "setter" : "setRequesterPlmnList",
      "dataType" : "std::vector<PlmnId>",
      "datatypeWithEnum" : "std::vector<PlmnId>",
      "name" : "RequesterPlmnList",
      "defaultValue" : "std::vector<PlmnId>()",
      "defaultValueWithParam" : " = data.requesterPlmnList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 2,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/PlmnId\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "PlmnId",
        "baseName" : "RequesterPlmnList",
        "complexType" : "PlmnId",
        "getter" : "getRequesterPlmnList",
        "setter" : "setRequesterPlmnList",
        "dataType" : "PlmnId",
        "datatypeWithEnum" : "PlmnId",
        "name" : "RequesterPlmnList",
        "defaultValue" : "PlmnId()",
        "defaultValueWithParam" : " = data.RequesterPlmnList;",
        "baseType" : "PlmnId",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterPlmnList",
        "nameInSnakeCase" : "REQUESTER_PLMN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnId"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "PlmnId",
        "baseName" : "RequesterPlmnList",
        "complexType" : "PlmnId",
        "getter" : "getRequesterPlmnList",
        "setter" : "setRequesterPlmnList",
        "dataType" : "PlmnId",
        "datatypeWithEnum" : "PlmnId",
        "name" : "RequesterPlmnList",
        "defaultValue" : "PlmnId()",
        "defaultValueWithParam" : " = data.RequesterPlmnList;",
        "baseType" : "PlmnId",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterPlmnList",
        "nameInSnakeCase" : "REQUESTER_PLMN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnId"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "requesterPlmnList",
      "nameInSnakeCase" : "REQUESTER_PLMN_LIST",
      "minItems" : 2,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<PlmnId>"
    }, {
      "openApiType" : "array",
      "baseName" : "requesterSnssaiList",
      "complexType" : "Snssai",
      "getter" : "getRequesterSnssaiList",
      "setter" : "setRequesterSnssaiList",
      "dataType" : "std::vector<Snssai>",
      "datatypeWithEnum" : "std::vector<Snssai>",
      "name" : "RequesterSnssaiList",
      "defaultValue" : "std::vector<Snssai>()",
      "defaultValueWithParam" : " = data.requesterSnssaiList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/Snssai\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "Snssai",
        "baseName" : "RequesterSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getRequesterSnssaiList",
        "setter" : "setRequesterSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "RequesterSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.RequesterSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnssaiList",
        "nameInSnakeCase" : "REQUESTER_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Snssai",
        "baseName" : "RequesterSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getRequesterSnssaiList",
        "setter" : "setRequesterSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "RequesterSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.RequesterSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnssaiList",
        "nameInSnakeCase" : "REQUESTER_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "requesterSnssaiList",
      "nameInSnakeCase" : "REQUESTER_SNSSAI_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<Snssai>"
    }, {
      "openApiType" : "string",
      "baseName" : "requesterFqdn",
      "complexType" : "std::string",
      "getter" : "getRequesterFqdn",
      "setter" : "setRequesterFqdn",
      "description" : "Fully Qualified Domain Name",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "RequesterFqdn",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.requesterFqdn;",
      "baseType" : "std::string",
      "unescapedDescription" : "Fully Qualified Domain Name",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Fully Qualified Domain Name\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "requesterFqdn",
      "nameInSnakeCase" : "REQUESTER_FQDN",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "array",
      "baseName" : "requesterSnpnList",
      "complexType" : "PlmnIdNid",
      "getter" : "getRequesterSnpnList",
      "setter" : "setRequesterSnpnList",
      "dataType" : "std::vector<PlmnIdNid>",
      "datatypeWithEnum" : "std::vector<PlmnIdNid>",
      "name" : "RequesterSnpnList",
      "defaultValue" : "std::vector<PlmnIdNid>()",
      "defaultValueWithParam" : " = data.requesterSnpnList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/PlmnIdNid\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "PlmnIdNid",
        "baseName" : "RequesterSnpnList",
        "complexType" : "PlmnIdNid",
        "getter" : "getRequesterSnpnList",
        "setter" : "setRequesterSnpnList",
        "dataType" : "PlmnIdNid",
        "datatypeWithEnum" : "PlmnIdNid",
        "name" : "RequesterSnpnList",
        "defaultValue" : "PlmnIdNid()",
        "defaultValueWithParam" : " = data.RequesterSnpnList;",
        "baseType" : "PlmnIdNid",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnIdNid\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnpnList",
        "nameInSnakeCase" : "REQUESTER_SNPN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnIdNid"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "PlmnIdNid",
        "baseName" : "RequesterSnpnList",
        "complexType" : "PlmnIdNid",
        "getter" : "getRequesterSnpnList",
        "setter" : "setRequesterSnpnList",
        "dataType" : "PlmnIdNid",
        "datatypeWithEnum" : "PlmnIdNid",
        "name" : "RequesterSnpnList",
        "defaultValue" : "PlmnIdNid()",
        "defaultValueWithParam" : " = data.RequesterSnpnList;",
        "baseType" : "PlmnIdNid",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnIdNid\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnpnList",
        "nameInSnakeCase" : "REQUESTER_SNPN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnIdNid"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "requesterSnpnList",
      "nameInSnakeCase" : "REQUESTER_SNPN_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<PlmnIdNid>"
    }, {
      "openApiType" : "PlmnId",
      "baseName" : "targetPlmn",
      "complexType" : "PlmnId",
      "getter" : "getTargetPlmn",
      "setter" : "setTargetPlmn",
      "dataType" : "PlmnId",
      "datatypeWithEnum" : "PlmnId",
      "name" : "TargetPlmn",
      "defaultValue" : "PlmnId()",
      "defaultValueWithParam" : " = data.targetPlmn;",
      "baseType" : "PlmnId",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetPlmn",
      "nameInSnakeCase" : "TARGET_PLMN",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "PlmnId"
    }, {
      "openApiType" : "array",
      "baseName" : "targetSnssaiList",
      "complexType" : "Snssai",
      "getter" : "getTargetSnssaiList",
      "setter" : "setTargetSnssaiList",
      "dataType" : "std::vector<Snssai>",
      "datatypeWithEnum" : "std::vector<Snssai>",
      "name" : "TargetSnssaiList",
      "defaultValue" : "std::vector<Snssai>()",
      "defaultValueWithParam" : " = data.targetSnssaiList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/Snssai\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "Snssai",
        "baseName" : "TargetSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getTargetSnssaiList",
        "setter" : "setTargetSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "TargetSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.TargetSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetSnssaiList",
        "nameInSnakeCase" : "TARGET_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Snssai",
        "baseName" : "TargetSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getTargetSnssaiList",
        "setter" : "setTargetSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "TargetSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.TargetSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetSnssaiList",
        "nameInSnakeCase" : "TARGET_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "targetSnssaiList",
      "nameInSnakeCase" : "TARGET_SNSSAI_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<Snssai>"
    }, {
      "openApiType" : "array",
      "baseName" : "targetNsiList",
      "complexType" : "std::string",
      "getter" : "getTargetNsiList",
      "setter" : "setTargetNsiList",
      "dataType" : "std::vector<std::string>",
      "datatypeWithEnum" : "std::vector<std::string>",
      "name" : "TargetNsiList",
      "defaultValue" : "std::vector<std::string>()",
      "defaultValueWithParam" : " = data.targetNsiList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "string",
        "baseName" : "TargetNsiList",
        "complexType" : "std::string",
        "getter" : "getTargetNsiList",
        "setter" : "setTargetNsiList",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TargetNsiList",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TargetNsiList;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetNsiList",
        "nameInSnakeCase" : "TARGET_NSI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "string",
        "baseName" : "TargetNsiList",
        "complexType" : "std::string",
        "getter" : "getTargetNsiList",
        "setter" : "setTargetNsiList",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TargetNsiList",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TargetNsiList;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetNsiList",
        "nameInSnakeCase" : "TARGET_NSI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "targetNsiList",
      "nameInSnakeCase" : "TARGET_NSI_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<std::string>"
    }, {
      "openApiType" : "string",
      "baseName" : "targetNfSetId",
      "complexType" : "std::string",
      "getter" : "getTargetNfSetId",
      "setter" : "setTargetNfSetId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TargetNfSetId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetNfSetId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfSetId",
      "nameInSnakeCase" : "TARGET_NF_SET_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "targetNfServiceSetId",
      "complexType" : "std::string",
      "getter" : "getTargetNfServiceSetId",
      "setter" : "setTargetNfServiceSetId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TargetNfServiceSetId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetNfServiceSetId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfServiceSetId",
      "nameInSnakeCase" : "TARGET_NF_SERVICE_SET_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "string",
      "baseName" : "grant_type",
      "complexType" : "std::string",
      "getter" : "getGrantType",
      "setter" : "setGrantType",
      "dataType" : "std::string",
      "datatypeWithEnum" : "Grant_typeEnum",
      "name" : "Grant_type",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.grant_type;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"enum\" : [ \"client_credentials\" ]\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : true,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "_enum" : [ "client_credentials" ],
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "CLIENT_CREDENTIALS",
          "isString" : false,
          "value" : "client_credentials"
        } ],
        "values" : [ "client_credentials" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "grantType",
      "nameInSnakeCase" : "GRANT_TYPE",
      "enumName" : "Grant_typeEnum",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "nfInstanceId",
      "complexType" : "std::string",
      "getter" : "getNfInstanceId",
      "setter" : "setNfInstanceId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "uuid",
      "name" : "NfInstanceId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nfInstanceId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"uuid\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : true,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nfInstanceId",
      "nameInSnakeCase" : "NF_INSTANCE_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "NFType",
      "baseName" : "nfType",
      "complexType" : "NFType",
      "getter" : "getNfType",
      "setter" : "setNfType",
      "dataType" : "NFType",
      "datatypeWithEnum" : "NFType",
      "name" : "NfType",
      "defaultValue" : "NFType()",
      "defaultValueWithParam" : " = data.nfType;",
      "baseType" : "NFType",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/NFType\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "NRF",
          "isString" : false,
          "value" : "NRF"
        }, {
          "name" : "UDM",
          "isString" : false,
          "value" : "UDM"
        }, {
          "name" : "AMF",
          "isString" : false,
          "value" : "AMF"
        }, {
          "name" : "SMF",
          "isString" : false,
          "value" : "SMF"
        }, {
          "name" : "AUSF",
          "isString" : false,
          "value" : "AUSF"
        }, {
          "name" : "NEF",
          "isString" : false,
          "value" : "NEF"
        }, {
          "name" : "PCF",
          "isString" : false,
          "value" : "PCF"
        }, {
          "name" : "SMSF",
          "isString" : false,
          "value" : "SMSF"
        }, {
          "name" : "NSSF",
          "isString" : false,
          "value" : "NSSF"
        }, {
          "name" : "UDR",
          "isString" : false,
          "value" : "UDR"
        }, {
          "name" : "LMF",
          "isString" : false,
          "value" : "LMF"
        }, {
          "name" : "GMLC",
          "isString" : false,
          "value" : "GMLC"
        }, {
          "name" : "_5G_EIR",
          "isString" : false,
          "value" : "5G_EIR"
        }, {
          "name" : "SEPP",
          "isString" : false,
          "value" : "SEPP"
        }, {
          "name" : "UPF",
          "isString" : false,
          "value" : "UPF"
        }, {
          "name" : "N3IWF",
          "isString" : false,
          "value" : "N3IWF"
        }, {
          "name" : "AF",
          "isString" : false,
          "value" : "AF"
        }, {
          "name" : "UDSF",
          "isString" : false,
          "value" : "UDSF"
        }, {
          "name" : "BSF",
          "isString" : false,
          "value" : "BSF"
        }, {
          "name" : "CHF",
          "isString" : false,
          "value" : "CHF"
        }, {
          "name" : "NWDAF",
          "isString" : false,
          "value" : "NWDAF"
        }, {
          "name" : "PCSCF",
          "isString" : false,
          "value" : "PCSCF"
        }, {
          "name" : "CBCF",
          "isString" : false,
          "value" : "CBCF"
        }, {
          "name" : "HSS",
          "isString" : false,
          "value" : "HSS"
        }, {
          "name" : "UCMF",
          "isString" : false,
          "value" : "UCMF"
        }, {
          "name" : "SOR_AF",
          "isString" : false,
          "value" : "SOR_AF"
        }, {
          "name" : "SPAF",
          "isString" : false,
          "value" : "SPAF"
        }, {
          "name" : "MME",
          "isString" : false,
          "value" : "MME"
        }, {
          "name" : "SCSAS",
          "isString" : false,
          "value" : "SCSAS"
        }, {
          "name" : "SCEF",
          "isString" : false,
          "value" : "SCEF"
        }, {
          "name" : "SCP",
          "isString" : false,
          "value" : "SCP"
        }, {
          "name" : "NSSAAF",
          "isString" : false,
          "value" : "NSSAAF"
        }, {
          "name" : "ICSCF",
          "isString" : false,
          "value" : "ICSCF"
        }, {
          "name" : "SCSCF",
          "isString" : false,
          "value" : "SCSCF"
        }, {
          "name" : "DRA",
          "isString" : false,
          "value" : "DRA"
        } ],
        "values" : [ "NRF", "UDM", "AMF", "SMF", "AUSF", "NEF", "PCF", "SMSF", "NSSF", "UDR", "LMF", "GMLC", "5G_EIR", "SEPP", "UPF", "N3IWF", "AF", "UDSF", "BSF", "CHF", "NWDAF", "PCSCF", "CBCF", "HSS", "UCMF", "SOR_AF", "SPAF", "MME", "SCSAS", "SCEF", "SCP", "NSSAAF", "ICSCF", "SCSCF", "DRA" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nfType",
      "nameInSnakeCase" : "NF_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "NFType"
    }, {
      "openApiType" : "NFType",
      "baseName" : "targetNfType",
      "complexType" : "NFType",
      "getter" : "getTargetNfType",
      "setter" : "setTargetNfType",
      "dataType" : "NFType",
      "datatypeWithEnum" : "NFType",
      "name" : "TargetNfType",
      "defaultValue" : "NFType()",
      "defaultValueWithParam" : " = data.targetNfType;",
      "baseType" : "NFType",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/NFType\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "NRF",
          "isString" : false,
          "value" : "NRF"
        }, {
          "name" : "UDM",
          "isString" : false,
          "value" : "UDM"
        }, {
          "name" : "AMF",
          "isString" : false,
          "value" : "AMF"
        }, {
          "name" : "SMF",
          "isString" : false,
          "value" : "SMF"
        }, {
          "name" : "AUSF",
          "isString" : false,
          "value" : "AUSF"
        }, {
          "name" : "NEF",
          "isString" : false,
          "value" : "NEF"
        }, {
          "name" : "PCF",
          "isString" : false,
          "value" : "PCF"
        }, {
          "name" : "SMSF",
          "isString" : false,
          "value" : "SMSF"
        }, {
          "name" : "NSSF",
          "isString" : false,
          "value" : "NSSF"
        }, {
          "name" : "UDR",
          "isString" : false,
          "value" : "UDR"
        }, {
          "name" : "LMF",
          "isString" : false,
          "value" : "LMF"
        }, {
          "name" : "GMLC",
          "isString" : false,
          "value" : "GMLC"
        }, {
          "name" : "_5G_EIR",
          "isString" : false,
          "value" : "5G_EIR"
        }, {
          "name" : "SEPP",
          "isString" : false,
          "value" : "SEPP"
        }, {
          "name" : "UPF",
          "isString" : false,
          "value" : "UPF"
        }, {
          "name" : "N3IWF",
          "isString" : false,
          "value" : "N3IWF"
        }, {
          "name" : "AF",
          "isString" : false,
          "value" : "AF"
        }, {
          "name" : "UDSF",
          "isString" : false,
          "value" : "UDSF"
        }, {
          "name" : "BSF",
          "isString" : false,
          "value" : "BSF"
        }, {
          "name" : "CHF",
          "isString" : false,
          "value" : "CHF"
        }, {
          "name" : "NWDAF",
          "isString" : false,
          "value" : "NWDAF"
        }, {
          "name" : "PCSCF",
          "isString" : false,
          "value" : "PCSCF"
        }, {
          "name" : "CBCF",
          "isString" : false,
          "value" : "CBCF"
        }, {
          "name" : "HSS",
          "isString" : false,
          "value" : "HSS"
        }, {
          "name" : "UCMF",
          "isString" : false,
          "value" : "UCMF"
        }, {
          "name" : "SOR_AF",
          "isString" : false,
          "value" : "SOR_AF"
        }, {
          "name" : "SPAF",
          "isString" : false,
          "value" : "SPAF"
        }, {
          "name" : "MME",
          "isString" : false,
          "value" : "MME"
        }, {
          "name" : "SCSAS",
          "isString" : false,
          "value" : "SCSAS"
        }, {
          "name" : "SCEF",
          "isString" : false,
          "value" : "SCEF"
        }, {
          "name" : "SCP",
          "isString" : false,
          "value" : "SCP"
        }, {
          "name" : "NSSAAF",
          "isString" : false,
          "value" : "NSSAAF"
        }, {
          "name" : "ICSCF",
          "isString" : false,
          "value" : "ICSCF"
        }, {
          "name" : "SCSCF",
          "isString" : false,
          "value" : "SCSCF"
        }, {
          "name" : "DRA",
          "isString" : false,
          "value" : "DRA"
        } ],
        "values" : [ "NRF", "UDM", "AMF", "SMF", "AUSF", "NEF", "PCF", "SMSF", "NSSF", "UDR", "LMF", "GMLC", "5G_EIR", "SEPP", "UPF", "N3IWF", "AF", "UDSF", "BSF", "CHF", "NWDAF", "PCSCF", "CBCF", "HSS", "UCMF", "SOR_AF", "SPAF", "MME", "SCSAS", "SCEF", "SCP", "NSSAAF", "ICSCF", "SCSCF", "DRA" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfType",
      "nameInSnakeCase" : "TARGET_NF_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "NFType"
    }, {
      "openApiType" : "string",
      "baseName" : "scope",
      "complexType" : "std::string",
      "getter" : "getScope",
      "setter" : "setScope",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Scope",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.scope;",
      "baseType" : "std::string",
      "pattern" : "/^([a-zA-Z0-9_:-]+)( [a-zA-Z0-9_:-]+)*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^([a-zA-Z0-9_:-]+)( [a-zA-Z0-9_:-]+)*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "scope",
      "nameInSnakeCase" : "SCOPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "targetNfInstanceId",
      "complexType" : "std::string",
      "getter" : "getTargetNfInstanceId",
      "setter" : "setTargetNfInstanceId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "uuid",
      "name" : "TargetNfInstanceId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetNfInstanceId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"uuid\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : true,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfInstanceId",
      "nameInSnakeCase" : "TARGET_NF_INSTANCE_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "PlmnId",
      "baseName" : "requesterPlmn",
      "complexType" : "PlmnId",
      "getter" : "getRequesterPlmn",
      "setter" : "setRequesterPlmn",
      "dataType" : "PlmnId",
      "datatypeWithEnum" : "PlmnId",
      "name" : "RequesterPlmn",
      "defaultValue" : "PlmnId()",
      "defaultValueWithParam" : " = data.requesterPlmn;",
      "baseType" : "PlmnId",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "requesterPlmn",
      "nameInSnakeCase" : "REQUESTER_PLMN",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "PlmnId"
    }, {
      "openApiType" : "array",
      "baseName" : "requesterPlmnList",
      "complexType" : "PlmnId",
      "getter" : "getRequesterPlmnList",
      "setter" : "setRequesterPlmnList",
      "dataType" : "std::vector<PlmnId>",
      "datatypeWithEnum" : "std::vector<PlmnId>",
      "name" : "RequesterPlmnList",
      "defaultValue" : "std::vector<PlmnId>()",
      "defaultValueWithParam" : " = data.requesterPlmnList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 2,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/PlmnId\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "PlmnId",
        "baseName" : "RequesterPlmnList",
        "complexType" : "PlmnId",
        "getter" : "getRequesterPlmnList",
        "setter" : "setRequesterPlmnList",
        "dataType" : "PlmnId",
        "datatypeWithEnum" : "PlmnId",
        "name" : "RequesterPlmnList",
        "defaultValue" : "PlmnId()",
        "defaultValueWithParam" : " = data.RequesterPlmnList;",
        "baseType" : "PlmnId",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterPlmnList",
        "nameInSnakeCase" : "REQUESTER_PLMN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnId"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "PlmnId",
        "baseName" : "RequesterPlmnList",
        "complexType" : "PlmnId",
        "getter" : "getRequesterPlmnList",
        "setter" : "setRequesterPlmnList",
        "dataType" : "PlmnId",
        "datatypeWithEnum" : "PlmnId",
        "name" : "RequesterPlmnList",
        "defaultValue" : "PlmnId()",
        "defaultValueWithParam" : " = data.RequesterPlmnList;",
        "baseType" : "PlmnId",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterPlmnList",
        "nameInSnakeCase" : "REQUESTER_PLMN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnId"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "requesterPlmnList",
      "nameInSnakeCase" : "REQUESTER_PLMN_LIST",
      "minItems" : 2,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<PlmnId>"
    }, {
      "openApiType" : "array",
      "baseName" : "requesterSnssaiList",
      "complexType" : "Snssai",
      "getter" : "getRequesterSnssaiList",
      "setter" : "setRequesterSnssaiList",
      "dataType" : "std::vector<Snssai>",
      "datatypeWithEnum" : "std::vector<Snssai>",
      "name" : "RequesterSnssaiList",
      "defaultValue" : "std::vector<Snssai>()",
      "defaultValueWithParam" : " = data.requesterSnssaiList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/Snssai\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "Snssai",
        "baseName" : "RequesterSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getRequesterSnssaiList",
        "setter" : "setRequesterSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "RequesterSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.RequesterSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnssaiList",
        "nameInSnakeCase" : "REQUESTER_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Snssai",
        "baseName" : "RequesterSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getRequesterSnssaiList",
        "setter" : "setRequesterSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "RequesterSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.RequesterSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnssaiList",
        "nameInSnakeCase" : "REQUESTER_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "requesterSnssaiList",
      "nameInSnakeCase" : "REQUESTER_SNSSAI_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<Snssai>"
    }, {
      "openApiType" : "string",
      "baseName" : "requesterFqdn",
      "complexType" : "std::string",
      "getter" : "getRequesterFqdn",
      "setter" : "setRequesterFqdn",
      "description" : "Fully Qualified Domain Name",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "RequesterFqdn",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.requesterFqdn;",
      "baseType" : "std::string",
      "unescapedDescription" : "Fully Qualified Domain Name",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Fully Qualified Domain Name\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "requesterFqdn",
      "nameInSnakeCase" : "REQUESTER_FQDN",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "array",
      "baseName" : "requesterSnpnList",
      "complexType" : "PlmnIdNid",
      "getter" : "getRequesterSnpnList",
      "setter" : "setRequesterSnpnList",
      "dataType" : "std::vector<PlmnIdNid>",
      "datatypeWithEnum" : "std::vector<PlmnIdNid>",
      "name" : "RequesterSnpnList",
      "defaultValue" : "std::vector<PlmnIdNid>()",
      "defaultValueWithParam" : " = data.requesterSnpnList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/PlmnIdNid\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "PlmnIdNid",
        "baseName" : "RequesterSnpnList",
        "complexType" : "PlmnIdNid",
        "getter" : "getRequesterSnpnList",
        "setter" : "setRequesterSnpnList",
        "dataType" : "PlmnIdNid",
        "datatypeWithEnum" : "PlmnIdNid",
        "name" : "RequesterSnpnList",
        "defaultValue" : "PlmnIdNid()",
        "defaultValueWithParam" : " = data.RequesterSnpnList;",
        "baseType" : "PlmnIdNid",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnIdNid\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnpnList",
        "nameInSnakeCase" : "REQUESTER_SNPN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnIdNid"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "PlmnIdNid",
        "baseName" : "RequesterSnpnList",
        "complexType" : "PlmnIdNid",
        "getter" : "getRequesterSnpnList",
        "setter" : "setRequesterSnpnList",
        "dataType" : "PlmnIdNid",
        "datatypeWithEnum" : "PlmnIdNid",
        "name" : "RequesterSnpnList",
        "defaultValue" : "PlmnIdNid()",
        "defaultValueWithParam" : " = data.RequesterSnpnList;",
        "baseType" : "PlmnIdNid",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnIdNid\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnpnList",
        "nameInSnakeCase" : "REQUESTER_SNPN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnIdNid"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "requesterSnpnList",
      "nameInSnakeCase" : "REQUESTER_SNPN_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<PlmnIdNid>"
    }, {
      "openApiType" : "PlmnId",
      "baseName" : "targetPlmn",
      "complexType" : "PlmnId",
      "getter" : "getTargetPlmn",
      "setter" : "setTargetPlmn",
      "dataType" : "PlmnId",
      "datatypeWithEnum" : "PlmnId",
      "name" : "TargetPlmn",
      "defaultValue" : "PlmnId()",
      "defaultValueWithParam" : " = data.targetPlmn;",
      "baseType" : "PlmnId",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetPlmn",
      "nameInSnakeCase" : "TARGET_PLMN",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "PlmnId"
    }, {
      "openApiType" : "array",
      "baseName" : "targetSnssaiList",
      "complexType" : "Snssai",
      "getter" : "getTargetSnssaiList",
      "setter" : "setTargetSnssaiList",
      "dataType" : "std::vector<Snssai>",
      "datatypeWithEnum" : "std::vector<Snssai>",
      "name" : "TargetSnssaiList",
      "defaultValue" : "std::vector<Snssai>()",
      "defaultValueWithParam" : " = data.targetSnssaiList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/Snssai\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "Snssai",
        "baseName" : "TargetSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getTargetSnssaiList",
        "setter" : "setTargetSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "TargetSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.TargetSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetSnssaiList",
        "nameInSnakeCase" : "TARGET_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Snssai",
        "baseName" : "TargetSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getTargetSnssaiList",
        "setter" : "setTargetSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "TargetSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.TargetSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetSnssaiList",
        "nameInSnakeCase" : "TARGET_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "targetSnssaiList",
      "nameInSnakeCase" : "TARGET_SNSSAI_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<Snssai>"
    }, {
      "openApiType" : "array",
      "baseName" : "targetNsiList",
      "complexType" : "std::string",
      "getter" : "getTargetNsiList",
      "setter" : "setTargetNsiList",
      "dataType" : "std::vector<std::string>",
      "datatypeWithEnum" : "std::vector<std::string>",
      "name" : "TargetNsiList",
      "defaultValue" : "std::vector<std::string>()",
      "defaultValueWithParam" : " = data.targetNsiList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "string",
        "baseName" : "TargetNsiList",
        "complexType" : "std::string",
        "getter" : "getTargetNsiList",
        "setter" : "setTargetNsiList",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TargetNsiList",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TargetNsiList;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetNsiList",
        "nameInSnakeCase" : "TARGET_NSI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "string",
        "baseName" : "TargetNsiList",
        "complexType" : "std::string",
        "getter" : "getTargetNsiList",
        "setter" : "setTargetNsiList",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TargetNsiList",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TargetNsiList;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetNsiList",
        "nameInSnakeCase" : "TARGET_NSI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "targetNsiList",
      "nameInSnakeCase" : "TARGET_NSI_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<std::string>"
    }, {
      "openApiType" : "string",
      "baseName" : "targetNfSetId",
      "complexType" : "std::string",
      "getter" : "getTargetNfSetId",
      "setter" : "setTargetNfSetId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TargetNfSetId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetNfSetId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfSetId",
      "nameInSnakeCase" : "TARGET_NF_SET_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "targetNfServiceSetId",
      "complexType" : "std::string",
      "getter" : "getTargetNfServiceSetId",
      "setter" : "setTargetNfServiceSetId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TargetNfServiceSetId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetNfServiceSetId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfServiceSetId",
      "nameInSnakeCase" : "TARGET_NF_SERVICE_SET_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ {
      "openApiType" : "string",
      "baseName" : "grant_type",
      "complexType" : "std::string",
      "getter" : "getGrantType",
      "setter" : "setGrantType",
      "dataType" : "std::string",
      "datatypeWithEnum" : "Grant_typeEnum",
      "name" : "Grant_type",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.grant_type;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"enum\" : [ \"client_credentials\" ]\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : true,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "_enum" : [ "client_credentials" ],
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "CLIENT_CREDENTIALS",
          "isString" : false,
          "value" : "client_credentials"
        } ],
        "values" : [ "client_credentials" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "grantType",
      "nameInSnakeCase" : "GRANT_TYPE",
      "enumName" : "Grant_typeEnum",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "nfInstanceId",
      "complexType" : "std::string",
      "getter" : "getNfInstanceId",
      "setter" : "setNfInstanceId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "uuid",
      "name" : "NfInstanceId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nfInstanceId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"uuid\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : true,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nfInstanceId",
      "nameInSnakeCase" : "NF_INSTANCE_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "scope",
      "complexType" : "std::string",
      "getter" : "getScope",
      "setter" : "setScope",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Scope",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.scope;",
      "baseType" : "std::string",
      "pattern" : "/^([a-zA-Z0-9_:-]+)( [a-zA-Z0-9_:-]+)*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^([a-zA-Z0-9_:-]+)( [a-zA-Z0-9_:-]+)*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "scope",
      "nameInSnakeCase" : "SCOPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "optionalVars" : [ {
      "openApiType" : "NFType",
      "baseName" : "nfType",
      "complexType" : "NFType",
      "getter" : "getNfType",
      "setter" : "setNfType",
      "dataType" : "NFType",
      "datatypeWithEnum" : "NFType",
      "name" : "NfType",
      "defaultValue" : "NFType()",
      "defaultValueWithParam" : " = data.nfType;",
      "baseType" : "NFType",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/NFType\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "NRF",
          "isString" : false,
          "value" : "NRF"
        }, {
          "name" : "UDM",
          "isString" : false,
          "value" : "UDM"
        }, {
          "name" : "AMF",
          "isString" : false,
          "value" : "AMF"
        }, {
          "name" : "SMF",
          "isString" : false,
          "value" : "SMF"
        }, {
          "name" : "AUSF",
          "isString" : false,
          "value" : "AUSF"
        }, {
          "name" : "NEF",
          "isString" : false,
          "value" : "NEF"
        }, {
          "name" : "PCF",
          "isString" : false,
          "value" : "PCF"
        }, {
          "name" : "SMSF",
          "isString" : false,
          "value" : "SMSF"
        }, {
          "name" : "NSSF",
          "isString" : false,
          "value" : "NSSF"
        }, {
          "name" : "UDR",
          "isString" : false,
          "value" : "UDR"
        }, {
          "name" : "LMF",
          "isString" : false,
          "value" : "LMF"
        }, {
          "name" : "GMLC",
          "isString" : false,
          "value" : "GMLC"
        }, {
          "name" : "_5G_EIR",
          "isString" : false,
          "value" : "5G_EIR"
        }, {
          "name" : "SEPP",
          "isString" : false,
          "value" : "SEPP"
        }, {
          "name" : "UPF",
          "isString" : false,
          "value" : "UPF"
        }, {
          "name" : "N3IWF",
          "isString" : false,
          "value" : "N3IWF"
        }, {
          "name" : "AF",
          "isString" : false,
          "value" : "AF"
        }, {
          "name" : "UDSF",
          "isString" : false,
          "value" : "UDSF"
        }, {
          "name" : "BSF",
          "isString" : false,
          "value" : "BSF"
        }, {
          "name" : "CHF",
          "isString" : false,
          "value" : "CHF"
        }, {
          "name" : "NWDAF",
          "isString" : false,
          "value" : "NWDAF"
        }, {
          "name" : "PCSCF",
          "isString" : false,
          "value" : "PCSCF"
        }, {
          "name" : "CBCF",
          "isString" : false,
          "value" : "CBCF"
        }, {
          "name" : "HSS",
          "isString" : false,
          "value" : "HSS"
        }, {
          "name" : "UCMF",
          "isString" : false,
          "value" : "UCMF"
        }, {
          "name" : "SOR_AF",
          "isString" : false,
          "value" : "SOR_AF"
        }, {
          "name" : "SPAF",
          "isString" : false,
          "value" : "SPAF"
        }, {
          "name" : "MME",
          "isString" : false,
          "value" : "MME"
        }, {
          "name" : "SCSAS",
          "isString" : false,
          "value" : "SCSAS"
        }, {
          "name" : "SCEF",
          "isString" : false,
          "value" : "SCEF"
        }, {
          "name" : "SCP",
          "isString" : false,
          "value" : "SCP"
        }, {
          "name" : "NSSAAF",
          "isString" : false,
          "value" : "NSSAAF"
        }, {
          "name" : "ICSCF",
          "isString" : false,
          "value" : "ICSCF"
        }, {
          "name" : "SCSCF",
          "isString" : false,
          "value" : "SCSCF"
        }, {
          "name" : "DRA",
          "isString" : false,
          "value" : "DRA"
        } ],
        "values" : [ "NRF", "UDM", "AMF", "SMF", "AUSF", "NEF", "PCF", "SMSF", "NSSF", "UDR", "LMF", "GMLC", "5G_EIR", "SEPP", "UPF", "N3IWF", "AF", "UDSF", "BSF", "CHF", "NWDAF", "PCSCF", "CBCF", "HSS", "UCMF", "SOR_AF", "SPAF", "MME", "SCSAS", "SCEF", "SCP", "NSSAAF", "ICSCF", "SCSCF", "DRA" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nfType",
      "nameInSnakeCase" : "NF_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "NFType"
    }, {
      "openApiType" : "NFType",
      "baseName" : "targetNfType",
      "complexType" : "NFType",
      "getter" : "getTargetNfType",
      "setter" : "setTargetNfType",
      "dataType" : "NFType",
      "datatypeWithEnum" : "NFType",
      "name" : "TargetNfType",
      "defaultValue" : "NFType()",
      "defaultValueWithParam" : " = data.targetNfType;",
      "baseType" : "NFType",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/NFType\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "NRF",
          "isString" : false,
          "value" : "NRF"
        }, {
          "name" : "UDM",
          "isString" : false,
          "value" : "UDM"
        }, {
          "name" : "AMF",
          "isString" : false,
          "value" : "AMF"
        }, {
          "name" : "SMF",
          "isString" : false,
          "value" : "SMF"
        }, {
          "name" : "AUSF",
          "isString" : false,
          "value" : "AUSF"
        }, {
          "name" : "NEF",
          "isString" : false,
          "value" : "NEF"
        }, {
          "name" : "PCF",
          "isString" : false,
          "value" : "PCF"
        }, {
          "name" : "SMSF",
          "isString" : false,
          "value" : "SMSF"
        }, {
          "name" : "NSSF",
          "isString" : false,
          "value" : "NSSF"
        }, {
          "name" : "UDR",
          "isString" : false,
          "value" : "UDR"
        }, {
          "name" : "LMF",
          "isString" : false,
          "value" : "LMF"
        }, {
          "name" : "GMLC",
          "isString" : false,
          "value" : "GMLC"
        }, {
          "name" : "_5G_EIR",
          "isString" : false,
          "value" : "5G_EIR"
        }, {
          "name" : "SEPP",
          "isString" : false,
          "value" : "SEPP"
        }, {
          "name" : "UPF",
          "isString" : false,
          "value" : "UPF"
        }, {
          "name" : "N3IWF",
          "isString" : false,
          "value" : "N3IWF"
        }, {
          "name" : "AF",
          "isString" : false,
          "value" : "AF"
        }, {
          "name" : "UDSF",
          "isString" : false,
          "value" : "UDSF"
        }, {
          "name" : "BSF",
          "isString" : false,
          "value" : "BSF"
        }, {
          "name" : "CHF",
          "isString" : false,
          "value" : "CHF"
        }, {
          "name" : "NWDAF",
          "isString" : false,
          "value" : "NWDAF"
        }, {
          "name" : "PCSCF",
          "isString" : false,
          "value" : "PCSCF"
        }, {
          "name" : "CBCF",
          "isString" : false,
          "value" : "CBCF"
        }, {
          "name" : "HSS",
          "isString" : false,
          "value" : "HSS"
        }, {
          "name" : "UCMF",
          "isString" : false,
          "value" : "UCMF"
        }, {
          "name" : "SOR_AF",
          "isString" : false,
          "value" : "SOR_AF"
        }, {
          "name" : "SPAF",
          "isString" : false,
          "value" : "SPAF"
        }, {
          "name" : "MME",
          "isString" : false,
          "value" : "MME"
        }, {
          "name" : "SCSAS",
          "isString" : false,
          "value" : "SCSAS"
        }, {
          "name" : "SCEF",
          "isString" : false,
          "value" : "SCEF"
        }, {
          "name" : "SCP",
          "isString" : false,
          "value" : "SCP"
        }, {
          "name" : "NSSAAF",
          "isString" : false,
          "value" : "NSSAAF"
        }, {
          "name" : "ICSCF",
          "isString" : false,
          "value" : "ICSCF"
        }, {
          "name" : "SCSCF",
          "isString" : false,
          "value" : "SCSCF"
        }, {
          "name" : "DRA",
          "isString" : false,
          "value" : "DRA"
        } ],
        "values" : [ "NRF", "UDM", "AMF", "SMF", "AUSF", "NEF", "PCF", "SMSF", "NSSF", "UDR", "LMF", "GMLC", "5G_EIR", "SEPP", "UPF", "N3IWF", "AF", "UDSF", "BSF", "CHF", "NWDAF", "PCSCF", "CBCF", "HSS", "UCMF", "SOR_AF", "SPAF", "MME", "SCSAS", "SCEF", "SCP", "NSSAAF", "ICSCF", "SCSCF", "DRA" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfType",
      "nameInSnakeCase" : "TARGET_NF_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "NFType"
    }, {
      "openApiType" : "string",
      "baseName" : "targetNfInstanceId",
      "complexType" : "std::string",
      "getter" : "getTargetNfInstanceId",
      "setter" : "setTargetNfInstanceId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "uuid",
      "name" : "TargetNfInstanceId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetNfInstanceId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"uuid\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : true,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfInstanceId",
      "nameInSnakeCase" : "TARGET_NF_INSTANCE_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "PlmnId",
      "baseName" : "requesterPlmn",
      "complexType" : "PlmnId",
      "getter" : "getRequesterPlmn",
      "setter" : "setRequesterPlmn",
      "dataType" : "PlmnId",
      "datatypeWithEnum" : "PlmnId",
      "name" : "RequesterPlmn",
      "defaultValue" : "PlmnId()",
      "defaultValueWithParam" : " = data.requesterPlmn;",
      "baseType" : "PlmnId",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "requesterPlmn",
      "nameInSnakeCase" : "REQUESTER_PLMN",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "PlmnId"
    }, {
      "openApiType" : "array",
      "baseName" : "requesterPlmnList",
      "complexType" : "PlmnId",
      "getter" : "getRequesterPlmnList",
      "setter" : "setRequesterPlmnList",
      "dataType" : "std::vector<PlmnId>",
      "datatypeWithEnum" : "std::vector<PlmnId>",
      "name" : "RequesterPlmnList",
      "defaultValue" : "std::vector<PlmnId>()",
      "defaultValueWithParam" : " = data.requesterPlmnList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 2,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/PlmnId\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "PlmnId",
        "baseName" : "RequesterPlmnList",
        "complexType" : "PlmnId",
        "getter" : "getRequesterPlmnList",
        "setter" : "setRequesterPlmnList",
        "dataType" : "PlmnId",
        "datatypeWithEnum" : "PlmnId",
        "name" : "RequesterPlmnList",
        "defaultValue" : "PlmnId()",
        "defaultValueWithParam" : " = data.RequesterPlmnList;",
        "baseType" : "PlmnId",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterPlmnList",
        "nameInSnakeCase" : "REQUESTER_PLMN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnId"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "PlmnId",
        "baseName" : "RequesterPlmnList",
        "complexType" : "PlmnId",
        "getter" : "getRequesterPlmnList",
        "setter" : "setRequesterPlmnList",
        "dataType" : "PlmnId",
        "datatypeWithEnum" : "PlmnId",
        "name" : "RequesterPlmnList",
        "defaultValue" : "PlmnId()",
        "defaultValueWithParam" : " = data.RequesterPlmnList;",
        "baseType" : "PlmnId",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterPlmnList",
        "nameInSnakeCase" : "REQUESTER_PLMN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnId"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "requesterPlmnList",
      "nameInSnakeCase" : "REQUESTER_PLMN_LIST",
      "minItems" : 2,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<PlmnId>"
    }, {
      "openApiType" : "array",
      "baseName" : "requesterSnssaiList",
      "complexType" : "Snssai",
      "getter" : "getRequesterSnssaiList",
      "setter" : "setRequesterSnssaiList",
      "dataType" : "std::vector<Snssai>",
      "datatypeWithEnum" : "std::vector<Snssai>",
      "name" : "RequesterSnssaiList",
      "defaultValue" : "std::vector<Snssai>()",
      "defaultValueWithParam" : " = data.requesterSnssaiList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/Snssai\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "Snssai",
        "baseName" : "RequesterSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getRequesterSnssaiList",
        "setter" : "setRequesterSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "RequesterSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.RequesterSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnssaiList",
        "nameInSnakeCase" : "REQUESTER_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Snssai",
        "baseName" : "RequesterSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getRequesterSnssaiList",
        "setter" : "setRequesterSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "RequesterSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.RequesterSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnssaiList",
        "nameInSnakeCase" : "REQUESTER_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "requesterSnssaiList",
      "nameInSnakeCase" : "REQUESTER_SNSSAI_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<Snssai>"
    }, {
      "openApiType" : "string",
      "baseName" : "requesterFqdn",
      "complexType" : "std::string",
      "getter" : "getRequesterFqdn",
      "setter" : "setRequesterFqdn",
      "description" : "Fully Qualified Domain Name",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "RequesterFqdn",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.requesterFqdn;",
      "baseType" : "std::string",
      "unescapedDescription" : "Fully Qualified Domain Name",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Fully Qualified Domain Name\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "requesterFqdn",
      "nameInSnakeCase" : "REQUESTER_FQDN",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "array",
      "baseName" : "requesterSnpnList",
      "complexType" : "PlmnIdNid",
      "getter" : "getRequesterSnpnList",
      "setter" : "setRequesterSnpnList",
      "dataType" : "std::vector<PlmnIdNid>",
      "datatypeWithEnum" : "std::vector<PlmnIdNid>",
      "name" : "RequesterSnpnList",
      "defaultValue" : "std::vector<PlmnIdNid>()",
      "defaultValueWithParam" : " = data.requesterSnpnList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/PlmnIdNid\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "PlmnIdNid",
        "baseName" : "RequesterSnpnList",
        "complexType" : "PlmnIdNid",
        "getter" : "getRequesterSnpnList",
        "setter" : "setRequesterSnpnList",
        "dataType" : "PlmnIdNid",
        "datatypeWithEnum" : "PlmnIdNid",
        "name" : "RequesterSnpnList",
        "defaultValue" : "PlmnIdNid()",
        "defaultValueWithParam" : " = data.RequesterSnpnList;",
        "baseType" : "PlmnIdNid",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnIdNid\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnpnList",
        "nameInSnakeCase" : "REQUESTER_SNPN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnIdNid"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "PlmnIdNid",
        "baseName" : "RequesterSnpnList",
        "complexType" : "PlmnIdNid",
        "getter" : "getRequesterSnpnList",
        "setter" : "setRequesterSnpnList",
        "dataType" : "PlmnIdNid",
        "datatypeWithEnum" : "PlmnIdNid",
        "name" : "RequesterSnpnList",
        "defaultValue" : "PlmnIdNid()",
        "defaultValueWithParam" : " = data.RequesterSnpnList;",
        "baseType" : "PlmnIdNid",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnIdNid\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnpnList",
        "nameInSnakeCase" : "REQUESTER_SNPN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnIdNid"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "requesterSnpnList",
      "nameInSnakeCase" : "REQUESTER_SNPN_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<PlmnIdNid>"
    }, {
      "openApiType" : "PlmnId",
      "baseName" : "targetPlmn",
      "complexType" : "PlmnId",
      "getter" : "getTargetPlmn",
      "setter" : "setTargetPlmn",
      "dataType" : "PlmnId",
      "datatypeWithEnum" : "PlmnId",
      "name" : "TargetPlmn",
      "defaultValue" : "PlmnId()",
      "defaultValueWithParam" : " = data.targetPlmn;",
      "baseType" : "PlmnId",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetPlmn",
      "nameInSnakeCase" : "TARGET_PLMN",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "PlmnId"
    }, {
      "openApiType" : "array",
      "baseName" : "targetSnssaiList",
      "complexType" : "Snssai",
      "getter" : "getTargetSnssaiList",
      "setter" : "setTargetSnssaiList",
      "dataType" : "std::vector<Snssai>",
      "datatypeWithEnum" : "std::vector<Snssai>",
      "name" : "TargetSnssaiList",
      "defaultValue" : "std::vector<Snssai>()",
      "defaultValueWithParam" : " = data.targetSnssaiList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/Snssai\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "Snssai",
        "baseName" : "TargetSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getTargetSnssaiList",
        "setter" : "setTargetSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "TargetSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.TargetSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetSnssaiList",
        "nameInSnakeCase" : "TARGET_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Snssai",
        "baseName" : "TargetSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getTargetSnssaiList",
        "setter" : "setTargetSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "TargetSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.TargetSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetSnssaiList",
        "nameInSnakeCase" : "TARGET_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "targetSnssaiList",
      "nameInSnakeCase" : "TARGET_SNSSAI_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<Snssai>"
    }, {
      "openApiType" : "array",
      "baseName" : "targetNsiList",
      "complexType" : "std::string",
      "getter" : "getTargetNsiList",
      "setter" : "setTargetNsiList",
      "dataType" : "std::vector<std::string>",
      "datatypeWithEnum" : "std::vector<std::string>",
      "name" : "TargetNsiList",
      "defaultValue" : "std::vector<std::string>()",
      "defaultValueWithParam" : " = data.targetNsiList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "string",
        "baseName" : "TargetNsiList",
        "complexType" : "std::string",
        "getter" : "getTargetNsiList",
        "setter" : "setTargetNsiList",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TargetNsiList",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TargetNsiList;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetNsiList",
        "nameInSnakeCase" : "TARGET_NSI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "string",
        "baseName" : "TargetNsiList",
        "complexType" : "std::string",
        "getter" : "getTargetNsiList",
        "setter" : "setTargetNsiList",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TargetNsiList",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TargetNsiList;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetNsiList",
        "nameInSnakeCase" : "TARGET_NSI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "targetNsiList",
      "nameInSnakeCase" : "TARGET_NSI_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<std::string>"
    }, {
      "openApiType" : "string",
      "baseName" : "targetNfSetId",
      "complexType" : "std::string",
      "getter" : "getTargetNfSetId",
      "setter" : "setTargetNfSetId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TargetNfSetId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetNfSetId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfSetId",
      "nameInSnakeCase" : "TARGET_NF_SET_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "targetNfServiceSetId",
      "complexType" : "std::string",
      "getter" : "getTargetNfServiceSetId",
      "setter" : "setTargetNfServiceSetId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TargetNfServiceSetId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetNfServiceSetId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfServiceSetId",
      "nameInSnakeCase" : "TARGET_NF_SERVICE_SET_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "string",
      "baseName" : "grant_type",
      "complexType" : "std::string",
      "getter" : "getGrantType",
      "setter" : "setGrantType",
      "dataType" : "std::string",
      "datatypeWithEnum" : "Grant_typeEnum",
      "name" : "Grant_type",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.grant_type;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"enum\" : [ \"client_credentials\" ]\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : true,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "_enum" : [ "client_credentials" ],
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "CLIENT_CREDENTIALS",
          "isString" : false,
          "value" : "client_credentials"
        } ],
        "values" : [ "client_credentials" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "grantType",
      "nameInSnakeCase" : "GRANT_TYPE",
      "enumName" : "Grant_typeEnum",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "nfInstanceId",
      "complexType" : "std::string",
      "getter" : "getNfInstanceId",
      "setter" : "setNfInstanceId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "uuid",
      "name" : "NfInstanceId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nfInstanceId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"uuid\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : true,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nfInstanceId",
      "nameInSnakeCase" : "NF_INSTANCE_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "NFType",
      "baseName" : "nfType",
      "complexType" : "NFType",
      "getter" : "getNfType",
      "setter" : "setNfType",
      "dataType" : "NFType",
      "datatypeWithEnum" : "NFType",
      "name" : "NfType",
      "defaultValue" : "NFType()",
      "defaultValueWithParam" : " = data.nfType;",
      "baseType" : "NFType",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/NFType\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "NRF",
          "isString" : false,
          "value" : "NRF"
        }, {
          "name" : "UDM",
          "isString" : false,
          "value" : "UDM"
        }, {
          "name" : "AMF",
          "isString" : false,
          "value" : "AMF"
        }, {
          "name" : "SMF",
          "isString" : false,
          "value" : "SMF"
        }, {
          "name" : "AUSF",
          "isString" : false,
          "value" : "AUSF"
        }, {
          "name" : "NEF",
          "isString" : false,
          "value" : "NEF"
        }, {
          "name" : "PCF",
          "isString" : false,
          "value" : "PCF"
        }, {
          "name" : "SMSF",
          "isString" : false,
          "value" : "SMSF"
        }, {
          "name" : "NSSF",
          "isString" : false,
          "value" : "NSSF"
        }, {
          "name" : "UDR",
          "isString" : false,
          "value" : "UDR"
        }, {
          "name" : "LMF",
          "isString" : false,
          "value" : "LMF"
        }, {
          "name" : "GMLC",
          "isString" : false,
          "value" : "GMLC"
        }, {
          "name" : "_5G_EIR",
          "isString" : false,
          "value" : "5G_EIR"
        }, {
          "name" : "SEPP",
          "isString" : false,
          "value" : "SEPP"
        }, {
          "name" : "UPF",
          "isString" : false,
          "value" : "UPF"
        }, {
          "name" : "N3IWF",
          "isString" : false,
          "value" : "N3IWF"
        }, {
          "name" : "AF",
          "isString" : false,
          "value" : "AF"
        }, {
          "name" : "UDSF",
          "isString" : false,
          "value" : "UDSF"
        }, {
          "name" : "BSF",
          "isString" : false,
          "value" : "BSF"
        }, {
          "name" : "CHF",
          "isString" : false,
          "value" : "CHF"
        }, {
          "name" : "NWDAF",
          "isString" : false,
          "value" : "NWDAF"
        }, {
          "name" : "PCSCF",
          "isString" : false,
          "value" : "PCSCF"
        }, {
          "name" : "CBCF",
          "isString" : false,
          "value" : "CBCF"
        }, {
          "name" : "HSS",
          "isString" : false,
          "value" : "HSS"
        }, {
          "name" : "UCMF",
          "isString" : false,
          "value" : "UCMF"
        }, {
          "name" : "SOR_AF",
          "isString" : false,
          "value" : "SOR_AF"
        }, {
          "name" : "SPAF",
          "isString" : false,
          "value" : "SPAF"
        }, {
          "name" : "MME",
          "isString" : false,
          "value" : "MME"
        }, {
          "name" : "SCSAS",
          "isString" : false,
          "value" : "SCSAS"
        }, {
          "name" : "SCEF",
          "isString" : false,
          "value" : "SCEF"
        }, {
          "name" : "SCP",
          "isString" : false,
          "value" : "SCP"
        }, {
          "name" : "NSSAAF",
          "isString" : false,
          "value" : "NSSAAF"
        }, {
          "name" : "ICSCF",
          "isString" : false,
          "value" : "ICSCF"
        }, {
          "name" : "SCSCF",
          "isString" : false,
          "value" : "SCSCF"
        }, {
          "name" : "DRA",
          "isString" : false,
          "value" : "DRA"
        } ],
        "values" : [ "NRF", "UDM", "AMF", "SMF", "AUSF", "NEF", "PCF", "SMSF", "NSSF", "UDR", "LMF", "GMLC", "5G_EIR", "SEPP", "UPF", "N3IWF", "AF", "UDSF", "BSF", "CHF", "NWDAF", "PCSCF", "CBCF", "HSS", "UCMF", "SOR_AF", "SPAF", "MME", "SCSAS", "SCEF", "SCP", "NSSAAF", "ICSCF", "SCSCF", "DRA" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nfType",
      "nameInSnakeCase" : "NF_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "NFType"
    }, {
      "openApiType" : "NFType",
      "baseName" : "targetNfType",
      "complexType" : "NFType",
      "getter" : "getTargetNfType",
      "setter" : "setTargetNfType",
      "dataType" : "NFType",
      "datatypeWithEnum" : "NFType",
      "name" : "TargetNfType",
      "defaultValue" : "NFType()",
      "defaultValueWithParam" : " = data.targetNfType;",
      "baseType" : "NFType",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/NFType\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "NRF",
          "isString" : false,
          "value" : "NRF"
        }, {
          "name" : "UDM",
          "isString" : false,
          "value" : "UDM"
        }, {
          "name" : "AMF",
          "isString" : false,
          "value" : "AMF"
        }, {
          "name" : "SMF",
          "isString" : false,
          "value" : "SMF"
        }, {
          "name" : "AUSF",
          "isString" : false,
          "value" : "AUSF"
        }, {
          "name" : "NEF",
          "isString" : false,
          "value" : "NEF"
        }, {
          "name" : "PCF",
          "isString" : false,
          "value" : "PCF"
        }, {
          "name" : "SMSF",
          "isString" : false,
          "value" : "SMSF"
        }, {
          "name" : "NSSF",
          "isString" : false,
          "value" : "NSSF"
        }, {
          "name" : "UDR",
          "isString" : false,
          "value" : "UDR"
        }, {
          "name" : "LMF",
          "isString" : false,
          "value" : "LMF"
        }, {
          "name" : "GMLC",
          "isString" : false,
          "value" : "GMLC"
        }, {
          "name" : "_5G_EIR",
          "isString" : false,
          "value" : "5G_EIR"
        }, {
          "name" : "SEPP",
          "isString" : false,
          "value" : "SEPP"
        }, {
          "name" : "UPF",
          "isString" : false,
          "value" : "UPF"
        }, {
          "name" : "N3IWF",
          "isString" : false,
          "value" : "N3IWF"
        }, {
          "name" : "AF",
          "isString" : false,
          "value" : "AF"
        }, {
          "name" : "UDSF",
          "isString" : false,
          "value" : "UDSF"
        }, {
          "name" : "BSF",
          "isString" : false,
          "value" : "BSF"
        }, {
          "name" : "CHF",
          "isString" : false,
          "value" : "CHF"
        }, {
          "name" : "NWDAF",
          "isString" : false,
          "value" : "NWDAF"
        }, {
          "name" : "PCSCF",
          "isString" : false,
          "value" : "PCSCF"
        }, {
          "name" : "CBCF",
          "isString" : false,
          "value" : "CBCF"
        }, {
          "name" : "HSS",
          "isString" : false,
          "value" : "HSS"
        }, {
          "name" : "UCMF",
          "isString" : false,
          "value" : "UCMF"
        }, {
          "name" : "SOR_AF",
          "isString" : false,
          "value" : "SOR_AF"
        }, {
          "name" : "SPAF",
          "isString" : false,
          "value" : "SPAF"
        }, {
          "name" : "MME",
          "isString" : false,
          "value" : "MME"
        }, {
          "name" : "SCSAS",
          "isString" : false,
          "value" : "SCSAS"
        }, {
          "name" : "SCEF",
          "isString" : false,
          "value" : "SCEF"
        }, {
          "name" : "SCP",
          "isString" : false,
          "value" : "SCP"
        }, {
          "name" : "NSSAAF",
          "isString" : false,
          "value" : "NSSAAF"
        }, {
          "name" : "ICSCF",
          "isString" : false,
          "value" : "ICSCF"
        }, {
          "name" : "SCSCF",
          "isString" : false,
          "value" : "SCSCF"
        }, {
          "name" : "DRA",
          "isString" : false,
          "value" : "DRA"
        } ],
        "values" : [ "NRF", "UDM", "AMF", "SMF", "AUSF", "NEF", "PCF", "SMSF", "NSSF", "UDR", "LMF", "GMLC", "5G_EIR", "SEPP", "UPF", "N3IWF", "AF", "UDSF", "BSF", "CHF", "NWDAF", "PCSCF", "CBCF", "HSS", "UCMF", "SOR_AF", "SPAF", "MME", "SCSAS", "SCEF", "SCP", "NSSAAF", "ICSCF", "SCSCF", "DRA" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfType",
      "nameInSnakeCase" : "TARGET_NF_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "NFType"
    }, {
      "openApiType" : "string",
      "baseName" : "scope",
      "complexType" : "std::string",
      "getter" : "getScope",
      "setter" : "setScope",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Scope",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.scope;",
      "baseType" : "std::string",
      "pattern" : "/^([a-zA-Z0-9_:-]+)( [a-zA-Z0-9_:-]+)*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^([a-zA-Z0-9_:-]+)( [a-zA-Z0-9_:-]+)*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "scope",
      "nameInSnakeCase" : "SCOPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "targetNfInstanceId",
      "complexType" : "std::string",
      "getter" : "getTargetNfInstanceId",
      "setter" : "setTargetNfInstanceId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "uuid",
      "name" : "TargetNfInstanceId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetNfInstanceId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"uuid\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : true,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfInstanceId",
      "nameInSnakeCase" : "TARGET_NF_INSTANCE_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "PlmnId",
      "baseName" : "requesterPlmn",
      "complexType" : "PlmnId",
      "getter" : "getRequesterPlmn",
      "setter" : "setRequesterPlmn",
      "dataType" : "PlmnId",
      "datatypeWithEnum" : "PlmnId",
      "name" : "RequesterPlmn",
      "defaultValue" : "PlmnId()",
      "defaultValueWithParam" : " = data.requesterPlmn;",
      "baseType" : "PlmnId",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "requesterPlmn",
      "nameInSnakeCase" : "REQUESTER_PLMN",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "PlmnId"
    }, {
      "openApiType" : "array",
      "baseName" : "requesterPlmnList",
      "complexType" : "PlmnId",
      "getter" : "getRequesterPlmnList",
      "setter" : "setRequesterPlmnList",
      "dataType" : "std::vector<PlmnId>",
      "datatypeWithEnum" : "std::vector<PlmnId>",
      "name" : "RequesterPlmnList",
      "defaultValue" : "std::vector<PlmnId>()",
      "defaultValueWithParam" : " = data.requesterPlmnList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 2,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/PlmnId\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "PlmnId",
        "baseName" : "RequesterPlmnList",
        "complexType" : "PlmnId",
        "getter" : "getRequesterPlmnList",
        "setter" : "setRequesterPlmnList",
        "dataType" : "PlmnId",
        "datatypeWithEnum" : "PlmnId",
        "name" : "RequesterPlmnList",
        "defaultValue" : "PlmnId()",
        "defaultValueWithParam" : " = data.RequesterPlmnList;",
        "baseType" : "PlmnId",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterPlmnList",
        "nameInSnakeCase" : "REQUESTER_PLMN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnId"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "PlmnId",
        "baseName" : "RequesterPlmnList",
        "complexType" : "PlmnId",
        "getter" : "getRequesterPlmnList",
        "setter" : "setRequesterPlmnList",
        "dataType" : "PlmnId",
        "datatypeWithEnum" : "PlmnId",
        "name" : "RequesterPlmnList",
        "defaultValue" : "PlmnId()",
        "defaultValueWithParam" : " = data.RequesterPlmnList;",
        "baseType" : "PlmnId",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterPlmnList",
        "nameInSnakeCase" : "REQUESTER_PLMN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnId"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "requesterPlmnList",
      "nameInSnakeCase" : "REQUESTER_PLMN_LIST",
      "minItems" : 2,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<PlmnId>"
    }, {
      "openApiType" : "array",
      "baseName" : "requesterSnssaiList",
      "complexType" : "Snssai",
      "getter" : "getRequesterSnssaiList",
      "setter" : "setRequesterSnssaiList",
      "dataType" : "std::vector<Snssai>",
      "datatypeWithEnum" : "std::vector<Snssai>",
      "name" : "RequesterSnssaiList",
      "defaultValue" : "std::vector<Snssai>()",
      "defaultValueWithParam" : " = data.requesterSnssaiList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/Snssai\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "Snssai",
        "baseName" : "RequesterSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getRequesterSnssaiList",
        "setter" : "setRequesterSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "RequesterSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.RequesterSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnssaiList",
        "nameInSnakeCase" : "REQUESTER_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Snssai",
        "baseName" : "RequesterSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getRequesterSnssaiList",
        "setter" : "setRequesterSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "RequesterSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.RequesterSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnssaiList",
        "nameInSnakeCase" : "REQUESTER_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "requesterSnssaiList",
      "nameInSnakeCase" : "REQUESTER_SNSSAI_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<Snssai>"
    }, {
      "openApiType" : "string",
      "baseName" : "requesterFqdn",
      "complexType" : "std::string",
      "getter" : "getRequesterFqdn",
      "setter" : "setRequesterFqdn",
      "description" : "Fully Qualified Domain Name",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "RequesterFqdn",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.requesterFqdn;",
      "baseType" : "std::string",
      "unescapedDescription" : "Fully Qualified Domain Name",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"description\" : \"Fully Qualified Domain Name\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "requesterFqdn",
      "nameInSnakeCase" : "REQUESTER_FQDN",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "array",
      "baseName" : "requesterSnpnList",
      "complexType" : "PlmnIdNid",
      "getter" : "getRequesterSnpnList",
      "setter" : "setRequesterSnpnList",
      "dataType" : "std::vector<PlmnIdNid>",
      "datatypeWithEnum" : "std::vector<PlmnIdNid>",
      "name" : "RequesterSnpnList",
      "defaultValue" : "std::vector<PlmnIdNid>()",
      "defaultValueWithParam" : " = data.requesterSnpnList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/PlmnIdNid\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "PlmnIdNid",
        "baseName" : "RequesterSnpnList",
        "complexType" : "PlmnIdNid",
        "getter" : "getRequesterSnpnList",
        "setter" : "setRequesterSnpnList",
        "dataType" : "PlmnIdNid",
        "datatypeWithEnum" : "PlmnIdNid",
        "name" : "RequesterSnpnList",
        "defaultValue" : "PlmnIdNid()",
        "defaultValueWithParam" : " = data.RequesterSnpnList;",
        "baseType" : "PlmnIdNid",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnIdNid\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnpnList",
        "nameInSnakeCase" : "REQUESTER_SNPN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnIdNid"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "PlmnIdNid",
        "baseName" : "RequesterSnpnList",
        "complexType" : "PlmnIdNid",
        "getter" : "getRequesterSnpnList",
        "setter" : "setRequesterSnpnList",
        "dataType" : "PlmnIdNid",
        "datatypeWithEnum" : "PlmnIdNid",
        "name" : "RequesterSnpnList",
        "defaultValue" : "PlmnIdNid()",
        "defaultValueWithParam" : " = data.RequesterSnpnList;",
        "baseType" : "PlmnIdNid",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnIdNid\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "requesterSnpnList",
        "nameInSnakeCase" : "REQUESTER_SNPN_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "PlmnIdNid"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "requesterSnpnList",
      "nameInSnakeCase" : "REQUESTER_SNPN_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<PlmnIdNid>"
    }, {
      "openApiType" : "PlmnId",
      "baseName" : "targetPlmn",
      "complexType" : "PlmnId",
      "getter" : "getTargetPlmn",
      "setter" : "setTargetPlmn",
      "dataType" : "PlmnId",
      "datatypeWithEnum" : "PlmnId",
      "name" : "TargetPlmn",
      "defaultValue" : "PlmnId()",
      "defaultValueWithParam" : " = data.targetPlmn;",
      "baseType" : "PlmnId",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/PlmnId\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetPlmn",
      "nameInSnakeCase" : "TARGET_PLMN",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "PlmnId"
    }, {
      "openApiType" : "array",
      "baseName" : "targetSnssaiList",
      "complexType" : "Snssai",
      "getter" : "getTargetSnssaiList",
      "setter" : "setTargetSnssaiList",
      "dataType" : "std::vector<Snssai>",
      "datatypeWithEnum" : "std::vector<Snssai>",
      "name" : "TargetSnssaiList",
      "defaultValue" : "std::vector<Snssai>()",
      "defaultValueWithParam" : " = data.targetSnssaiList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/Snssai\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "Snssai",
        "baseName" : "TargetSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getTargetSnssaiList",
        "setter" : "setTargetSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "TargetSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.TargetSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetSnssaiList",
        "nameInSnakeCase" : "TARGET_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "Snssai",
        "baseName" : "TargetSnssaiList",
        "complexType" : "Snssai",
        "getter" : "getTargetSnssaiList",
        "setter" : "setTargetSnssaiList",
        "dataType" : "Snssai",
        "datatypeWithEnum" : "Snssai",
        "name" : "TargetSnssaiList",
        "defaultValue" : "Snssai()",
        "defaultValueWithParam" : " = data.TargetSnssaiList;",
        "baseType" : "Snssai",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/Snssai\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetSnssaiList",
        "nameInSnakeCase" : "TARGET_SNSSAI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "Snssai"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "targetSnssaiList",
      "nameInSnakeCase" : "TARGET_SNSSAI_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<Snssai>"
    }, {
      "openApiType" : "array",
      "baseName" : "targetNsiList",
      "complexType" : "std::string",
      "getter" : "getTargetNsiList",
      "setter" : "setTargetNsiList",
      "dataType" : "std::vector<std::string>",
      "datatypeWithEnum" : "std::vector<std::string>",
      "name" : "TargetNsiList",
      "defaultValue" : "std::vector<std::string>()",
      "defaultValueWithParam" : " = data.targetNsiList;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"type\" : \"string\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "string",
        "baseName" : "TargetNsiList",
        "complexType" : "std::string",
        "getter" : "getTargetNsiList",
        "setter" : "setTargetNsiList",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TargetNsiList",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TargetNsiList;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetNsiList",
        "nameInSnakeCase" : "TARGET_NSI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "string",
        "baseName" : "TargetNsiList",
        "complexType" : "std::string",
        "getter" : "getTargetNsiList",
        "setter" : "setTargetNsiList",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TargetNsiList",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TargetNsiList;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "targetNsiList",
        "nameInSnakeCase" : "TARGET_NSI_LIST",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "targetNsiList",
      "nameInSnakeCase" : "TARGET_NSI_LIST",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<std::string>"
    }, {
      "openApiType" : "string",
      "baseName" : "targetNfSetId",
      "complexType" : "std::string",
      "getter" : "getTargetNfSetId",
      "setter" : "setTargetNfSetId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TargetNfSetId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetNfSetId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfSetId",
      "nameInSnakeCase" : "TARGET_NF_SET_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "targetNfServiceSetId",
      "complexType" : "std::string",
      "getter" : "getTargetNfServiceSetId",
      "setter" : "setTargetNfServiceSetId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TargetNfServiceSetId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetNfServiceSetId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetNfServiceSetId",
      "nameInSnakeCase" : "TARGET_NF_SERVICE_SET_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "Grant_type", "NfInstanceId", "Scope" ],
    "allMandatory" : [ "Grant_type", "NfInstanceId", "Scope" ],
    "imports" : [ "#include \"NFType.h\"", "#include \"PlmnIdNid.h\"", "#include <string>", "#include \"PlmnId.h\"", "#include \"Snssai.h\"", "#include <vector>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : true,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : true,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"CreateSubscription.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "CreateSubscription",
    "classname" : "CreateSubscription",
    "classVarName" : "CreateSubscription",
    "modelJson" : "{\n  \"required\" : [ \"ucmfNotificationUri\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"nfId\" : {\n      \"$ref\" : \"#/components/schemas/NfInstanceId\"\n    },\n    \"ucmfNotificationUri\" : {\n      \"$ref\" : \"#/components/schemas/Uri\"\n    },\n    \"suggestedExpires\" : {\n      \"$ref\" : \"#/components/schemas/DateTime\"\n    },\n    \"supportedFeatures\" : {\n      \"$ref\" : \"#/components/schemas/SupportedFeatures\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "CreateSubscription",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "string",
      "baseName" : "nfId",
      "complexType" : "std::string",
      "getter" : "getNfId",
      "setter" : "setNfId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "uuid",
      "name" : "NfId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nfId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"uuid\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : true,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nfId",
      "nameInSnakeCase" : "NF_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "ucmfNotificationUri",
      "complexType" : "std::string",
      "getter" : "getUcmfNotificationUri",
      "setter" : "setUcmfNotificationUri",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "UcmfNotificationUri",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.ucmfNotificationUri;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ucmfNotificationUri",
      "nameInSnakeCase" : "UCMF_NOTIFICATION_URI",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "suggestedExpires",
      "complexType" : "std::string",
      "getter" : "getSuggestedExpires",
      "setter" : "setSuggestedExpires",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "date-time",
      "name" : "SuggestedExpires",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.suggestedExpires;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : true,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "suggestedExpires",
      "nameInSnakeCase" : "SUGGESTED_EXPIRES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "string",
      "baseName" : "nfId",
      "complexType" : "std::string",
      "getter" : "getNfId",
      "setter" : "setNfId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "uuid",
      "name" : "NfId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nfId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"uuid\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : true,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nfId",
      "nameInSnakeCase" : "NF_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "ucmfNotificationUri",
      "complexType" : "std::string",
      "getter" : "getUcmfNotificationUri",
      "setter" : "setUcmfNotificationUri",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "UcmfNotificationUri",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.ucmfNotificationUri;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ucmfNotificationUri",
      "nameInSnakeCase" : "UCMF_NOTIFICATION_URI",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "suggestedExpires",
      "complexType" : "std::string",
      "getter" : "getSuggestedExpires",
      "setter" : "setSuggestedExpires",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "date-time",
      "name" : "SuggestedExpires",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.suggestedExpires;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : true,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "suggestedExpires",
      "nameInSnakeCase" : "SUGGESTED_EXPIRES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ {
      "openApiType" : "string",
      "baseName" : "ucmfNotificationUri",
      "complexType" : "std::string",
      "getter" : "getUcmfNotificationUri",
      "setter" : "setUcmfNotificationUri",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "UcmfNotificationUri",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.ucmfNotificationUri;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ucmfNotificationUri",
      "nameInSnakeCase" : "UCMF_NOTIFICATION_URI",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "optionalVars" : [ {
      "openApiType" : "string",
      "baseName" : "nfId",
      "complexType" : "std::string",
      "getter" : "getNfId",
      "setter" : "setNfId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "uuid",
      "name" : "NfId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nfId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"uuid\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : true,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nfId",
      "nameInSnakeCase" : "NF_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "suggestedExpires",
      "complexType" : "std::string",
      "getter" : "getSuggestedExpires",
      "setter" : "setSuggestedExpires",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "date-time",
      "name" : "SuggestedExpires",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.suggestedExpires;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : true,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "suggestedExpires",
      "nameInSnakeCase" : "SUGGESTED_EXPIRES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "string",
      "baseName" : "nfId",
      "complexType" : "std::string",
      "getter" : "getNfId",
      "setter" : "setNfId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "uuid",
      "name" : "NfId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nfId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"uuid\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : true,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nfId",
      "nameInSnakeCase" : "NF_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "ucmfNotificationUri",
      "complexType" : "std::string",
      "getter" : "getUcmfNotificationUri",
      "setter" : "setUcmfNotificationUri",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "UcmfNotificationUri",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.ucmfNotificationUri;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ucmfNotificationUri",
      "nameInSnakeCase" : "UCMF_NOTIFICATION_URI",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "suggestedExpires",
      "complexType" : "std::string",
      "getter" : "getSuggestedExpires",
      "setter" : "setSuggestedExpires",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "date-time",
      "name" : "SuggestedExpires",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.suggestedExpires;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : true,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "suggestedExpires",
      "nameInSnakeCase" : "SUGGESTED_EXPIRES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "UcmfNotificationUri" ],
    "allMandatory" : [ "UcmfNotificationUri" ],
    "imports" : [ "#include <string>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : true,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"CreatedSubscription.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "CreatedSubscription",
    "classname" : "CreatedSubscription",
    "classVarName" : "CreatedSubscription",
    "modelJson" : "{\n  \"required\" : [ \"dicEntryId\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"dicEntryId\" : {\n      \"$ref\" : \"#/components/schemas/DicEntryId\"\n    },\n    \"confirmedExpires\" : {\n      \"$ref\" : \"#/components/schemas/DateTime\"\n    },\n    \"supportedFeatures\" : {\n      \"$ref\" : \"#/components/schemas/SupportedFeatures\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "CreatedSubscription",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "integer",
      "baseName" : "dicEntryId",
      "getter" : "getDicEntryId",
      "setter" : "setDicEntryId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "DicEntryId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.dicEntryId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 4294967295,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "4294967295",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "dicEntryId",
      "nameInSnakeCase" : "DIC_ENTRY_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "confirmedExpires",
      "complexType" : "std::string",
      "getter" : "getConfirmedExpires",
      "setter" : "setConfirmedExpires",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "date-time",
      "name" : "ConfirmedExpires",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.confirmedExpires;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : true,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "confirmedExpires",
      "nameInSnakeCase" : "CONFIRMED_EXPIRES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "integer",
      "baseName" : "dicEntryId",
      "getter" : "getDicEntryId",
      "setter" : "setDicEntryId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "DicEntryId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.dicEntryId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 4294967295,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "4294967295",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "dicEntryId",
      "nameInSnakeCase" : "DIC_ENTRY_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "confirmedExpires",
      "complexType" : "std::string",
      "getter" : "getConfirmedExpires",
      "setter" : "setConfirmedExpires",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "date-time",
      "name" : "ConfirmedExpires",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.confirmedExpires;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : true,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "confirmedExpires",
      "nameInSnakeCase" : "CONFIRMED_EXPIRES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ {
      "openApiType" : "integer",
      "baseName" : "dicEntryId",
      "getter" : "getDicEntryId",
      "setter" : "setDicEntryId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "DicEntryId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.dicEntryId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 4294967295,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "4294967295",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "dicEntryId",
      "nameInSnakeCase" : "DIC_ENTRY_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    } ],
    "optionalVars" : [ {
      "openApiType" : "string",
      "baseName" : "confirmedExpires",
      "complexType" : "std::string",
      "getter" : "getConfirmedExpires",
      "setter" : "setConfirmedExpires",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "date-time",
      "name" : "ConfirmedExpires",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.confirmedExpires;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : true,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "confirmedExpires",
      "nameInSnakeCase" : "CONFIRMED_EXPIRES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "integer",
      "baseName" : "dicEntryId",
      "getter" : "getDicEntryId",
      "setter" : "setDicEntryId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "DicEntryId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.dicEntryId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 4294967295,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "4294967295",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "dicEntryId",
      "nameInSnakeCase" : "DIC_ENTRY_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "confirmedExpires",
      "complexType" : "std::string",
      "getter" : "getConfirmedExpires",
      "setter" : "setConfirmedExpires",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "date-time",
      "name" : "ConfirmedExpires",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.confirmedExpires;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"date-time\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : true,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "confirmedExpires",
      "nameInSnakeCase" : "CONFIRMED_EXPIRES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "DicEntryId" ],
    "allMandatory" : [ "DicEntryId" ],
    "imports" : [ "#include <string>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : true,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"DicEntryCreateData.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "DicEntryCreateData",
    "classname" : "DicEntryCreateData",
    "classVarName" : "DicEntryCreateData",
    "modelJson" : "{\n  \"required\" : [ \"typeAllocationCode\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"typeAllocationCode\" : {\n      \"$ref\" : \"#/components/schemas/TypeAllocationCode\"\n    },\n    \"ueRadioCapability5GS\" : {\n      \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n    },\n    \"ueRadioCapabilityEPS\" : {\n      \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n    },\n    \"supportedFeatures\" : {\n      \"$ref\" : \"#/components/schemas/SupportedFeatures\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "DicEntryCreateData",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "string",
      "baseName" : "typeAllocationCode",
      "complexType" : "std::string",
      "getter" : "getTypeAllocationCode",
      "setter" : "setTypeAllocationCode",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TypeAllocationCode",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.typeAllocationCode;",
      "baseType" : "std::string",
      "pattern" : "/^[0-9]{8}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "typeAllocationCode",
      "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapability5GS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapability5GS",
      "setter" : "setUeRadioCapability5GS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapability5GS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapability5GS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapability5GS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapabilityEPS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapabilityEPS",
      "setter" : "setUeRadioCapabilityEPS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapabilityEPS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapabilityEPS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapabilityEPS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "string",
      "baseName" : "typeAllocationCode",
      "complexType" : "std::string",
      "getter" : "getTypeAllocationCode",
      "setter" : "setTypeAllocationCode",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TypeAllocationCode",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.typeAllocationCode;",
      "baseType" : "std::string",
      "pattern" : "/^[0-9]{8}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "typeAllocationCode",
      "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapability5GS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapability5GS",
      "setter" : "setUeRadioCapability5GS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapability5GS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapability5GS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapability5GS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapabilityEPS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapabilityEPS",
      "setter" : "setUeRadioCapabilityEPS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapabilityEPS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapabilityEPS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapabilityEPS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ {
      "openApiType" : "string",
      "baseName" : "typeAllocationCode",
      "complexType" : "std::string",
      "getter" : "getTypeAllocationCode",
      "setter" : "setTypeAllocationCode",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TypeAllocationCode",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.typeAllocationCode;",
      "baseType" : "std::string",
      "pattern" : "/^[0-9]{8}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "typeAllocationCode",
      "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "optionalVars" : [ {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapability5GS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapability5GS",
      "setter" : "setUeRadioCapability5GS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapability5GS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapability5GS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapability5GS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapabilityEPS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapabilityEPS",
      "setter" : "setUeRadioCapabilityEPS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapabilityEPS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapabilityEPS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapabilityEPS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "string",
      "baseName" : "typeAllocationCode",
      "complexType" : "std::string",
      "getter" : "getTypeAllocationCode",
      "setter" : "setTypeAllocationCode",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TypeAllocationCode",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.typeAllocationCode;",
      "baseType" : "std::string",
      "pattern" : "/^[0-9]{8}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "typeAllocationCode",
      "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapability5GS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapability5GS",
      "setter" : "setUeRadioCapability5GS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapability5GS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapability5GS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapability5GS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapabilityEPS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapabilityEPS",
      "setter" : "setUeRadioCapabilityEPS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapabilityEPS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapabilityEPS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapabilityEPS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "TypeAllocationCode" ],
    "allMandatory" : [ "TypeAllocationCode" ],
    "imports" : [ "#include \"RefToBinaryData.h\"", "#include <string>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : true,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"DicEntryCreatedData.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "DicEntryCreatedData",
    "classname" : "DicEntryCreatedData",
    "classVarName" : "DicEntryCreatedData",
    "modelJson" : "{\n  \"required\" : [ \"plmnAssiUeRadioCapId\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"plmnAssiUeRadioCapId\" : {\n      \"$ref\" : \"#/components/schemas/PlmnAssiUeRadioCapId\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "DicEntryCreatedData",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "string",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "string",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ {
      "openApiType" : "string",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "optionalVars" : [ ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "string",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "PlmnAssiUeRadioCapId" ],
    "allMandatory" : [ "PlmnAssiUeRadioCapId" ],
    "imports" : [ "#include <string>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : true,
    "hasOptional" : false,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"DicEntryData.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "DicEntryData",
    "classname" : "DicEntryData",
    "classVarName" : "DicEntryData",
    "modelJson" : "{\n  \"required\" : [ \"typeAllocationCode\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"dicEntryId\" : {\n      \"$ref\" : \"#/components/schemas/DicEntryId\"\n    },\n    \"typeAllocationCode\" : {\n      \"$ref\" : \"#/components/schemas/TypeAllocationCode\"\n    },\n    \"plmnAssiUeRadioCapId\" : {\n      \"$ref\" : \"#/components/schemas/PlmnAssiUeRadioCapId\"\n    },\n    \"manAssiUeRadioCapId\" : {\n      \"$ref\" : \"#/components/schemas/ManAssiUeRadioCapId\"\n    },\n    \"ueRadioCapability5GS\" : {\n      \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n    },\n    \"ueRadioCapabilityEPS\" : {\n      \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "DicEntryData",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "integer",
      "baseName" : "dicEntryId",
      "getter" : "getDicEntryId",
      "setter" : "setDicEntryId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "DicEntryId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.dicEntryId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 4294967295,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "4294967295",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "dicEntryId",
      "nameInSnakeCase" : "DIC_ENTRY_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "typeAllocationCode",
      "complexType" : "std::string",
      "getter" : "getTypeAllocationCode",
      "setter" : "setTypeAllocationCode",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TypeAllocationCode",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.typeAllocationCode;",
      "baseType" : "std::string",
      "pattern" : "/^[0-9]{8}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "typeAllocationCode",
      "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "manAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getManAssiUeRadioCapId",
      "setter" : "setManAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "ManAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.manAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "manAssiUeRadioCapId",
      "nameInSnakeCase" : "MAN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapability5GS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapability5GS",
      "setter" : "setUeRadioCapability5GS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapability5GS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapability5GS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapability5GS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapabilityEPS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapabilityEPS",
      "setter" : "setUeRadioCapabilityEPS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapabilityEPS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapabilityEPS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapabilityEPS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    } ],
    "allVars" : [ {
      "openApiType" : "integer",
      "baseName" : "dicEntryId",
      "getter" : "getDicEntryId",
      "setter" : "setDicEntryId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "DicEntryId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.dicEntryId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 4294967295,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "4294967295",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "dicEntryId",
      "nameInSnakeCase" : "DIC_ENTRY_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "typeAllocationCode",
      "complexType" : "std::string",
      "getter" : "getTypeAllocationCode",
      "setter" : "setTypeAllocationCode",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TypeAllocationCode",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.typeAllocationCode;",
      "baseType" : "std::string",
      "pattern" : "/^[0-9]{8}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "typeAllocationCode",
      "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "manAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getManAssiUeRadioCapId",
      "setter" : "setManAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "ManAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.manAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "manAssiUeRadioCapId",
      "nameInSnakeCase" : "MAN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapability5GS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapability5GS",
      "setter" : "setUeRadioCapability5GS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapability5GS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapability5GS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapability5GS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapabilityEPS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapabilityEPS",
      "setter" : "setUeRadioCapabilityEPS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapabilityEPS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapabilityEPS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapabilityEPS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    } ],
    "requiredVars" : [ {
      "openApiType" : "string",
      "baseName" : "typeAllocationCode",
      "complexType" : "std::string",
      "getter" : "getTypeAllocationCode",
      "setter" : "setTypeAllocationCode",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TypeAllocationCode",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.typeAllocationCode;",
      "baseType" : "std::string",
      "pattern" : "/^[0-9]{8}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "typeAllocationCode",
      "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "optionalVars" : [ {
      "openApiType" : "integer",
      "baseName" : "dicEntryId",
      "getter" : "getDicEntryId",
      "setter" : "setDicEntryId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "DicEntryId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.dicEntryId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 4294967295,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "4294967295",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "dicEntryId",
      "nameInSnakeCase" : "DIC_ENTRY_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "manAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getManAssiUeRadioCapId",
      "setter" : "setManAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "ManAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.manAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "manAssiUeRadioCapId",
      "nameInSnakeCase" : "MAN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapability5GS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapability5GS",
      "setter" : "setUeRadioCapability5GS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapability5GS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapability5GS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapability5GS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapabilityEPS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapabilityEPS",
      "setter" : "setUeRadioCapabilityEPS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapabilityEPS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapabilityEPS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapabilityEPS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "integer",
      "baseName" : "dicEntryId",
      "getter" : "getDicEntryId",
      "setter" : "setDicEntryId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "DicEntryId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.dicEntryId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 4294967295,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "4294967295",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "dicEntryId",
      "nameInSnakeCase" : "DIC_ENTRY_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "typeAllocationCode",
      "complexType" : "std::string",
      "getter" : "getTypeAllocationCode",
      "setter" : "setTypeAllocationCode",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TypeAllocationCode",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.typeAllocationCode;",
      "baseType" : "std::string",
      "pattern" : "/^[0-9]{8}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "typeAllocationCode",
      "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "manAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getManAssiUeRadioCapId",
      "setter" : "setManAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "ManAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.manAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "manAssiUeRadioCapId",
      "nameInSnakeCase" : "MAN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapability5GS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapability5GS",
      "setter" : "setUeRadioCapability5GS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapability5GS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapability5GS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapability5GS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    }, {
      "openApiType" : "RefToBinaryData",
      "baseName" : "ueRadioCapabilityEPS",
      "complexType" : "RefToBinaryData",
      "getter" : "getUeRadioCapabilityEPS",
      "setter" : "setUeRadioCapabilityEPS",
      "dataType" : "RefToBinaryData",
      "datatypeWithEnum" : "RefToBinaryData",
      "name" : "UeRadioCapabilityEPS",
      "defaultValue" : "RefToBinaryData()",
      "defaultValueWithParam" : " = data.ueRadioCapabilityEPS;",
      "baseType" : "RefToBinaryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/RefToBinaryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "ueRadioCapabilityEPS",
      "nameInSnakeCase" : "UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "RefToBinaryData"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "TypeAllocationCode" ],
    "allMandatory" : [ "TypeAllocationCode" ],
    "imports" : [ "#include \"RefToBinaryData.h\"", "#include <string>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : true,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"EventType.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "EventType",
    "classname" : "EventType",
    "classVarName" : "EventType",
    "modelJson" : "{\n  \"type\" : \"string\",\n  \"enum\" : [ \"CREATION_OF_DICTIONARY_ENTRY\", \"DELETION_OF_PLMN_ASSIGNED_IDS\", \"NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDs\" ]\n}",
    "dataType" : "std::string",
    "classFilename" : "EventType",
    "isAlias" : false,
    "isString" : true,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ ],
    "allVars" : [ ],
    "requiredVars" : [ ],
    "optionalVars" : [ ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ ],
    "parentVars" : [ ],
    "allowableValues" : {
      "values" : [ "CREATION_OF_DICTIONARY_ENTRY", "DELETION_OF_PLMN_ASSIGNED_IDS", "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDs" ],
      "enumVars" : [ {
        "name" : "CREATION_OF_DICTIONARY_ENTRY",
        "isString" : false,
        "value" : "CREATION_OF_DICTIONARY_ENTRY"
      }, {
        "name" : "DELETION_OF_PLMN_ASSIGNED_IDS",
        "isString" : false,
        "value" : "DELETION_OF_PLMN_ASSIGNED_IDS"
      }, {
        "name" : "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDS",
        "isString" : false,
        "value" : "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDs"
      } ]
    },
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ ],
    "hasVars" : false,
    "emptyVars" : true,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : true,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : false,
    "hasOptional" : false,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : true,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"Inline_object.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "inline_object",
    "classname" : "Inline_object",
    "classVarName" : "Inline_object",
    "modelJson" : "{\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"jsonData\" : {\n      \"$ref\" : \"#/components/schemas/DicEntryCreateData\"\n    },\n    \"binaryDataUeRadioCapability5GS\" : {\n      \"type\" : \"string\",\n      \"format\" : \"binary\"\n    },\n    \"binaryDataUeRadioCapabilityEPS\" : {\n      \"type\" : \"string\",\n      \"format\" : \"binary\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "Inline_object",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "DicEntryCreateData",
      "baseName" : "jsonData",
      "complexType" : "DicEntryCreateData",
      "getter" : "getJsonData",
      "setter" : "setJsonData",
      "dataType" : "DicEntryCreateData",
      "datatypeWithEnum" : "DicEntryCreateData",
      "name" : "JsonData",
      "defaultValue" : "DicEntryCreateData()",
      "defaultValueWithParam" : " = data.jsonData;",
      "baseType" : "DicEntryCreateData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/DicEntryCreateData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "jsonData",
      "nameInSnakeCase" : "JSON_DATA",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "DicEntryCreateData"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapability5GS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapability5GS",
      "setter" : "setBinaryDataUeRadioCapability5GS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapability5GS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapability5GS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapability5GS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapabilityEPS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapabilityEPS",
      "setter" : "setBinaryDataUeRadioCapabilityEPS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapabilityEPS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapabilityEPS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapabilityEPS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "DicEntryCreateData",
      "baseName" : "jsonData",
      "complexType" : "DicEntryCreateData",
      "getter" : "getJsonData",
      "setter" : "setJsonData",
      "dataType" : "DicEntryCreateData",
      "datatypeWithEnum" : "DicEntryCreateData",
      "name" : "JsonData",
      "defaultValue" : "DicEntryCreateData()",
      "defaultValueWithParam" : " = data.jsonData;",
      "baseType" : "DicEntryCreateData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/DicEntryCreateData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "jsonData",
      "nameInSnakeCase" : "JSON_DATA",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "DicEntryCreateData"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapability5GS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapability5GS",
      "setter" : "setBinaryDataUeRadioCapability5GS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapability5GS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapability5GS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapability5GS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapabilityEPS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapabilityEPS",
      "setter" : "setBinaryDataUeRadioCapabilityEPS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapabilityEPS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapabilityEPS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapabilityEPS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ ],
    "optionalVars" : [ {
      "openApiType" : "DicEntryCreateData",
      "baseName" : "jsonData",
      "complexType" : "DicEntryCreateData",
      "getter" : "getJsonData",
      "setter" : "setJsonData",
      "dataType" : "DicEntryCreateData",
      "datatypeWithEnum" : "DicEntryCreateData",
      "name" : "JsonData",
      "defaultValue" : "DicEntryCreateData()",
      "defaultValueWithParam" : " = data.jsonData;",
      "baseType" : "DicEntryCreateData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/DicEntryCreateData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "jsonData",
      "nameInSnakeCase" : "JSON_DATA",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "DicEntryCreateData"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapability5GS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapability5GS",
      "setter" : "setBinaryDataUeRadioCapability5GS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapability5GS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapability5GS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapability5GS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapabilityEPS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapabilityEPS",
      "setter" : "setBinaryDataUeRadioCapabilityEPS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapabilityEPS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapabilityEPS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapabilityEPS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "DicEntryCreateData",
      "baseName" : "jsonData",
      "complexType" : "DicEntryCreateData",
      "getter" : "getJsonData",
      "setter" : "setJsonData",
      "dataType" : "DicEntryCreateData",
      "datatypeWithEnum" : "DicEntryCreateData",
      "name" : "JsonData",
      "defaultValue" : "DicEntryCreateData()",
      "defaultValueWithParam" : " = data.jsonData;",
      "baseType" : "DicEntryCreateData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/DicEntryCreateData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "jsonData",
      "nameInSnakeCase" : "JSON_DATA",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "DicEntryCreateData"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapability5GS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapability5GS",
      "setter" : "setBinaryDataUeRadioCapability5GS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapability5GS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapability5GS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapability5GS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapabilityEPS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapabilityEPS",
      "setter" : "setBinaryDataUeRadioCapabilityEPS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapabilityEPS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapabilityEPS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapabilityEPS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ "#include <string>", "#include \"DicEntryCreateData.h\"" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : false,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : true
  }
}, {
  "importPath" : "#include \"Inline_response_200.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "inline_response_200",
    "classname" : "Inline_response_200",
    "classVarName" : "Inline_response_200",
    "modelJson" : "{\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"jsonData\" : {\n      \"$ref\" : \"#/components/schemas/DicEntryData\"\n    },\n    \"binaryDataUeRadioCapability5GS\" : {\n      \"type\" : \"string\",\n      \"format\" : \"binary\"\n    },\n    \"binaryDataUeRadioCapabilityEPS\" : {\n      \"type\" : \"string\",\n      \"format\" : \"binary\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "Inline_response_200",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "DicEntryData",
      "baseName" : "jsonData",
      "complexType" : "DicEntryData",
      "getter" : "getJsonData",
      "setter" : "setJsonData",
      "dataType" : "DicEntryData",
      "datatypeWithEnum" : "DicEntryData",
      "name" : "JsonData",
      "defaultValue" : "DicEntryData()",
      "defaultValueWithParam" : " = data.jsonData;",
      "baseType" : "DicEntryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/DicEntryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "jsonData",
      "nameInSnakeCase" : "JSON_DATA",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "DicEntryData"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapability5GS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapability5GS",
      "setter" : "setBinaryDataUeRadioCapability5GS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapability5GS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapability5GS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapability5GS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapabilityEPS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapabilityEPS",
      "setter" : "setBinaryDataUeRadioCapabilityEPS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapabilityEPS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapabilityEPS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapabilityEPS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "DicEntryData",
      "baseName" : "jsonData",
      "complexType" : "DicEntryData",
      "getter" : "getJsonData",
      "setter" : "setJsonData",
      "dataType" : "DicEntryData",
      "datatypeWithEnum" : "DicEntryData",
      "name" : "JsonData",
      "defaultValue" : "DicEntryData()",
      "defaultValueWithParam" : " = data.jsonData;",
      "baseType" : "DicEntryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/DicEntryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "jsonData",
      "nameInSnakeCase" : "JSON_DATA",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "DicEntryData"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapability5GS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapability5GS",
      "setter" : "setBinaryDataUeRadioCapability5GS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapability5GS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapability5GS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapability5GS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapabilityEPS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapabilityEPS",
      "setter" : "setBinaryDataUeRadioCapabilityEPS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapabilityEPS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapabilityEPS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapabilityEPS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ ],
    "optionalVars" : [ {
      "openApiType" : "DicEntryData",
      "baseName" : "jsonData",
      "complexType" : "DicEntryData",
      "getter" : "getJsonData",
      "setter" : "setJsonData",
      "dataType" : "DicEntryData",
      "datatypeWithEnum" : "DicEntryData",
      "name" : "JsonData",
      "defaultValue" : "DicEntryData()",
      "defaultValueWithParam" : " = data.jsonData;",
      "baseType" : "DicEntryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/DicEntryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "jsonData",
      "nameInSnakeCase" : "JSON_DATA",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "DicEntryData"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapability5GS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapability5GS",
      "setter" : "setBinaryDataUeRadioCapability5GS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapability5GS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapability5GS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapability5GS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapabilityEPS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapabilityEPS",
      "setter" : "setBinaryDataUeRadioCapabilityEPS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapabilityEPS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapabilityEPS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapabilityEPS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "DicEntryData",
      "baseName" : "jsonData",
      "complexType" : "DicEntryData",
      "getter" : "getJsonData",
      "setter" : "setJsonData",
      "dataType" : "DicEntryData",
      "datatypeWithEnum" : "DicEntryData",
      "name" : "JsonData",
      "defaultValue" : "DicEntryData()",
      "defaultValueWithParam" : " = data.jsonData;",
      "baseType" : "DicEntryData",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/DicEntryData\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "jsonData",
      "nameInSnakeCase" : "JSON_DATA",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "DicEntryData"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapability5GS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapability5GS",
      "setter" : "setBinaryDataUeRadioCapability5GS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapability5GS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapability5GS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapability5GS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY5_G_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "binaryDataUeRadioCapabilityEPS",
      "complexType" : "std::string",
      "getter" : "getBinaryDataUeRadioCapabilityEPS",
      "setter" : "setBinaryDataUeRadioCapabilityEPS",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "binary",
      "name" : "BinaryDataUeRadioCapabilityEPS",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.binaryDataUeRadioCapabilityEPS;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"binary\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : true,
      "isFile" : true,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "binaryDataUeRadioCapabilityEPS",
      "nameInSnakeCase" : "BINARY_DATA_UE_RADIO_CAPABILITY_E_P_S",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ "#include <string>", "#include \"DicEntryData.h\"" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : false,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : true
  }
}, {
  "importPath" : "#include \"InvalidParam.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "InvalidParam",
    "classname" : "InvalidParam",
    "classVarName" : "InvalidParam",
    "modelJson" : "{\n  \"required\" : [ \"param\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"param\" : {\n      \"type\" : \"string\"\n    },\n    \"reason\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "InvalidParam",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "string",
      "baseName" : "param",
      "complexType" : "std::string",
      "getter" : "getParam",
      "setter" : "setParam",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Param",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.param;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "param",
      "nameInSnakeCase" : "PARAM",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "reason",
      "complexType" : "std::string",
      "getter" : "getReason",
      "setter" : "setReason",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Reason",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.reason;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "reason",
      "nameInSnakeCase" : "REASON",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "string",
      "baseName" : "param",
      "complexType" : "std::string",
      "getter" : "getParam",
      "setter" : "setParam",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Param",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.param;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "param",
      "nameInSnakeCase" : "PARAM",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "reason",
      "complexType" : "std::string",
      "getter" : "getReason",
      "setter" : "setReason",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Reason",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.reason;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "reason",
      "nameInSnakeCase" : "REASON",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ {
      "openApiType" : "string",
      "baseName" : "param",
      "complexType" : "std::string",
      "getter" : "getParam",
      "setter" : "setParam",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Param",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.param;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "param",
      "nameInSnakeCase" : "PARAM",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "optionalVars" : [ {
      "openApiType" : "string",
      "baseName" : "reason",
      "complexType" : "std::string",
      "getter" : "getReason",
      "setter" : "setReason",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Reason",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.reason;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "reason",
      "nameInSnakeCase" : "REASON",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "string",
      "baseName" : "param",
      "complexType" : "std::string",
      "getter" : "getParam",
      "setter" : "setParam",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Param",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.param;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "param",
      "nameInSnakeCase" : "PARAM",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "reason",
      "complexType" : "std::string",
      "getter" : "getReason",
      "setter" : "setReason",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Reason",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.reason;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "reason",
      "nameInSnakeCase" : "REASON",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "Param" ],
    "allMandatory" : [ "Param" ],
    "imports" : [ "#include <string>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : true,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"ManAssOpRequestlist.h\"",
  "model" : {
    "interfaces" : [ ],
    "anyOf" : [ ],
    "oneOf" : [ "AnyType" ],
    "allOf" : [ ],
    "name" : "manAssOpRequestlist",
    "classname" : "ManAssOpRequestlist",
    "classVarName" : "ManAssOpRequestlist",
    "modelJson" : "{\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"plmnAssiUeRadioCapId\" : {\n      \"minItems\" : 1,\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/components/schemas/PlmnAssiUeRadioCapId\"\n      }\n    },\n    \"typeAllocationCode\" : {\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/components/schemas/TypeAllocationCode\"\n      }\n    }\n  },\n  \"oneOf\" : [ {\n    \"required\" : [ \"plmnAssiUeRadioCapId\" ]\n  }, {\n    \"required\" : [ \"typeAllocationCod\" ]\n  } ]\n}",
    "classFilename" : "ManAssOpRequestlist",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "array",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::vector<std::string>",
      "datatypeWithEnum" : "std::vector<std::string>",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "std::vector<std::string>()",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/PlmnAssiUeRadioCapId\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "string",
        "baseName" : "PlmnAssiUeRadioCapId",
        "complexType" : "std::string",
        "getter" : "getPlmnAssiUeRadioCapId",
        "setter" : "setPlmnAssiUeRadioCapId",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "dataFormat" : "byte",
        "name" : "PlmnAssiUeRadioCapId",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.PlmnAssiUeRadioCapId;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : true,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "plmnAssiUeRadioCapId",
        "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "string",
        "baseName" : "PlmnAssiUeRadioCapId",
        "complexType" : "std::string",
        "getter" : "getPlmnAssiUeRadioCapId",
        "setter" : "setPlmnAssiUeRadioCapId",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "dataFormat" : "byte",
        "name" : "PlmnAssiUeRadioCapId",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.PlmnAssiUeRadioCapId;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : true,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "plmnAssiUeRadioCapId",
        "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<std::string>"
    }, {
      "openApiType" : "array",
      "baseName" : "typeAllocationCode",
      "complexType" : "std::string",
      "getter" : "getTypeAllocationCode",
      "setter" : "setTypeAllocationCode",
      "dataType" : "std::vector<std::string>",
      "datatypeWithEnum" : "std::vector<std::string>",
      "name" : "TypeAllocationCode",
      "defaultValue" : "std::vector<std::string>()",
      "defaultValueWithParam" : " = data.typeAllocationCode;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/TypeAllocationCode\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "string",
        "baseName" : "TypeAllocationCode",
        "complexType" : "std::string",
        "getter" : "getTypeAllocationCode",
        "setter" : "setTypeAllocationCode",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TypeAllocationCode",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TypeAllocationCode;",
        "baseType" : "std::string",
        "pattern" : "/^[0-9]{8}$/",
        "example" : "null",
        "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : true,
        "isInherited" : false,
        "nameInCamelCase" : "typeAllocationCode",
        "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "string",
        "baseName" : "TypeAllocationCode",
        "complexType" : "std::string",
        "getter" : "getTypeAllocationCode",
        "setter" : "setTypeAllocationCode",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TypeAllocationCode",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TypeAllocationCode;",
        "baseType" : "std::string",
        "pattern" : "/^[0-9]{8}$/",
        "example" : "null",
        "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : true,
        "isInherited" : false,
        "nameInCamelCase" : "typeAllocationCode",
        "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "typeAllocationCode",
      "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<std::string>"
    } ],
    "allVars" : [ {
      "openApiType" : "array",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::vector<std::string>",
      "datatypeWithEnum" : "std::vector<std::string>",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "std::vector<std::string>()",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/PlmnAssiUeRadioCapId\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "string",
        "baseName" : "PlmnAssiUeRadioCapId",
        "complexType" : "std::string",
        "getter" : "getPlmnAssiUeRadioCapId",
        "setter" : "setPlmnAssiUeRadioCapId",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "dataFormat" : "byte",
        "name" : "PlmnAssiUeRadioCapId",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.PlmnAssiUeRadioCapId;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : true,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "plmnAssiUeRadioCapId",
        "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "string",
        "baseName" : "PlmnAssiUeRadioCapId",
        "complexType" : "std::string",
        "getter" : "getPlmnAssiUeRadioCapId",
        "setter" : "setPlmnAssiUeRadioCapId",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "dataFormat" : "byte",
        "name" : "PlmnAssiUeRadioCapId",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.PlmnAssiUeRadioCapId;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : true,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "plmnAssiUeRadioCapId",
        "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<std::string>"
    }, {
      "openApiType" : "array",
      "baseName" : "typeAllocationCode",
      "complexType" : "std::string",
      "getter" : "getTypeAllocationCode",
      "setter" : "setTypeAllocationCode",
      "dataType" : "std::vector<std::string>",
      "datatypeWithEnum" : "std::vector<std::string>",
      "name" : "TypeAllocationCode",
      "defaultValue" : "std::vector<std::string>()",
      "defaultValueWithParam" : " = data.typeAllocationCode;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/TypeAllocationCode\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "string",
        "baseName" : "TypeAllocationCode",
        "complexType" : "std::string",
        "getter" : "getTypeAllocationCode",
        "setter" : "setTypeAllocationCode",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TypeAllocationCode",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TypeAllocationCode;",
        "baseType" : "std::string",
        "pattern" : "/^[0-9]{8}$/",
        "example" : "null",
        "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : true,
        "isInherited" : false,
        "nameInCamelCase" : "typeAllocationCode",
        "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "string",
        "baseName" : "TypeAllocationCode",
        "complexType" : "std::string",
        "getter" : "getTypeAllocationCode",
        "setter" : "setTypeAllocationCode",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TypeAllocationCode",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TypeAllocationCode;",
        "baseType" : "std::string",
        "pattern" : "/^[0-9]{8}$/",
        "example" : "null",
        "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : true,
        "isInherited" : false,
        "nameInCamelCase" : "typeAllocationCode",
        "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "typeAllocationCode",
      "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<std::string>"
    } ],
    "requiredVars" : [ ],
    "optionalVars" : [ {
      "openApiType" : "array",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::vector<std::string>",
      "datatypeWithEnum" : "std::vector<std::string>",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "std::vector<std::string>()",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/PlmnAssiUeRadioCapId\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "string",
        "baseName" : "PlmnAssiUeRadioCapId",
        "complexType" : "std::string",
        "getter" : "getPlmnAssiUeRadioCapId",
        "setter" : "setPlmnAssiUeRadioCapId",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "dataFormat" : "byte",
        "name" : "PlmnAssiUeRadioCapId",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.PlmnAssiUeRadioCapId;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : true,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "plmnAssiUeRadioCapId",
        "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "string",
        "baseName" : "PlmnAssiUeRadioCapId",
        "complexType" : "std::string",
        "getter" : "getPlmnAssiUeRadioCapId",
        "setter" : "setPlmnAssiUeRadioCapId",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "dataFormat" : "byte",
        "name" : "PlmnAssiUeRadioCapId",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.PlmnAssiUeRadioCapId;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : true,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "plmnAssiUeRadioCapId",
        "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<std::string>"
    }, {
      "openApiType" : "array",
      "baseName" : "typeAllocationCode",
      "complexType" : "std::string",
      "getter" : "getTypeAllocationCode",
      "setter" : "setTypeAllocationCode",
      "dataType" : "std::vector<std::string>",
      "datatypeWithEnum" : "std::vector<std::string>",
      "name" : "TypeAllocationCode",
      "defaultValue" : "std::vector<std::string>()",
      "defaultValueWithParam" : " = data.typeAllocationCode;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/TypeAllocationCode\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "string",
        "baseName" : "TypeAllocationCode",
        "complexType" : "std::string",
        "getter" : "getTypeAllocationCode",
        "setter" : "setTypeAllocationCode",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TypeAllocationCode",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TypeAllocationCode;",
        "baseType" : "std::string",
        "pattern" : "/^[0-9]{8}$/",
        "example" : "null",
        "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : true,
        "isInherited" : false,
        "nameInCamelCase" : "typeAllocationCode",
        "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "string",
        "baseName" : "TypeAllocationCode",
        "complexType" : "std::string",
        "getter" : "getTypeAllocationCode",
        "setter" : "setTypeAllocationCode",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TypeAllocationCode",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TypeAllocationCode;",
        "baseType" : "std::string",
        "pattern" : "/^[0-9]{8}$/",
        "example" : "null",
        "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : true,
        "isInherited" : false,
        "nameInCamelCase" : "typeAllocationCode",
        "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "typeAllocationCode",
      "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<std::string>"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "array",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::vector<std::string>",
      "datatypeWithEnum" : "std::vector<std::string>",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "std::vector<std::string>()",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/PlmnAssiUeRadioCapId\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "string",
        "baseName" : "PlmnAssiUeRadioCapId",
        "complexType" : "std::string",
        "getter" : "getPlmnAssiUeRadioCapId",
        "setter" : "setPlmnAssiUeRadioCapId",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "dataFormat" : "byte",
        "name" : "PlmnAssiUeRadioCapId",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.PlmnAssiUeRadioCapId;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : true,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "plmnAssiUeRadioCapId",
        "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "string",
        "baseName" : "PlmnAssiUeRadioCapId",
        "complexType" : "std::string",
        "getter" : "getPlmnAssiUeRadioCapId",
        "setter" : "setPlmnAssiUeRadioCapId",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "dataFormat" : "byte",
        "name" : "PlmnAssiUeRadioCapId",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.PlmnAssiUeRadioCapId;",
        "baseType" : "std::string",
        "example" : "null",
        "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : true,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "plmnAssiUeRadioCapId",
        "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<std::string>"
    }, {
      "openApiType" : "array",
      "baseName" : "typeAllocationCode",
      "complexType" : "std::string",
      "getter" : "getTypeAllocationCode",
      "setter" : "setTypeAllocationCode",
      "dataType" : "std::vector<std::string>",
      "datatypeWithEnum" : "std::vector<std::string>",
      "name" : "TypeAllocationCode",
      "defaultValue" : "std::vector<std::string>()",
      "defaultValueWithParam" : " = data.typeAllocationCode;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/TypeAllocationCode\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "string",
        "baseName" : "TypeAllocationCode",
        "complexType" : "std::string",
        "getter" : "getTypeAllocationCode",
        "setter" : "setTypeAllocationCode",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TypeAllocationCode",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TypeAllocationCode;",
        "baseType" : "std::string",
        "pattern" : "/^[0-9]{8}$/",
        "example" : "null",
        "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : true,
        "isInherited" : false,
        "nameInCamelCase" : "typeAllocationCode",
        "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "string",
        "baseName" : "TypeAllocationCode",
        "complexType" : "std::string",
        "getter" : "getTypeAllocationCode",
        "setter" : "setTypeAllocationCode",
        "dataType" : "std::string",
        "datatypeWithEnum" : "std::string",
        "name" : "TypeAllocationCode",
        "defaultValue" : "\"\"",
        "defaultValueWithParam" : " = data.TypeAllocationCode;",
        "baseType" : "std::string",
        "pattern" : "/^[0-9]{8}$/",
        "example" : "null",
        "jsonSchema" : "{\n  \"pattern\" : \"^[0-9]{8}$\",\n  \"type\" : \"string\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : false,
        "isContainer" : false,
        "isString" : true,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : true,
        "isInherited" : false,
        "nameInCamelCase" : "typeAllocationCode",
        "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "std::string"
      },
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "typeAllocationCode",
      "nameInSnakeCase" : "TYPE_ALLOCATION_CODE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<std::string>"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ ],
    "allMandatory" : [ "PlmnAssiUeRadioCapId" ],
    "imports" : [ "#include <string>", "#include <vector>" ],
    "hasVars" : true,
    "emptyVars" : true,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : false,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : true
  }
}, {
  "importPath" : "#include \"NFType.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "NFType",
    "classname" : "NFType",
    "description" : "NF types known to NRF",
    "classVarName" : "NFType",
    "modelJson" : "{\n  \"type\" : \"string\",\n  \"description\" : \"NF types known to NRF\",\n  \"enum\" : [ \"NRF\", \"UDM\", \"AMF\", \"SMF\", \"AUSF\", \"NEF\", \"PCF\", \"SMSF\", \"NSSF\", \"UDR\", \"LMF\", \"GMLC\", \"5G_EIR\", \"SEPP\", \"UPF\", \"N3IWF\", \"AF\", \"UDSF\", \"BSF\", \"CHF\", \"NWDAF\", \"PCSCF\", \"CBCF\", \"HSS\", \"UCMF\", \"SOR_AF\", \"SPAF\", \"MME\", \"SCSAS\", \"SCEF\", \"SCP\", \"NSSAAF\", \"ICSCF\", \"SCSCF\", \"DRA\" ]\n}",
    "dataType" : "std::string",
    "classFilename" : "NFType",
    "unescapedDescription" : "NF types known to NRF",
    "isAlias" : false,
    "isString" : true,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ ],
    "allVars" : [ ],
    "requiredVars" : [ ],
    "optionalVars" : [ ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ ],
    "parentVars" : [ ],
    "allowableValues" : {
      "values" : [ "NRF", "UDM", "AMF", "SMF", "AUSF", "NEF", "PCF", "SMSF", "NSSF", "UDR", "LMF", "GMLC", "5G_EIR", "SEPP", "UPF", "N3IWF", "AF", "UDSF", "BSF", "CHF", "NWDAF", "PCSCF", "CBCF", "HSS", "UCMF", "SOR_AF", "SPAF", "MME", "SCSAS", "SCEF", "SCP", "NSSAAF", "ICSCF", "SCSCF", "DRA" ],
      "enumVars" : [ {
        "name" : "NRF",
        "isString" : false,
        "value" : "NRF"
      }, {
        "name" : "UDM",
        "isString" : false,
        "value" : "UDM"
      }, {
        "name" : "AMF",
        "isString" : false,
        "value" : "AMF"
      }, {
        "name" : "SMF",
        "isString" : false,
        "value" : "SMF"
      }, {
        "name" : "AUSF",
        "isString" : false,
        "value" : "AUSF"
      }, {
        "name" : "NEF",
        "isString" : false,
        "value" : "NEF"
      }, {
        "name" : "PCF",
        "isString" : false,
        "value" : "PCF"
      }, {
        "name" : "SMSF",
        "isString" : false,
        "value" : "SMSF"
      }, {
        "name" : "NSSF",
        "isString" : false,
        "value" : "NSSF"
      }, {
        "name" : "UDR",
        "isString" : false,
        "value" : "UDR"
      }, {
        "name" : "LMF",
        "isString" : false,
        "value" : "LMF"
      }, {
        "name" : "GMLC",
        "isString" : false,
        "value" : "GMLC"
      }, {
        "name" : "_5G_EIR",
        "isString" : false,
        "value" : "5G_EIR"
      }, {
        "name" : "SEPP",
        "isString" : false,
        "value" : "SEPP"
      }, {
        "name" : "UPF",
        "isString" : false,
        "value" : "UPF"
      }, {
        "name" : "N3IWF",
        "isString" : false,
        "value" : "N3IWF"
      }, {
        "name" : "AF",
        "isString" : false,
        "value" : "AF"
      }, {
        "name" : "UDSF",
        "isString" : false,
        "value" : "UDSF"
      }, {
        "name" : "BSF",
        "isString" : false,
        "value" : "BSF"
      }, {
        "name" : "CHF",
        "isString" : false,
        "value" : "CHF"
      }, {
        "name" : "NWDAF",
        "isString" : false,
        "value" : "NWDAF"
      }, {
        "name" : "PCSCF",
        "isString" : false,
        "value" : "PCSCF"
      }, {
        "name" : "CBCF",
        "isString" : false,
        "value" : "CBCF"
      }, {
        "name" : "HSS",
        "isString" : false,
        "value" : "HSS"
      }, {
        "name" : "UCMF",
        "isString" : false,
        "value" : "UCMF"
      }, {
        "name" : "SOR_AF",
        "isString" : false,
        "value" : "SOR_AF"
      }, {
        "name" : "SPAF",
        "isString" : false,
        "value" : "SPAF"
      }, {
        "name" : "MME",
        "isString" : false,
        "value" : "MME"
      }, {
        "name" : "SCSAS",
        "isString" : false,
        "value" : "SCSAS"
      }, {
        "name" : "SCEF",
        "isString" : false,
        "value" : "SCEF"
      }, {
        "name" : "SCP",
        "isString" : false,
        "value" : "SCP"
      }, {
        "name" : "NSSAAF",
        "isString" : false,
        "value" : "NSSAAF"
      }, {
        "name" : "ICSCF",
        "isString" : false,
        "value" : "ICSCF"
      }, {
        "name" : "SCSCF",
        "isString" : false,
        "value" : "SCSCF"
      }, {
        "name" : "DRA",
        "isString" : false,
        "value" : "DRA"
      } ]
    },
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ ],
    "hasVars" : false,
    "emptyVars" : true,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : true,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : false,
    "hasOptional" : false,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : true,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"PlmnId.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "PlmnId",
    "classname" : "PlmnId",
    "classVarName" : "PlmnId",
    "modelJson" : "{\n  \"required\" : [ \"mcc\", \"mnc\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"mcc\" : {\n      \"$ref\" : \"#/components/schemas/Mcc\"\n    },\n    \"mnc\" : {\n      \"$ref\" : \"#/components/schemas/Mnc\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "PlmnId",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "string",
      "baseName" : "mcc",
      "complexType" : "std::string",
      "getter" : "getMcc",
      "setter" : "setMcc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mcc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mcc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mcc",
      "nameInSnakeCase" : "MCC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "mnc",
      "complexType" : "std::string",
      "getter" : "getMnc",
      "setter" : "setMnc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mnc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mnc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{2,3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{2,3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mnc",
      "nameInSnakeCase" : "MNC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "string",
      "baseName" : "mcc",
      "complexType" : "std::string",
      "getter" : "getMcc",
      "setter" : "setMcc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mcc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mcc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mcc",
      "nameInSnakeCase" : "MCC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "mnc",
      "complexType" : "std::string",
      "getter" : "getMnc",
      "setter" : "setMnc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mnc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mnc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{2,3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{2,3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mnc",
      "nameInSnakeCase" : "MNC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ {
      "openApiType" : "string",
      "baseName" : "mcc",
      "complexType" : "std::string",
      "getter" : "getMcc",
      "setter" : "setMcc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mcc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mcc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mcc",
      "nameInSnakeCase" : "MCC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "mnc",
      "complexType" : "std::string",
      "getter" : "getMnc",
      "setter" : "setMnc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mnc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mnc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{2,3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{2,3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mnc",
      "nameInSnakeCase" : "MNC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "optionalVars" : [ ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "string",
      "baseName" : "mcc",
      "complexType" : "std::string",
      "getter" : "getMcc",
      "setter" : "setMcc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mcc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mcc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mcc",
      "nameInSnakeCase" : "MCC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "mnc",
      "complexType" : "std::string",
      "getter" : "getMnc",
      "setter" : "setMnc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mnc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mnc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{2,3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{2,3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mnc",
      "nameInSnakeCase" : "MNC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "Mcc", "Mnc" ],
    "allMandatory" : [ "Mcc", "Mnc" ],
    "imports" : [ "#include <string>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : true,
    "hasOptional" : false,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"PlmnIdNid.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "PlmnIdNid",
    "classname" : "PlmnIdNid",
    "classVarName" : "PlmnIdNid",
    "modelJson" : "{\n  \"required\" : [ \"mcc\", \"mnc\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"mcc\" : {\n      \"$ref\" : \"#/components/schemas/Mcc\"\n    },\n    \"mnc\" : {\n      \"$ref\" : \"#/components/schemas/Mnc\"\n    },\n    \"nid\" : {\n      \"$ref\" : \"#/components/schemas/Nid\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "PlmnIdNid",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "string",
      "baseName" : "mcc",
      "complexType" : "std::string",
      "getter" : "getMcc",
      "setter" : "setMcc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mcc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mcc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mcc",
      "nameInSnakeCase" : "MCC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "mnc",
      "complexType" : "std::string",
      "getter" : "getMnc",
      "setter" : "setMnc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mnc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mnc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{2,3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{2,3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mnc",
      "nameInSnakeCase" : "MNC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "nid",
      "complexType" : "std::string",
      "getter" : "getNid",
      "setter" : "setNid",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Nid",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nid;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]{11}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]{11}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "nid",
      "nameInSnakeCase" : "NID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "string",
      "baseName" : "mcc",
      "complexType" : "std::string",
      "getter" : "getMcc",
      "setter" : "setMcc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mcc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mcc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mcc",
      "nameInSnakeCase" : "MCC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "mnc",
      "complexType" : "std::string",
      "getter" : "getMnc",
      "setter" : "setMnc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mnc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mnc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{2,3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{2,3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mnc",
      "nameInSnakeCase" : "MNC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "nid",
      "complexType" : "std::string",
      "getter" : "getNid",
      "setter" : "setNid",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Nid",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nid;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]{11}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]{11}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "nid",
      "nameInSnakeCase" : "NID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ {
      "openApiType" : "string",
      "baseName" : "mcc",
      "complexType" : "std::string",
      "getter" : "getMcc",
      "setter" : "setMcc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mcc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mcc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mcc",
      "nameInSnakeCase" : "MCC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "mnc",
      "complexType" : "std::string",
      "getter" : "getMnc",
      "setter" : "setMnc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mnc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mnc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{2,3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{2,3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mnc",
      "nameInSnakeCase" : "MNC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "optionalVars" : [ {
      "openApiType" : "string",
      "baseName" : "nid",
      "complexType" : "std::string",
      "getter" : "getNid",
      "setter" : "setNid",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Nid",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nid;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]{11}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]{11}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "nid",
      "nameInSnakeCase" : "NID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "string",
      "baseName" : "mcc",
      "complexType" : "std::string",
      "getter" : "getMcc",
      "setter" : "setMcc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mcc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mcc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mcc",
      "nameInSnakeCase" : "MCC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "mnc",
      "complexType" : "std::string",
      "getter" : "getMnc",
      "setter" : "setMnc",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Mnc",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.mnc;",
      "baseType" : "std::string",
      "pattern" : "/^\\\\d{2,3}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^\\\\d{2,3}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "mnc",
      "nameInSnakeCase" : "MNC",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "nid",
      "complexType" : "std::string",
      "getter" : "getNid",
      "setter" : "setNid",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Nid",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nid;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]{11}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]{11}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "nid",
      "nameInSnakeCase" : "NID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "Mcc", "Mnc" ],
    "allMandatory" : [ "Mcc", "Mnc" ],
    "imports" : [ "#include <string>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : true,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"ProblemDetails.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "ProblemDetails",
    "classname" : "ProblemDetails",
    "classVarName" : "ProblemDetails",
    "modelJson" : "{\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"type\" : {\n      \"$ref\" : \"#/components/schemas/Uri\"\n    },\n    \"title\" : {\n      \"type\" : \"string\"\n    },\n    \"status\" : {\n      \"type\" : \"integer\"\n    },\n    \"detail\" : {\n      \"type\" : \"string\"\n    },\n    \"instance\" : {\n      \"$ref\" : \"#/components/schemas/Uri\"\n    },\n    \"cause\" : {\n      \"type\" : \"string\"\n    },\n    \"invalidParams\" : {\n      \"minItems\" : 1,\n      \"type\" : \"array\",\n      \"items\" : {\n        \"$ref\" : \"#/components/schemas/InvalidParam\"\n      }\n    },\n    \"supportedFeatures\" : {\n      \"$ref\" : \"#/components/schemas/SupportedFeatures\"\n    },\n    \"targetScp\" : {\n      \"$ref\" : \"#/components/schemas/Uri\"\n    },\n    \"accessTokenError\" : {\n      \"$ref\" : \"#/components/schemas/AccessTokenErr\"\n    },\n    \"accessTokenRequest\" : {\n      \"$ref\" : \"#/components/schemas/AccessTokenReq\"\n    },\n    \"nrfId\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "ProblemDetails",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "string",
      "baseName" : "type",
      "complexType" : "std::string",
      "getter" : "getType",
      "setter" : "setType",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Type",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.type;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "type",
      "nameInSnakeCase" : "TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "title",
      "complexType" : "std::string",
      "getter" : "getTitle",
      "setter" : "setTitle",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Title",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.title;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "title",
      "nameInSnakeCase" : "TITLE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "integer",
      "baseName" : "status",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "Status",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"integer\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "status",
      "nameInSnakeCase" : "STATUS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "detail",
      "complexType" : "std::string",
      "getter" : "getDetail",
      "setter" : "setDetail",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Detail",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.detail;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "detail",
      "nameInSnakeCase" : "DETAIL",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "instance",
      "complexType" : "std::string",
      "getter" : "getInstance",
      "setter" : "setInstance",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Instance",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.instance;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "instance",
      "nameInSnakeCase" : "INSTANCE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "cause",
      "complexType" : "std::string",
      "getter" : "getCause",
      "setter" : "setCause",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Cause",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.cause;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "cause",
      "nameInSnakeCase" : "CAUSE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "array",
      "baseName" : "invalidParams",
      "complexType" : "InvalidParam",
      "getter" : "getInvalidParams",
      "setter" : "setInvalidParams",
      "dataType" : "std::vector<InvalidParam>",
      "datatypeWithEnum" : "std::vector<InvalidParam>",
      "name" : "InvalidParams",
      "defaultValue" : "std::vector<InvalidParam>()",
      "defaultValueWithParam" : " = data.invalidParams;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/InvalidParam\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "InvalidParam",
        "baseName" : "InvalidParams",
        "complexType" : "InvalidParam",
        "getter" : "getInvalidParams",
        "setter" : "setInvalidParams",
        "dataType" : "InvalidParam",
        "datatypeWithEnum" : "InvalidParam",
        "name" : "InvalidParams",
        "defaultValue" : "InvalidParam()",
        "defaultValueWithParam" : " = data.InvalidParams;",
        "baseType" : "InvalidParam",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/InvalidParam\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "invalidParams",
        "nameInSnakeCase" : "INVALID_PARAMS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "InvalidParam"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "InvalidParam",
        "baseName" : "InvalidParams",
        "complexType" : "InvalidParam",
        "getter" : "getInvalidParams",
        "setter" : "setInvalidParams",
        "dataType" : "InvalidParam",
        "datatypeWithEnum" : "InvalidParam",
        "name" : "InvalidParams",
        "defaultValue" : "InvalidParam()",
        "defaultValueWithParam" : " = data.InvalidParams;",
        "baseType" : "InvalidParam",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/InvalidParam\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "invalidParams",
        "nameInSnakeCase" : "INVALID_PARAMS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "InvalidParam"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "invalidParams",
      "nameInSnakeCase" : "INVALID_PARAMS",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<InvalidParam>"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "targetScp",
      "complexType" : "std::string",
      "getter" : "getTargetScp",
      "setter" : "setTargetScp",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TargetScp",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetScp;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetScp",
      "nameInSnakeCase" : "TARGET_SCP",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "AccessTokenErr",
      "baseName" : "accessTokenError",
      "complexType" : "AccessTokenErr",
      "getter" : "getAccessTokenError",
      "setter" : "setAccessTokenError",
      "dataType" : "AccessTokenErr",
      "datatypeWithEnum" : "AccessTokenErr",
      "name" : "AccessTokenError",
      "defaultValue" : "AccessTokenErr()",
      "defaultValueWithParam" : " = data.accessTokenError;",
      "baseType" : "AccessTokenErr",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/AccessTokenErr\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "accessTokenError",
      "nameInSnakeCase" : "ACCESS_TOKEN_ERROR",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "AccessTokenErr"
    }, {
      "openApiType" : "AccessTokenReq",
      "baseName" : "accessTokenRequest",
      "complexType" : "AccessTokenReq",
      "getter" : "getAccessTokenRequest",
      "setter" : "setAccessTokenRequest",
      "dataType" : "AccessTokenReq",
      "datatypeWithEnum" : "AccessTokenReq",
      "name" : "AccessTokenRequest",
      "defaultValue" : "AccessTokenReq()",
      "defaultValueWithParam" : " = data.accessTokenRequest;",
      "baseType" : "AccessTokenReq",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/AccessTokenReq\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "accessTokenRequest",
      "nameInSnakeCase" : "ACCESS_TOKEN_REQUEST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "AccessTokenReq"
    }, {
      "openApiType" : "string",
      "baseName" : "nrfId",
      "complexType" : "std::string",
      "getter" : "getNrfId",
      "setter" : "setNrfId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "NrfId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nrfId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nrfId",
      "nameInSnakeCase" : "NRF_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "string",
      "baseName" : "type",
      "complexType" : "std::string",
      "getter" : "getType",
      "setter" : "setType",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Type",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.type;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "type",
      "nameInSnakeCase" : "TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "title",
      "complexType" : "std::string",
      "getter" : "getTitle",
      "setter" : "setTitle",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Title",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.title;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "title",
      "nameInSnakeCase" : "TITLE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "integer",
      "baseName" : "status",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "Status",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"integer\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "status",
      "nameInSnakeCase" : "STATUS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "detail",
      "complexType" : "std::string",
      "getter" : "getDetail",
      "setter" : "setDetail",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Detail",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.detail;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "detail",
      "nameInSnakeCase" : "DETAIL",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "instance",
      "complexType" : "std::string",
      "getter" : "getInstance",
      "setter" : "setInstance",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Instance",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.instance;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "instance",
      "nameInSnakeCase" : "INSTANCE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "cause",
      "complexType" : "std::string",
      "getter" : "getCause",
      "setter" : "setCause",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Cause",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.cause;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "cause",
      "nameInSnakeCase" : "CAUSE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "array",
      "baseName" : "invalidParams",
      "complexType" : "InvalidParam",
      "getter" : "getInvalidParams",
      "setter" : "setInvalidParams",
      "dataType" : "std::vector<InvalidParam>",
      "datatypeWithEnum" : "std::vector<InvalidParam>",
      "name" : "InvalidParams",
      "defaultValue" : "std::vector<InvalidParam>()",
      "defaultValueWithParam" : " = data.invalidParams;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/InvalidParam\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "InvalidParam",
        "baseName" : "InvalidParams",
        "complexType" : "InvalidParam",
        "getter" : "getInvalidParams",
        "setter" : "setInvalidParams",
        "dataType" : "InvalidParam",
        "datatypeWithEnum" : "InvalidParam",
        "name" : "InvalidParams",
        "defaultValue" : "InvalidParam()",
        "defaultValueWithParam" : " = data.InvalidParams;",
        "baseType" : "InvalidParam",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/InvalidParam\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "invalidParams",
        "nameInSnakeCase" : "INVALID_PARAMS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "InvalidParam"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "InvalidParam",
        "baseName" : "InvalidParams",
        "complexType" : "InvalidParam",
        "getter" : "getInvalidParams",
        "setter" : "setInvalidParams",
        "dataType" : "InvalidParam",
        "datatypeWithEnum" : "InvalidParam",
        "name" : "InvalidParams",
        "defaultValue" : "InvalidParam()",
        "defaultValueWithParam" : " = data.InvalidParams;",
        "baseType" : "InvalidParam",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/InvalidParam\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "invalidParams",
        "nameInSnakeCase" : "INVALID_PARAMS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "InvalidParam"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "invalidParams",
      "nameInSnakeCase" : "INVALID_PARAMS",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<InvalidParam>"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "targetScp",
      "complexType" : "std::string",
      "getter" : "getTargetScp",
      "setter" : "setTargetScp",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TargetScp",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetScp;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetScp",
      "nameInSnakeCase" : "TARGET_SCP",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "AccessTokenErr",
      "baseName" : "accessTokenError",
      "complexType" : "AccessTokenErr",
      "getter" : "getAccessTokenError",
      "setter" : "setAccessTokenError",
      "dataType" : "AccessTokenErr",
      "datatypeWithEnum" : "AccessTokenErr",
      "name" : "AccessTokenError",
      "defaultValue" : "AccessTokenErr()",
      "defaultValueWithParam" : " = data.accessTokenError;",
      "baseType" : "AccessTokenErr",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/AccessTokenErr\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "accessTokenError",
      "nameInSnakeCase" : "ACCESS_TOKEN_ERROR",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "AccessTokenErr"
    }, {
      "openApiType" : "AccessTokenReq",
      "baseName" : "accessTokenRequest",
      "complexType" : "AccessTokenReq",
      "getter" : "getAccessTokenRequest",
      "setter" : "setAccessTokenRequest",
      "dataType" : "AccessTokenReq",
      "datatypeWithEnum" : "AccessTokenReq",
      "name" : "AccessTokenRequest",
      "defaultValue" : "AccessTokenReq()",
      "defaultValueWithParam" : " = data.accessTokenRequest;",
      "baseType" : "AccessTokenReq",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/AccessTokenReq\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "accessTokenRequest",
      "nameInSnakeCase" : "ACCESS_TOKEN_REQUEST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "AccessTokenReq"
    }, {
      "openApiType" : "string",
      "baseName" : "nrfId",
      "complexType" : "std::string",
      "getter" : "getNrfId",
      "setter" : "setNrfId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "NrfId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nrfId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nrfId",
      "nameInSnakeCase" : "NRF_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ ],
    "optionalVars" : [ {
      "openApiType" : "string",
      "baseName" : "type",
      "complexType" : "std::string",
      "getter" : "getType",
      "setter" : "setType",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Type",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.type;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "type",
      "nameInSnakeCase" : "TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "title",
      "complexType" : "std::string",
      "getter" : "getTitle",
      "setter" : "setTitle",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Title",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.title;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "title",
      "nameInSnakeCase" : "TITLE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "integer",
      "baseName" : "status",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "Status",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"integer\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "status",
      "nameInSnakeCase" : "STATUS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "detail",
      "complexType" : "std::string",
      "getter" : "getDetail",
      "setter" : "setDetail",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Detail",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.detail;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "detail",
      "nameInSnakeCase" : "DETAIL",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "instance",
      "complexType" : "std::string",
      "getter" : "getInstance",
      "setter" : "setInstance",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Instance",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.instance;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "instance",
      "nameInSnakeCase" : "INSTANCE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "cause",
      "complexType" : "std::string",
      "getter" : "getCause",
      "setter" : "setCause",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Cause",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.cause;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "cause",
      "nameInSnakeCase" : "CAUSE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "array",
      "baseName" : "invalidParams",
      "complexType" : "InvalidParam",
      "getter" : "getInvalidParams",
      "setter" : "setInvalidParams",
      "dataType" : "std::vector<InvalidParam>",
      "datatypeWithEnum" : "std::vector<InvalidParam>",
      "name" : "InvalidParams",
      "defaultValue" : "std::vector<InvalidParam>()",
      "defaultValueWithParam" : " = data.invalidParams;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/InvalidParam\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "InvalidParam",
        "baseName" : "InvalidParams",
        "complexType" : "InvalidParam",
        "getter" : "getInvalidParams",
        "setter" : "setInvalidParams",
        "dataType" : "InvalidParam",
        "datatypeWithEnum" : "InvalidParam",
        "name" : "InvalidParams",
        "defaultValue" : "InvalidParam()",
        "defaultValueWithParam" : " = data.InvalidParams;",
        "baseType" : "InvalidParam",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/InvalidParam\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "invalidParams",
        "nameInSnakeCase" : "INVALID_PARAMS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "InvalidParam"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "InvalidParam",
        "baseName" : "InvalidParams",
        "complexType" : "InvalidParam",
        "getter" : "getInvalidParams",
        "setter" : "setInvalidParams",
        "dataType" : "InvalidParam",
        "datatypeWithEnum" : "InvalidParam",
        "name" : "InvalidParams",
        "defaultValue" : "InvalidParam()",
        "defaultValueWithParam" : " = data.InvalidParams;",
        "baseType" : "InvalidParam",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/InvalidParam\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "invalidParams",
        "nameInSnakeCase" : "INVALID_PARAMS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "InvalidParam"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "invalidParams",
      "nameInSnakeCase" : "INVALID_PARAMS",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<InvalidParam>"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "targetScp",
      "complexType" : "std::string",
      "getter" : "getTargetScp",
      "setter" : "setTargetScp",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TargetScp",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetScp;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetScp",
      "nameInSnakeCase" : "TARGET_SCP",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "AccessTokenErr",
      "baseName" : "accessTokenError",
      "complexType" : "AccessTokenErr",
      "getter" : "getAccessTokenError",
      "setter" : "setAccessTokenError",
      "dataType" : "AccessTokenErr",
      "datatypeWithEnum" : "AccessTokenErr",
      "name" : "AccessTokenError",
      "defaultValue" : "AccessTokenErr()",
      "defaultValueWithParam" : " = data.accessTokenError;",
      "baseType" : "AccessTokenErr",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/AccessTokenErr\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "accessTokenError",
      "nameInSnakeCase" : "ACCESS_TOKEN_ERROR",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "AccessTokenErr"
    }, {
      "openApiType" : "AccessTokenReq",
      "baseName" : "accessTokenRequest",
      "complexType" : "AccessTokenReq",
      "getter" : "getAccessTokenRequest",
      "setter" : "setAccessTokenRequest",
      "dataType" : "AccessTokenReq",
      "datatypeWithEnum" : "AccessTokenReq",
      "name" : "AccessTokenRequest",
      "defaultValue" : "AccessTokenReq()",
      "defaultValueWithParam" : " = data.accessTokenRequest;",
      "baseType" : "AccessTokenReq",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/AccessTokenReq\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "accessTokenRequest",
      "nameInSnakeCase" : "ACCESS_TOKEN_REQUEST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "AccessTokenReq"
    }, {
      "openApiType" : "string",
      "baseName" : "nrfId",
      "complexType" : "std::string",
      "getter" : "getNrfId",
      "setter" : "setNrfId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "NrfId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nrfId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nrfId",
      "nameInSnakeCase" : "NRF_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "string",
      "baseName" : "type",
      "complexType" : "std::string",
      "getter" : "getType",
      "setter" : "setType",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Type",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.type;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "type",
      "nameInSnakeCase" : "TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "title",
      "complexType" : "std::string",
      "getter" : "getTitle",
      "setter" : "setTitle",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Title",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.title;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "title",
      "nameInSnakeCase" : "TITLE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "integer",
      "baseName" : "status",
      "getter" : "getStatus",
      "setter" : "setStatus",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "Status",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.status;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"integer\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "status",
      "nameInSnakeCase" : "STATUS",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "detail",
      "complexType" : "std::string",
      "getter" : "getDetail",
      "setter" : "setDetail",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Detail",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.detail;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "detail",
      "nameInSnakeCase" : "DETAIL",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "instance",
      "complexType" : "std::string",
      "getter" : "getInstance",
      "setter" : "setInstance",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Instance",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.instance;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "instance",
      "nameInSnakeCase" : "INSTANCE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "cause",
      "complexType" : "std::string",
      "getter" : "getCause",
      "setter" : "setCause",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Cause",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.cause;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "cause",
      "nameInSnakeCase" : "CAUSE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "array",
      "baseName" : "invalidParams",
      "complexType" : "InvalidParam",
      "getter" : "getInvalidParams",
      "setter" : "setInvalidParams",
      "dataType" : "std::vector<InvalidParam>",
      "datatypeWithEnum" : "std::vector<InvalidParam>",
      "name" : "InvalidParams",
      "defaultValue" : "std::vector<InvalidParam>()",
      "defaultValueWithParam" : " = data.invalidParams;",
      "baseType" : "std::vector",
      "containerType" : "array",
      "example" : "null",
      "jsonSchema" : "{\n  \"minItems\" : 1,\n  \"type\" : \"array\",\n  \"items\" : {\n    \"$ref\" : \"#/components/schemas/InvalidParam\"\n  }\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : true,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : true,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "items" : {
        "openApiType" : "InvalidParam",
        "baseName" : "InvalidParams",
        "complexType" : "InvalidParam",
        "getter" : "getInvalidParams",
        "setter" : "setInvalidParams",
        "dataType" : "InvalidParam",
        "datatypeWithEnum" : "InvalidParam",
        "name" : "InvalidParams",
        "defaultValue" : "InvalidParam()",
        "defaultValueWithParam" : " = data.InvalidParams;",
        "baseType" : "InvalidParam",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/InvalidParam\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "invalidParams",
        "nameInSnakeCase" : "INVALID_PARAMS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "InvalidParam"
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "mostInnerItems" : {
        "openApiType" : "InvalidParam",
        "baseName" : "InvalidParams",
        "complexType" : "InvalidParam",
        "getter" : "getInvalidParams",
        "setter" : "setInvalidParams",
        "dataType" : "InvalidParam",
        "datatypeWithEnum" : "InvalidParam",
        "name" : "InvalidParams",
        "defaultValue" : "InvalidParam()",
        "defaultValueWithParam" : " = data.InvalidParams;",
        "baseType" : "InvalidParam",
        "example" : "null",
        "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/InvalidParam\"\n}",
        "exclusiveMinimum" : false,
        "exclusiveMaximum" : false,
        "required" : false,
        "deprecated" : false,
        "hasMoreNonReadOnly" : false,
        "isPrimitiveType" : false,
        "isModel" : true,
        "isContainer" : false,
        "isString" : false,
        "isNumeric" : false,
        "isInteger" : false,
        "isLong" : false,
        "isNumber" : false,
        "isFloat" : false,
        "isDouble" : false,
        "isDecimal" : false,
        "isByteArray" : false,
        "isBinary" : false,
        "isFile" : false,
        "isBoolean" : false,
        "isDate" : false,
        "isDateTime" : false,
        "isUuid" : false,
        "isUri" : false,
        "isEmail" : false,
        "isNull" : false,
        "isFreeFormObject" : false,
        "isAnyType" : false,
        "isArray" : false,
        "isMap" : false,
        "isEnum" : false,
        "isReadOnly" : false,
        "isWriteOnly" : false,
        "isNullable" : false,
        "isSelfReference" : false,
        "isCircularReference" : false,
        "isDiscriminator" : false,
        "vars" : [ ],
        "requiredVars" : [ ],
        "vendorExtensions" : { },
        "hasValidation" : false,
        "isInherited" : false,
        "nameInCamelCase" : "invalidParams",
        "nameInSnakeCase" : "INVALID_PARAMS",
        "uniqueItems" : false,
        "isXmlAttribute" : false,
        "isXmlWrapped" : false,
        "additionalPropertiesIsAnyType" : false,
        "hasVars" : false,
        "hasRequired" : false,
        "iexclusiveMaximum" : false,
        "datatype" : "InvalidParam"
      },
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "invalidParams",
      "nameInSnakeCase" : "INVALID_PARAMS",
      "minItems" : 1,
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::vector<InvalidParam>"
    }, {
      "openApiType" : "string",
      "baseName" : "supportedFeatures",
      "complexType" : "std::string",
      "getter" : "getSupportedFeatures",
      "setter" : "setSupportedFeatures",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "SupportedFeatures",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.supportedFeatures;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]*$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]*$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "supportedFeatures",
      "nameInSnakeCase" : "SUPPORTED_FEATURES",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "targetScp",
      "complexType" : "std::string",
      "getter" : "getTargetScp",
      "setter" : "setTargetScp",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "TargetScp",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.targetScp;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "targetScp",
      "nameInSnakeCase" : "TARGET_SCP",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "AccessTokenErr",
      "baseName" : "accessTokenError",
      "complexType" : "AccessTokenErr",
      "getter" : "getAccessTokenError",
      "setter" : "setAccessTokenError",
      "dataType" : "AccessTokenErr",
      "datatypeWithEnum" : "AccessTokenErr",
      "name" : "AccessTokenError",
      "defaultValue" : "AccessTokenErr()",
      "defaultValueWithParam" : " = data.accessTokenError;",
      "baseType" : "AccessTokenErr",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/AccessTokenErr\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "accessTokenError",
      "nameInSnakeCase" : "ACCESS_TOKEN_ERROR",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "AccessTokenErr"
    }, {
      "openApiType" : "AccessTokenReq",
      "baseName" : "accessTokenRequest",
      "complexType" : "AccessTokenReq",
      "getter" : "getAccessTokenRequest",
      "setter" : "setAccessTokenRequest",
      "dataType" : "AccessTokenReq",
      "datatypeWithEnum" : "AccessTokenReq",
      "name" : "AccessTokenRequest",
      "defaultValue" : "AccessTokenReq()",
      "defaultValueWithParam" : " = data.accessTokenRequest;",
      "baseType" : "AccessTokenReq",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/AccessTokenReq\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "accessTokenRequest",
      "nameInSnakeCase" : "ACCESS_TOKEN_REQUEST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "AccessTokenReq"
    }, {
      "openApiType" : "string",
      "baseName" : "nrfId",
      "complexType" : "std::string",
      "getter" : "getNrfId",
      "setter" : "setNrfId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "NrfId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.nrfId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "nrfId",
      "nameInSnakeCase" : "NRF_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ "#include <string>", "#include \"InvalidParam.h\"", "#include \"AccessTokenErr.h\"", "#include \"AccessTokenReq.h\"", "#include <vector>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : false,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"RacFormat.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "RacFormat",
    "classname" : "RacFormat",
    "classVarName" : "RacFormat",
    "modelJson" : "{\n  \"type\" : \"string\",\n  \"enum\" : [ \"5GS\", \"EPS\" ]\n}",
    "dataType" : "std::string",
    "classFilename" : "RacFormat",
    "isAlias" : false,
    "isString" : true,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ ],
    "allVars" : [ ],
    "requiredVars" : [ ],
    "optionalVars" : [ ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ ],
    "parentVars" : [ ],
    "allowableValues" : {
      "values" : [ "5GS", "EPS" ],
      "enumVars" : [ {
        "name" : "_5GS",
        "isString" : false,
        "value" : "5GS"
      }, {
        "name" : "EPS",
        "isString" : false,
        "value" : "EPS"
      } ]
    },
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ ],
    "hasVars" : false,
    "emptyVars" : true,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : true,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : false,
    "hasOptional" : false,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : true,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"RefToBinaryData.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "RefToBinaryData",
    "classname" : "RefToBinaryData",
    "classVarName" : "RefToBinaryData",
    "modelJson" : "{\n  \"required\" : [ \"contentId\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"contentId\" : {\n      \"type\" : \"string\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "RefToBinaryData",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "string",
      "baseName" : "contentId",
      "complexType" : "std::string",
      "getter" : "getContentId",
      "setter" : "setContentId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "ContentId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.contentId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "contentId",
      "nameInSnakeCase" : "CONTENT_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "string",
      "baseName" : "contentId",
      "complexType" : "std::string",
      "getter" : "getContentId",
      "setter" : "setContentId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "ContentId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.contentId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "contentId",
      "nameInSnakeCase" : "CONTENT_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ {
      "openApiType" : "string",
      "baseName" : "contentId",
      "complexType" : "std::string",
      "getter" : "getContentId",
      "setter" : "setContentId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "ContentId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.contentId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "contentId",
      "nameInSnakeCase" : "CONTENT_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "optionalVars" : [ ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "string",
      "baseName" : "contentId",
      "complexType" : "std::string",
      "getter" : "getContentId",
      "setter" : "setContentId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "ContentId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.contentId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "contentId",
      "nameInSnakeCase" : "CONTENT_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "ContentId" ],
    "allMandatory" : [ "ContentId" ],
    "imports" : [ "#include <string>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : true,
    "hasOptional" : false,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"Snssai.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "Snssai",
    "classname" : "Snssai",
    "classVarName" : "Snssai",
    "modelJson" : "{\n  \"required\" : [ \"sst\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"sst\" : {\n      \"maximum\" : 255,\n      \"minimum\" : 0,\n      \"type\" : \"integer\"\n    },\n    \"sd\" : {\n      \"pattern\" : \"^[A-Fa-f0-9]{6}$\",\n      \"type\" : \"string\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "Snssai",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "integer",
      "baseName" : "sst",
      "getter" : "getSst",
      "setter" : "setSst",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "Sst",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.sst;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 255,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "255",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "sst",
      "nameInSnakeCase" : "SST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "sd",
      "complexType" : "std::string",
      "getter" : "getSd",
      "setter" : "setSd",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Sd",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.sd;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]{6}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]{6}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "sd",
      "nameInSnakeCase" : "SD",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "integer",
      "baseName" : "sst",
      "getter" : "getSst",
      "setter" : "setSst",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "Sst",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.sst;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 255,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "255",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "sst",
      "nameInSnakeCase" : "SST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "sd",
      "complexType" : "std::string",
      "getter" : "getSd",
      "setter" : "setSd",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Sd",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.sd;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]{6}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]{6}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "sd",
      "nameInSnakeCase" : "SD",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ {
      "openApiType" : "integer",
      "baseName" : "sst",
      "getter" : "getSst",
      "setter" : "setSst",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "Sst",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.sst;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 255,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "255",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "sst",
      "nameInSnakeCase" : "SST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    } ],
    "optionalVars" : [ {
      "openApiType" : "string",
      "baseName" : "sd",
      "complexType" : "std::string",
      "getter" : "getSd",
      "setter" : "setSd",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Sd",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.sd;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]{6}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]{6}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "sd",
      "nameInSnakeCase" : "SD",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "integer",
      "baseName" : "sst",
      "getter" : "getSst",
      "setter" : "setSst",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "Sst",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.sst;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 255,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "255",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "sst",
      "nameInSnakeCase" : "SST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "string",
      "baseName" : "sd",
      "complexType" : "std::string",
      "getter" : "getSd",
      "setter" : "setSd",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "name" : "Sd",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.sd;",
      "baseType" : "std::string",
      "pattern" : "/^[A-Fa-f0-9]{6}$/",
      "example" : "null",
      "jsonSchema" : "{\n  \"pattern\" : \"^[A-Fa-f0-9]{6}$\",\n  \"type\" : \"string\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : true,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "sd",
      "nameInSnakeCase" : "SD",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "Sst" ],
    "allMandatory" : [ "Sst" ],
    "imports" : [ "#include <string>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : true,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"UcmfNotification.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "UcmfNotification",
    "classname" : "UcmfNotification",
    "classVarName" : "UcmfNotification",
    "modelJson" : "{\n  \"required\" : [ \"dicEntryId\", \"eventType\" ],\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"dicEntryId\" : {\n      \"$ref\" : \"#/components/schemas/DicEntryId\"\n    },\n    \"eventType\" : {\n      \"$ref\" : \"#/components/schemas/EventType\"\n    },\n    \"manAssOpRequestlist\" : {\n      \"$ref\" : \"#/components/schemas/manAssOpRequestlist\"\n    },\n    \"versionId\" : {\n      \"$ref\" : \"#/components/schemas/Uinteger\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "UcmfNotification",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "integer",
      "baseName" : "dicEntryId",
      "getter" : "getDicEntryId",
      "setter" : "setDicEntryId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "DicEntryId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.dicEntryId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 4294967295,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "4294967295",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "dicEntryId",
      "nameInSnakeCase" : "DIC_ENTRY_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "EventType",
      "baseName" : "eventType",
      "complexType" : "EventType",
      "getter" : "getEventType",
      "setter" : "setEventType",
      "dataType" : "EventType",
      "datatypeWithEnum" : "EventType",
      "name" : "EventType",
      "defaultValue" : "EventType()",
      "defaultValueWithParam" : " = data.eventType;",
      "baseType" : "EventType",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/EventType\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "CREATION_OF_DICTIONARY_ENTRY",
          "isString" : false,
          "value" : "CREATION_OF_DICTIONARY_ENTRY"
        }, {
          "name" : "DELETION_OF_PLMN_ASSIGNED_IDS",
          "isString" : false,
          "value" : "DELETION_OF_PLMN_ASSIGNED_IDS"
        }, {
          "name" : "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDS",
          "isString" : false,
          "value" : "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDs"
        } ],
        "values" : [ "CREATION_OF_DICTIONARY_ENTRY", "DELETION_OF_PLMN_ASSIGNED_IDS", "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDs" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "eventType",
      "nameInSnakeCase" : "EVENT_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "EventType"
    }, {
      "openApiType" : "ManAssOpRequestlist",
      "baseName" : "manAssOpRequestlist",
      "complexType" : "ManAssOpRequestlist",
      "getter" : "getManAssOpRequestlist",
      "setter" : "setManAssOpRequestlist",
      "dataType" : "ManAssOpRequestlist",
      "datatypeWithEnum" : "ManAssOpRequestlist",
      "name" : "ManAssOpRequestlist",
      "defaultValue" : "ManAssOpRequestlist()",
      "defaultValueWithParam" : " = data.manAssOpRequestlist;",
      "baseType" : "ManAssOpRequestlist",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/manAssOpRequestlist\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "manAssOpRequestlist",
      "nameInSnakeCase" : "MAN_ASS_OP_REQUESTLIST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "ManAssOpRequestlist"
    }, {
      "openApiType" : "integer",
      "baseName" : "versionId",
      "getter" : "getVersionId",
      "setter" : "setVersionId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "VersionId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.versionId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "versionId",
      "nameInSnakeCase" : "VERSION_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    } ],
    "allVars" : [ {
      "openApiType" : "integer",
      "baseName" : "dicEntryId",
      "getter" : "getDicEntryId",
      "setter" : "setDicEntryId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "DicEntryId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.dicEntryId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 4294967295,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "4294967295",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "dicEntryId",
      "nameInSnakeCase" : "DIC_ENTRY_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "EventType",
      "baseName" : "eventType",
      "complexType" : "EventType",
      "getter" : "getEventType",
      "setter" : "setEventType",
      "dataType" : "EventType",
      "datatypeWithEnum" : "EventType",
      "name" : "EventType",
      "defaultValue" : "EventType()",
      "defaultValueWithParam" : " = data.eventType;",
      "baseType" : "EventType",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/EventType\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "CREATION_OF_DICTIONARY_ENTRY",
          "isString" : false,
          "value" : "CREATION_OF_DICTIONARY_ENTRY"
        }, {
          "name" : "DELETION_OF_PLMN_ASSIGNED_IDS",
          "isString" : false,
          "value" : "DELETION_OF_PLMN_ASSIGNED_IDS"
        }, {
          "name" : "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDS",
          "isString" : false,
          "value" : "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDs"
        } ],
        "values" : [ "CREATION_OF_DICTIONARY_ENTRY", "DELETION_OF_PLMN_ASSIGNED_IDS", "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDs" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "eventType",
      "nameInSnakeCase" : "EVENT_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "EventType"
    }, {
      "openApiType" : "ManAssOpRequestlist",
      "baseName" : "manAssOpRequestlist",
      "complexType" : "ManAssOpRequestlist",
      "getter" : "getManAssOpRequestlist",
      "setter" : "setManAssOpRequestlist",
      "dataType" : "ManAssOpRequestlist",
      "datatypeWithEnum" : "ManAssOpRequestlist",
      "name" : "ManAssOpRequestlist",
      "defaultValue" : "ManAssOpRequestlist()",
      "defaultValueWithParam" : " = data.manAssOpRequestlist;",
      "baseType" : "ManAssOpRequestlist",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/manAssOpRequestlist\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "manAssOpRequestlist",
      "nameInSnakeCase" : "MAN_ASS_OP_REQUESTLIST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "ManAssOpRequestlist"
    }, {
      "openApiType" : "integer",
      "baseName" : "versionId",
      "getter" : "getVersionId",
      "setter" : "setVersionId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "VersionId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.versionId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "versionId",
      "nameInSnakeCase" : "VERSION_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    } ],
    "requiredVars" : [ {
      "openApiType" : "integer",
      "baseName" : "dicEntryId",
      "getter" : "getDicEntryId",
      "setter" : "setDicEntryId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "DicEntryId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.dicEntryId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 4294967295,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "4294967295",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "dicEntryId",
      "nameInSnakeCase" : "DIC_ENTRY_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "EventType",
      "baseName" : "eventType",
      "complexType" : "EventType",
      "getter" : "getEventType",
      "setter" : "setEventType",
      "dataType" : "EventType",
      "datatypeWithEnum" : "EventType",
      "name" : "EventType",
      "defaultValue" : "EventType()",
      "defaultValueWithParam" : " = data.eventType;",
      "baseType" : "EventType",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/EventType\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "CREATION_OF_DICTIONARY_ENTRY",
          "isString" : false,
          "value" : "CREATION_OF_DICTIONARY_ENTRY"
        }, {
          "name" : "DELETION_OF_PLMN_ASSIGNED_IDS",
          "isString" : false,
          "value" : "DELETION_OF_PLMN_ASSIGNED_IDS"
        }, {
          "name" : "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDS",
          "isString" : false,
          "value" : "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDs"
        } ],
        "values" : [ "CREATION_OF_DICTIONARY_ENTRY", "DELETION_OF_PLMN_ASSIGNED_IDS", "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDs" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "eventType",
      "nameInSnakeCase" : "EVENT_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "EventType"
    } ],
    "optionalVars" : [ {
      "openApiType" : "ManAssOpRequestlist",
      "baseName" : "manAssOpRequestlist",
      "complexType" : "ManAssOpRequestlist",
      "getter" : "getManAssOpRequestlist",
      "setter" : "setManAssOpRequestlist",
      "dataType" : "ManAssOpRequestlist",
      "datatypeWithEnum" : "ManAssOpRequestlist",
      "name" : "ManAssOpRequestlist",
      "defaultValue" : "ManAssOpRequestlist()",
      "defaultValueWithParam" : " = data.manAssOpRequestlist;",
      "baseType" : "ManAssOpRequestlist",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/manAssOpRequestlist\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "manAssOpRequestlist",
      "nameInSnakeCase" : "MAN_ASS_OP_REQUESTLIST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "ManAssOpRequestlist"
    }, {
      "openApiType" : "integer",
      "baseName" : "versionId",
      "getter" : "getVersionId",
      "setter" : "setVersionId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "VersionId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.versionId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "versionId",
      "nameInSnakeCase" : "VERSION_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "integer",
      "baseName" : "dicEntryId",
      "getter" : "getDicEntryId",
      "setter" : "setDicEntryId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "DicEntryId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.dicEntryId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"maximum\" : 4294967295,\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "maximum" : "4294967295",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "dicEntryId",
      "nameInSnakeCase" : "DIC_ENTRY_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    }, {
      "openApiType" : "EventType",
      "baseName" : "eventType",
      "complexType" : "EventType",
      "getter" : "getEventType",
      "setter" : "setEventType",
      "dataType" : "EventType",
      "datatypeWithEnum" : "EventType",
      "name" : "EventType",
      "defaultValue" : "EventType()",
      "defaultValueWithParam" : " = data.eventType;",
      "baseType" : "EventType",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/EventType\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : true,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "allowableValues" : {
        "enumVars" : [ {
          "name" : "CREATION_OF_DICTIONARY_ENTRY",
          "isString" : false,
          "value" : "CREATION_OF_DICTIONARY_ENTRY"
        }, {
          "name" : "DELETION_OF_PLMN_ASSIGNED_IDS",
          "isString" : false,
          "value" : "DELETION_OF_PLMN_ASSIGNED_IDS"
        }, {
          "name" : "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDS",
          "isString" : false,
          "value" : "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDs"
        } ],
        "values" : [ "CREATION_OF_DICTIONARY_ENTRY", "DELETION_OF_PLMN_ASSIGNED_IDS", "NEW_VERSION_ID_OF_PLMN_ASSIGNED_IDs" ]
      },
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "eventType",
      "nameInSnakeCase" : "EVENT_TYPE",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "EventType"
    }, {
      "openApiType" : "ManAssOpRequestlist",
      "baseName" : "manAssOpRequestlist",
      "complexType" : "ManAssOpRequestlist",
      "getter" : "getManAssOpRequestlist",
      "setter" : "setManAssOpRequestlist",
      "dataType" : "ManAssOpRequestlist",
      "datatypeWithEnum" : "ManAssOpRequestlist",
      "name" : "ManAssOpRequestlist",
      "defaultValue" : "ManAssOpRequestlist()",
      "defaultValueWithParam" : " = data.manAssOpRequestlist;",
      "baseType" : "ManAssOpRequestlist",
      "example" : "null",
      "jsonSchema" : "{\n  \"$ref\" : \"#/components/schemas/manAssOpRequestlist\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : true,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "manAssOpRequestlist",
      "nameInSnakeCase" : "MAN_ASS_OP_REQUESTLIST",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "ManAssOpRequestlist"
    }, {
      "openApiType" : "integer",
      "baseName" : "versionId",
      "getter" : "getVersionId",
      "setter" : "setVersionId",
      "dataType" : "int32_t",
      "datatypeWithEnum" : "int32_t",
      "name" : "VersionId",
      "defaultValue" : "0",
      "defaultValueWithParam" : " = data.versionId;",
      "baseType" : "int32_t",
      "example" : "null",
      "jsonSchema" : "{\n  \"minimum\" : 0,\n  \"type\" : \"integer\"\n}",
      "minimum" : "0",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : true,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : true,
      "isInteger" : true,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : false,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : true,
      "isInherited" : false,
      "nameInCamelCase" : "versionId",
      "nameInSnakeCase" : "VERSION_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "int32_t"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ "DicEntryId", "EventType" ],
    "allMandatory" : [ "DicEntryId", "EventType" ],
    "imports" : [ "#include \"ManAssOpRequestlist.h\"", "#include \"EventType.h\"" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : true,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
}, {
  "importPath" : "#include \"UeRadioCapaId.h\"",
  "model" : {
    "anyOf" : [ ],
    "oneOf" : [ ],
    "allOf" : [ ],
    "name" : "UeRadioCapaId",
    "classname" : "UeRadioCapaId",
    "classVarName" : "UeRadioCapaId",
    "modelJson" : "{\n  \"type\" : \"object\",\n  \"properties\" : {\n    \"plmnAssiUeRadioCapId\" : {\n      \"$ref\" : \"#/components/schemas/PlmnAssiUeRadioCapId\"\n    },\n    \"manAssiUeRadioCapId\" : {\n      \"$ref\" : \"#/components/schemas/ManAssiUeRadioCapId\"\n    }\n  }\n}",
    "dataType" : "Object",
    "classFilename" : "UeRadioCapaId",
    "isAlias" : false,
    "isString" : false,
    "isInteger" : false,
    "isLong" : false,
    "isNumber" : false,
    "isNumeric" : false,
    "isFloat" : false,
    "isDouble" : false,
    "isDate" : false,
    "isDateTime" : false,
    "additionalPropertiesIsAnyType" : false,
    "vars" : [ {
      "openApiType" : "string",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "manAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getManAssiUeRadioCapId",
      "setter" : "setManAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "ManAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.manAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "manAssiUeRadioCapId",
      "nameInSnakeCase" : "MAN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "allVars" : [ {
      "openApiType" : "string",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "manAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getManAssiUeRadioCapId",
      "setter" : "setManAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "ManAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.manAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "manAssiUeRadioCapId",
      "nameInSnakeCase" : "MAN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "requiredVars" : [ ],
    "optionalVars" : [ {
      "openApiType" : "string",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "manAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getManAssiUeRadioCapId",
      "setter" : "setManAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "ManAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.manAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "manAssiUeRadioCapId",
      "nameInSnakeCase" : "MAN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "readOnlyVars" : [ ],
    "readWriteVars" : [ {
      "openApiType" : "string",
      "baseName" : "plmnAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getPlmnAssiUeRadioCapId",
      "setter" : "setPlmnAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "PlmnAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.plmnAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "plmnAssiUeRadioCapId",
      "nameInSnakeCase" : "PLMN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    }, {
      "openApiType" : "string",
      "baseName" : "manAssiUeRadioCapId",
      "complexType" : "std::string",
      "getter" : "getManAssiUeRadioCapId",
      "setter" : "setManAssiUeRadioCapId",
      "dataType" : "std::string",
      "datatypeWithEnum" : "std::string",
      "dataFormat" : "byte",
      "name" : "ManAssiUeRadioCapId",
      "defaultValue" : "\"\"",
      "defaultValueWithParam" : " = data.manAssiUeRadioCapId;",
      "baseType" : "std::string",
      "example" : "null",
      "jsonSchema" : "{\n  \"type\" : \"string\",\n  \"format\" : \"byte\"\n}",
      "exclusiveMinimum" : false,
      "exclusiveMaximum" : false,
      "required" : false,
      "deprecated" : false,
      "hasMoreNonReadOnly" : false,
      "isPrimitiveType" : false,
      "isModel" : false,
      "isContainer" : false,
      "isString" : false,
      "isNumeric" : false,
      "isInteger" : false,
      "isLong" : false,
      "isNumber" : false,
      "isFloat" : false,
      "isDouble" : false,
      "isDecimal" : false,
      "isByteArray" : true,
      "isBinary" : false,
      "isFile" : false,
      "isBoolean" : false,
      "isDate" : false,
      "isDateTime" : false,
      "isUuid" : false,
      "isUri" : false,
      "isEmail" : false,
      "isNull" : false,
      "isFreeFormObject" : false,
      "isAnyType" : false,
      "isArray" : false,
      "isMap" : false,
      "isEnum" : false,
      "isReadOnly" : false,
      "isWriteOnly" : false,
      "isNullable" : false,
      "isSelfReference" : false,
      "isCircularReference" : false,
      "isDiscriminator" : false,
      "vars" : [ ],
      "requiredVars" : [ ],
      "vendorExtensions" : { },
      "hasValidation" : false,
      "isInherited" : false,
      "nameInCamelCase" : "manAssiUeRadioCapId",
      "nameInSnakeCase" : "MAN_ASSI_UE_RADIO_CAP_ID",
      "uniqueItems" : false,
      "isXmlAttribute" : false,
      "isXmlWrapped" : false,
      "additionalPropertiesIsAnyType" : false,
      "hasVars" : false,
      "hasRequired" : false,
      "iexclusiveMaximum" : false,
      "datatype" : "std::string"
    } ],
    "parentVars" : [ ],
    "mandatory" : [ ],
    "allMandatory" : [ ],
    "imports" : [ "#include <string>" ],
    "hasVars" : true,
    "emptyVars" : false,
    "hasMoreModels" : false,
    "hasEnums" : false,
    "isEnum" : false,
    "hasValidation" : false,
    "isNullable" : false,
    "hasRequired" : false,
    "hasOptional" : true,
    "isArray" : false,
    "hasChildren" : false,
    "isMap" : false,
    "isNull" : false,
    "isDeprecated" : false,
    "hasOnlyReadOnly" : false,
    "vendorExtensions" : { },
    "isAdditionalPropertiesTrue" : false,
    "uniqueItems" : false,
    "exclusiveMinimum" : false,
    "exclusiveMaximum" : false,
    "isModel" : false,
    "isClassnameSanitized" : false
  }
} ]
[main] WARN  o.o.codegen.DefaultCodegen - Empty operationId found for path: post myNotification_. Renamed to auto-generated operationId: myNotification_Post
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/api/ADictionaryEntryDocumentApi.cpp
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/api/ADictionaryEntryDocumentApi.cpp
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/api/ADictionaryEntryDocumentApi.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/api/ADictionaryEntryDocumentApi.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/impl/ADictionaryEntryDocumentApiImpl.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/impl/ADictionaryEntryDocumentApiImpl.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/api/DicEntryIdDocumentApi.cpp
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/api/DicEntryIdDocumentApi.cpp
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/api/DicEntryIdDocumentApi.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/api/DicEntryIdDocumentApi.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/impl/DicEntryIdDocumentApiImpl.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/impl/DicEntryIdDocumentApiImpl.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/api/DictionaryEntryStoreApi.cpp
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/api/DictionaryEntryStoreApi.cpp
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/api/DictionaryEntryStoreApi.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/api/DictionaryEntryStoreApi.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/impl/DictionaryEntryStoreApiImpl.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/impl/DictionaryEntryStoreApiImpl.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/api/IndividualSubscriptionDocumentApi.cpp
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/api/IndividualSubscriptionDocumentApi.cpp
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/api/IndividualSubscriptionDocumentApi.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/api/IndividualSubscriptionDocumentApi.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/impl/IndividualSubscriptionDocumentApiImpl.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/impl/IndividualSubscriptionDocumentApiImpl.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/api/SubscriptionsCollectionApi.cpp
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/api/SubscriptionsCollectionApi.cpp
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/api/SubscriptionsCollectionApi.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/api/SubscriptionsCollectionApi.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/impl/SubscriptionsCollectionApiImpl.h
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/impl/SubscriptionsCollectionApiImpl.h
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/main-api-server.cpp
[main] INFO  o.o.c.languages.AbstractCppCodegen - Successfully executed: /usr/bin/clang-format -i  /root/openapi-generator/server_out_29673_414/main-api-server.cpp
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/CMakeLists.txt
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/README.md
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/jsonParser.hpp
[main] INFO  o.o.codegen.TemplateManager - Skipped /root/openapi-generator/server_out_29673_414/.openapi-generator-ignore (Skipped by supportingFiles options supplied by user.)
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/.openapi-generator/VERSION
[main] INFO  o.o.codegen.TemplateManager - writing file /root/openapi-generator/server_out_29673_414/.openapi-generator/FILES
################################################################################
# Thanks for using OpenAPI Generator.                                          #
# Please consider donation to help us maintain this project ?                 #
# https://opencollective.com/openapi_generator/donate                          #
################################################################################
