/**
 * Nudm_SDM
 * Nudm Subscriber Data Management Service. ï¿½ 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
 *
 * The version of the OpenAPI document: 2.1.2
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.1.1-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * UpuData.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_UpuData_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_UpuData_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "Snssai.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  UpuData
    : public ModelBase
{
public:
    UpuData();
    virtual ~UpuData();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// UpuData members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getSecPacket() const;
    bool secPacketIsSet() const;
    void unsetSecPacket();

    void setSecPacket(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<Snssai>>& getDefaultConfNssai();
    bool defaultConfNssaiIsSet() const;
    void unsetDefaultConfNssai();

    void setDefaultConfNssai(const std::vector<std::shared_ptr<Snssai>>& value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getRoutingId() const;
    bool routingIdIsSet() const;
    void unsetRoutingId();

    void setRoutingId(const utility::string_t& value);


protected:
    utility::string_t m_SecPacket;
    bool m_SecPacketIsSet;
    std::vector<std::shared_ptr<Snssai>> m_DefaultConfNssai;
    bool m_DefaultConfNssaiIsSet;
    utility::string_t m_RoutingId;
    bool m_RoutingIdIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_UpuData_H_ */
